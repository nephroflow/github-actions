<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="4105" skipped="42" failures="0" errors="0" time="573.106346" timestamp="2020-06-25T14:04:19+00:00" hostname="fv-az145">
<properties>
<property name="seed" value="41533"/>
</properties>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole updates role for admin users" file="./spec/requests/users/update_user_role_spec.rb" time="0.294799"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole fails to the user&apos;s role if the role does not exist" file="./spec/requests/users/update_user_role_spec.rb" time="0.111406"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole updates the user&apos;s role" file="./spec/requests/users/update_user_role_spec.rb" time="0.095017"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole requires authorization" file="./spec/requests/users/update_user_role_spec.rb" time="0.042309"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole is allowed to demote someone to a role without app_admin rights when having the right" file="./spec/requests/users/update_user_role_spec.rb" time="0.080163"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole is allowed to promote someone to a role with app_admin when having the right" file="./spec/requests/users/update_user_role_spec.rb" time="0.059107"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole is not allowed to demote someone to a role without app_admin rights without having the right" file="./spec/requests/users/update_user_role_spec.rb" time="0.050307"></testcase>
<testcase classname="spec.requests.users.update_user_role_spec" name="UpdateUserRole is not allowed to promote someone to a role with app_admin without having the right" file="./spec/requests/users/update_user_role_spec.rb" time="0.044505"></testcase>
<testcase classname="spec.requests.medications.delete_product_spec" name="Delete Product returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/delete_product_spec.rb" time="0.131064"></testcase>
<testcase classname="spec.requests.medications.delete_product_spec" name="Delete Product returns success (200) and deletes now if no parameter is given" file="./spec/requests/medications/delete_product_spec.rb" time="0.093669"></testcase>
<testcase classname="spec.requests.get_code_systems_spec" name="GetCodeSystems returns an list of code systems" file="./spec/requests/get_code_systems_spec.rb" time="0.103321"></testcase>
<testcase classname="spec.requests.get_code_systems_spec" name="GetCodeSystems returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/get_code_systems_spec.rb" time="0.024350"></testcase>
<testcase classname="spec.requests.patients.patient_addresses_spec" name="Patient&apos;s addresses returns all addresses for a patient" file="./spec/requests/patients/patient_addresses_spec.rb" time="0.240132"></testcase>
<testcase classname="spec.requests.patients.patient_addresses_spec" name="Patient&apos;s addresses returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/patient_addresses_spec.rb" time="0.082107"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_examinations_spec" name="GetAccessSiteExaminations returns not_found (404) if the site examination cannot be found" file="./spec/requests/vascular_access/get_vascular_access_site_examinations_spec.rb" time="0.033270"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_examinations_spec" name="GetAccessSiteExaminations returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_vascular_access_site_examinations_spec.rb" time="0.144591"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_examinations_spec" name="GetAccessSiteExaminations returns the site examinations ordered by date descending" file="./spec/requests/vascular_access/get_vascular_access_site_examinations_spec.rb" time="0.254821"></testcase>
<testcase classname="spec.models.vascular_access.intervention_spec" name="VascularAccess::Intervention is expected to belong to site required: true" file="./spec/models/vascular_access/intervention_spec.rb" time="0.015614"></testcase>
<testcase classname="spec.models.vascular_access.intervention_spec" name="VascularAccess::Intervention is expected to belong to intervention_type required: true" file="./spec/models/vascular_access/intervention_spec.rb" time="0.003814"></testcase>
<testcase classname="spec.requests.medications.create_medication_prescription_additions_spec" name="Create medication prescription info returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/create_medication_prescription_additions_spec.rb" time="0.027123"></testcase>
<testcase classname="spec.requests.medications.create_medication_prescription_additions_spec" name="Create medication prescription info returns created (201) and the medication prescription info" file="./spec/requests/medications/create_medication_prescription_additions_spec.rb" time="0.043071"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_email_contact_spec" name="Center CentersEmailContact requires the correct rights to update" file="./spec/requests/infrastructure/update_center_email_contact_spec.rb" time="0.052957"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_email_contact_spec" name="Center CentersEmailContact fails if a center with given id is not found" file="./spec/requests/infrastructure/update_center_email_contact_spec.rb" time="0.027316"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_email_contact_spec" name="Center CentersEmailContact updates the center email contact" file="./spec/requests/infrastructure/update_center_email_contact_spec.rb" time="0.040391"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_email_contact_spec" name="Center CentersEmailContact returns unprocessable entity (422) if the email_contact is not valid" file="./spec/requests/infrastructure/update_center_email_contact_spec.rb" time="0.036746"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds returns active wounds" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.124301"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.052379"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds returns not_found (404) if the patient cannot be found" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.032473"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds orders wounds by registration date descending" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.104498"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds returns paginated result" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.113214"></testcase>
<testcase classname="spec.requests.wounds.get_wounds_spec" name="GetWounds returns historic wounds" file="./spec/requests/wounds/get_wounds_spec.rb" time="0.108361"></testcase>
<testcase classname="spec.requests.medications.create_company_spec" name="Create Company returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_company_spec.rb" time="0.043634"></testcase>
<testcase classname="spec.requests.medications.create_company_spec" name="Create Company returns unprocessable entity (422) when creating doubles" file="./spec/requests/medications/create_company_spec.rb" time="0.049886"></testcase>
<testcase classname="spec.requests.medications.create_company_spec" name="Create Company returns success (200) and creates the route when in in a unsupervised source" file="./spec/requests/medications/create_company_spec.rb" time="0.060651"></testcase>
<testcase classname="spec.requests.medications.create_company_spec" name="Create Company returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_company_spec.rb" time="0.037636"></testcase>
<testcase classname="spec.requests.medications.create_company_spec" name="Create Company returns not found (404) when using an undefined source" file="./spec/requests/medications/create_company_spec.rb" time="0.034656"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as discussed fails if journal entry does not exist" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.087210"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as discussed fails if briefing does not exist" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.117446"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as discussed mark the given journal entry as discussed" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.177391"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as discussed fails if briefing is closed" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.144656"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as discussed fails if journal entry was not selected" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.118227"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as un-discussed fails if briefing does not exist" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.102295"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as un-discussed fails if journal entry was not selected" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.135154"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as un-discussed fails if journal entry does not exist" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.048583"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as un-discussed mark the given journal entry as un-discussed" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.156362"></testcase>
<testcase classname="spec.requests.briefings.briefing_discussions_spec" name="BriefingDiscussions when marking a journal entry as un-discussed fails if briefing is closed" file="./spec/requests/briefings/briefing_discussions_spec.rb" time="0.188290"></testcase>
<testcase classname="spec.models.charts.vascular_access_flow_history_spec" name="Charts::VascularAccessFlowHistory#call returns access flow measurements for last 2 years" file="./spec/models/charts/vascular_access_flow_history_spec.rb" time="0.932974"></testcase>
<testcase classname="spec.lib.user_time_spec" name="UserTime parses the provided customer time to the users timezone" file="./spec/lib/user_time_spec.rb" time="0.017361"></testcase>
<testcase classname="spec.lib.user_time_spec" name="UserTime parses the provided time in the users timezone" file="./spec/lib/user_time_spec.rb" time="0.002680"></testcase>
<testcase classname="spec.lib.user_time_spec" name="UserTime returns the current time in the users timezone" file="./spec/lib/user_time_spec.rb" time="0.002914"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry fails if journal entry is not in the time range" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.125269"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry fails if journal entry does not exist" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.058942"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry selects the given journal entry" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.143171"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry selects again a journal entry" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.168062"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry fails if briefing is closed" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.119000"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when selecting a journal entry fails if briefing does not exist" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.105574"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when unselecting a journal entry fails if journal entry is not selected" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.121649"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when unselecting a journal entry fails if briefing does not exist" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.120206"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when unselecting a journal entry fails if journal entry does not exist" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.047620"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when unselecting a journal entry unselects the given journal entry" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.145895"></testcase>
<testcase classname="spec.requests.briefings.briefing_selections_spec" name="BriefingSelections when unselecting a journal entry fails if briefing is closed" file="./spec/requests/briefings/briefing_selections_spec.rb" time="0.137428"></testcase>
<testcase classname="spec.requests.patients.patient_redirects_spec" name="PatientRedirects redirects `/p/:hospital_id` to `/patients/:patient_uid`" file="./spec/requests/patients/patient_redirects_spec.rb" time="0.100588"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis does not include absent patients" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.487761"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis contains patients with transport types" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.486809"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis does not include patients that have no planned sessions" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.454569"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis counts back_transport_type for nil as identical to forth_transport_type" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.432284"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis deviations includes patients with deviations (added session)" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.435495"></testcase>
<testcase classname="spec.models.exports.exporters.transport_prognosis_spec" name="Exports::Exporters::TransportPrognosis deviations includes patients with deviations (removed session)" file="./spec/models/exports/exporters/transport_prognosis_spec.rb" time="0.514295"></testcase>
<testcase classname="spec.requests.wounds.add_wound_image_spec" name="AddWoundImage returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/add_wound_image_spec.rb" time="0.102257"></testcase>
<testcase classname="spec.requests.wounds.add_wound_image_spec" name="AddWoundImage creates a new wound image for the given wound evaluation" file="./spec/requests/wounds/add_wound_image_spec.rb" time="1.060761"></testcase>
<testcase classname="spec.requests.patients.update_insurance_spec" name="Patients UpdatePatientInsurance denies updating patients insurance if not granted" file="./spec/requests/patients/update_insurance_spec.rb" time="0.090565"></testcase>
<testcase classname="spec.requests.patients.update_insurance_spec" name="Patients UpdatePatientInsurance updates a patients  insurance" file="./spec/requests/patients/update_insurance_spec.rb" time="0.103707"></testcase>
<testcase classname="spec.requests.patients.update_insurance_spec" name="Patients UpdatePatientInsurance updates only the given fields" file="./spec/requests/patients/update_insurance_spec.rb" time="0.092531"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns a carbon copy" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.332612"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.246860"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns success (200) and updates the billing item data" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.300950"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item touches the billing item timestamp" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.315470"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns unprocessable entity (422) when syncing a billing item belonging to a ready exportable" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.309021"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns unprocessable entity (422) when syncing a billing item belonging to an exported exportable" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.276778"></testcase>
<testcase classname="spec.requests.billing_items.sync_billing_item_spec" name="Sync billing item returns not found (404) if the billing item isn&apos;t found" file="./spec/requests/billing_items/sync_billing_item_spec.rb" time="0.040821"></testcase>
<testcase classname="spec.models.medications.services.create_administration_route_spec" name="Medications::Services::CreateAdministrationRoute creates an administration route" file="./spec/models/medications/services/create_administration_route_spec.rb" time="0.071253"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry doesn&apos;t exists doesn&apos;t includes entry in journals if the creation fails" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.036839"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry doesn&apos;t exists creates an new logbook entry and auto includes it in the provided journals" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.004710"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry doesn&apos;t exists creates an new logbook entry" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.004040"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry exists collates existing logbook entry" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.017148"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry exists doesn&apos;t includes entry in journals if the creation fails" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.004074"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry exists does not collate existing logbook entry with nil note" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.003095"></testcase>
<testcase classname="spec.jobs.logbook_entry_job_spec" name="LogbookEntryJob when entry exists collates existing logbook entry and auto includes it in the provided journals" file="./spec/jobs/logbook_entry_job_spec.rb" time="0.004366"></testcase>
<testcase classname="spec.requests.patients.update_patient_basic_information_spec" name="Update patient updating a patient&apos;s basic information fails with not_found when the patient does not exis" file="./spec/requests/patients/update_patient_basic_information_spec.rb" time="0.046149"></testcase>
<testcase classname="spec.requests.patients.update_patient_basic_information_spec" name="Update patient updating a patient&apos;s basic information fails with unprocessable_entity when trying to assign an invalid attending doctor" file="./spec/requests/patients/update_patient_basic_information_spec.rb" time="0.064974"></testcase>
<testcase classname="spec.requests.patients.update_patient_basic_information_spec" name="Update patient updating a patient&apos;s basic information is forbidden when unauthorized" file="./spec/requests/patients/update_patient_basic_information_spec.rb" time="0.052037"></testcase>
<testcase classname="spec.requests.patients.update_patient_basic_information_spec" name="Update patient updating a patient&apos;s basic information succeeds when authorized and with a valid payload" file="./spec/requests/patients/update_patient_basic_information_spec.rb" time="0.121244"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_spec" name="Patients::PatientDiagnosis audits the update action" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_spec.rb" time="0.104662"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_spec.rb" time="0.081463"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns success (200) and the updated patient diagnosis" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_spec.rb" time="0.093597"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType (de-)serializes" file="./spec/types/ratio_type_spec.rb" time="0.007398"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType#cast returns nil when object is nil" file="./spec/types/ratio_type_spec.rb" time="0.001805"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType#cast returns a ratio when the object is a hash" file="./spec/types/ratio_type_spec.rb" time="0.016846"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType#cast returns a ratio when the object is a string" file="./spec/types/ratio_type_spec.rb" time="0.007601"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType#cast raises a TypeError when the object cannot be cast" file="./spec/types/ratio_type_spec.rb" time="0.002044"></testcase>
<testcase classname="spec.types.ratio_type_spec" name="RatioType#cast returns the object when the object is a ratio" file="./spec/types/ratio_type_spec.rb" time="0.004618"></testcase>
<testcase classname="spec.requests.patients.delete_address_for_patient_spec" name="DeleteAddressForPatient deletes an address" file="./spec/requests/patients/delete_address_for_patient_spec.rb" time="0.076926"></testcase>
<testcase classname="spec.requests.patients.delete_address_for_patient_spec" name="DeleteAddressForPatient rejects deleting a patient&apos;s legal domicle" file="./spec/requests/patients/delete_address_for_patient_spec.rb" time="0.067927"></testcase>
<testcase classname="spec.requests.patients.delete_address_for_patient_spec" name="DeleteAddressForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_address_for_patient_spec.rb" time="0.071839"></testcase>
<testcase classname="spec.requests.medications.standing_orders.get_standing_orders_spec" name="GetStandingOrders returns product standing orders sorted by company name" file="./spec/requests/medications/standing_orders/get_standing_orders_spec.rb" time="0.207574"></testcase>
<testcase classname="spec.requests.medications.standing_orders.get_standing_orders_spec" name="GetStandingOrders returns magistral standing orders sorted asc by formula &gt; form &gt; dose" file="./spec/requests/medications/standing_orders/get_standing_orders_spec.rb" time="0.135679"></testcase>
<testcase classname="spec.requests.medications.standing_orders.get_standing_orders_spec" name="GetStandingOrders returns product standing orders" file="./spec/requests/medications/standing_orders/get_standing_orders_spec.rb" time="0.334719"></testcase>
<testcase classname="spec.requests.medications.standing_orders.get_standing_orders_spec" name="GetStandingOrders returns (403) if the user isn&apos;t authorized" file="./spec/requests/medications/standing_orders/get_standing_orders_spec.rb" time="0.029472"></testcase>
<testcase classname="spec.requests.medications.standing_orders.get_standing_orders_spec" name="GetStandingOrders returns magistral standing orders" file="./spec/requests/medications/standing_orders/get_standing_orders_spec.rb" time="0.252673"></testcase>
<testcase classname="spec.integrations.executions.exports.medication_administration_prognosis_spec" name="Asynchronous exports: medication_administration_prognosis generates the report" file="./spec/integrations/executions/exports/medication_administration_prognosis_spec.rb" time="1.107488"></testcase>
<testcase classname="spec.models.users.right_spec" name="Users::Right returns rights sorted by name" file="./spec/models/users/right_spec.rb" time="0.009623"></testcase>
<testcase classname="spec.models.users.right_spec" name="Users::Right returns rights categories sorted by name" file="./spec/models/users/right_spec.rb" time="0.010834"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to have carbon :id, :order_type, :category, and :description" file="./spec/models/orders/order_spec.rb" time="0.021646"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to belong to patient required: true" file="./spec/models/orders/order_spec.rb" time="0.008368"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to validate that :moment is either ‹&quot;preparation_phase&quot;›, ‹&quot;connect_phase&quot;›, ‹&quot;treatment_phase&quot;›, ‹&quot;disconnect_phase&quot;›, ‹&quot;reflect_phase&quot;›, or ‹&quot;outside_session&quot;›" file="./spec/models/orders/order_spec.rb" time="0.029343"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to validate that :order_type cannot be empty/falsy" file="./spec/models/orders/order_spec.rb" time="0.013451"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to validate that :category is either ‹&quot;follow_up&quot;›, ‹&quot;measurement&quot;›, ‹&quot;administration&quot;›, ‹&quot;examination&quot;›, or ‹&quot;care&quot;›" file="./spec/models/orders/order_spec.rb" time="0.028613"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to validate that :frequency is either ‹&quot;specific_dates&quot;›, ‹&quot;every_session&quot;›, ‹&quot;every_week&quot;›, ‹&quot;even_weeks&quot;›, ‹&quot;odd_weeks&quot;›, or ‹&quot;first_full_week_of_the_month&quot;›" file="./spec/models/orders/order_spec.rb" time="0.032149"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order cascades destroy to billing items" file="./spec/models/orders/order_spec.rb" time="0.164241"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order is expected to have one billing_item class_name =&gt; Billing::Item dependent =&gt; destroy" file="./spec/models/orders/order_spec.rb" time="0.002028"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.future returns future orders" file="./spec/models/orders/order_spec.rb" time="0.086377"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.days sets a default value" file="./spec/models/orders/order_spec.rb" time="0.003860"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#stop! fails stopping an ended order" file="./spec/models/orders/order_spec.rb" time="0.044777"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#stop! fails stopping an archived order" file="./spec/models/orders/order_spec.rb" time="0.033199"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#stop! fails stopping a one-off order" file="./spec/models/orders/order_spec.rb" time="0.047291"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#stop! fails stopping a recurring order in the future" file="./spec/models/orders/order_spec.rb" time="0.044899"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#stop! stops a recurring order" file="./spec/models/orders/order_spec.rb" time="0.050605"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#order_by_future_date orders future orders by ascending start_date or most recent future date" file="./spec/models/orders/order_spec.rb" time="0.076982"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived retuns an archived order" file="./spec/models/orders/order_spec.rb" time="0.035539"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return an order if start date is in the past and end date is in the future" file="./spec/models/orders/order_spec.rb" time="0.036030"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return an recurring order in the past" file="./spec/models/orders/order_spec.rb" time="0.040104"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return an order if start date is in the past and no end date is set" file="./spec/models/orders/order_spec.rb" time="0.051009"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return a one-off order for today" file="./spec/models/orders/order_spec.rb" time="0.044574"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return an order if start date is in the future" file="./spec/models/orders/order_spec.rb" time="0.032896"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return a past one-off order" file="./spec/models/orders/order_spec.rb" time="0.051615"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.archived does not return a future one-off order" file="./spec/models/orders/order_spec.rb" time="0.043193"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#validate_days_inclusion validates to true when all days are in the list" file="./spec/models/orders/order_spec.rb" time="0.065521"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#validate_days_inclusion validates to false when a day is not in the list" file="./spec/models/orders/order_spec.rb" time="0.062036"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#future? recurring orders returns true if start date is in the future and end date is unspecified" file="./spec/models/orders/order_spec.rb" time="0.002023"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#future? recurring orders returns true if start date is in the future" file="./spec/models/orders/order_spec.rb" time="0.001930"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#future? recurring orders returns true if start date is today and end date is in the future" file="./spec/models/orders/order_spec.rb" time="0.001940"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#future? one-time orders returns true if date is in the future" file="./spec/models/orders/order_spec.rb" time="0.002108"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation validates if start date is today and end date in the future" file="./spec/models/orders/order_spec.rb" time="0.010606"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation validates if start and end date overlap" file="./spec/models/orders/order_spec.rb" time="0.011801"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation does not validate if end date is in the past" file="./spec/models/orders/order_spec.rb" time="0.010311"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation validates if start date is in the past, without an end date" file="./spec/models/orders/order_spec.rb" time="0.011949"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation validates if start date is in the past and end date in the future" file="./spec/models/orders/order_spec.rb" time="0.009489"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order recurring orders validation does not validate if both start and end date are today" file="./spec/models/orders/order_spec.rb" time="0.012566"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for a specific date(s) order" file="./spec/models/orders/order_spec.rb" time="0.035751"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for a recurring order normalizes `start_date` column when `start_date` is today" file="./spec/models/orders/order_spec.rb" time="0.037371"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for a recurring order nullifies `date` column" file="./spec/models/orders/order_spec.rb" time="0.030218"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for a recurring order normalizes `start_date` and `end_date` columns" file="./spec/models/orders/order_spec.rb" time="0.070234"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for a recurring order defaults `start_date` column to current time if it&apos;s today" file="./spec/models/orders/order_spec.rb" time="0.049805"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#save normalizes date columns for an every session order nullifies `date` and `days` columns" file="./spec/models/orders/order_spec.rb" time="0.044724"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns true if start date is today and end date is in the future" file="./spec/models/orders/order_spec.rb" time="0.005494"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns true if start date is in the past and end date is today and time is after current time" file="./spec/models/orders/order_spec.rb" time="0.002464"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns true if it starts in the past and has no end date" file="./spec/models/orders/order_spec.rb" time="0.003218"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns false if start date is in the past and end date is today and time is before current time" file="./spec/models/orders/order_spec.rb" time="0.002576"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns false if start date is in the past and end date is in the past" file="./spec/models/orders/order_spec.rb" time="0.003300"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? recurring orders returns true if start date is today and end date is unspecified" file="./spec/models/orders/order_spec.rb" time="0.003213"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? one-off orders returns true if date is today" file="./spec/models/orders/order_spec.rb" time="0.003694"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#active? one-off orders returns false if date is in the past" file="./spec/models/orders/order_spec.rb" time="0.002476"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order one-off orders validation validates if date is today" file="./spec/models/orders/order_spec.rb" time="0.017136"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order one-off orders validation validates if date is in the future" file="./spec/models/orders/order_spec.rb" time="0.013664"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order one-off orders validation does not validate if date is in the past" file="./spec/models/orders/order_spec.rb" time="0.038865"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return an order if start date is in the future" file="./spec/models/orders/order_spec.rb" time="0.076869"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return an order if start date is in the past and no end date is set" file="./spec/models/orders/order_spec.rb" time="0.078486"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic returns an order if both start date and end date are in the past" file="./spec/models/orders/order_spec.rb" time="0.080060"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return an archived order" file="./spec/models/orders/order_spec.rb" time="0.042769"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return an order if start date is in the past and end date is in the future" file="./spec/models/orders/order_spec.rb" time="0.054545"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return a future one-off order" file="./spec/models/orders/order_spec.rb" time="0.042710"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic does not return a one-off order for today" file="./spec/models/orders/order_spec.rb" time="0.034159"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.historic returns a past one-off order" file="./spec/models/orders/order_spec.rb" time="0.038080"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active.orders_for(patient:) returns an empty list if a one-off orders is in the past" file="./spec/models/orders/order_spec.rb" time="0.082396"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active.orders_for(patient:) returns an empty list if orders are in the past" file="./spec/models/orders/order_spec.rb" time="0.078787"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active.orders_for(patient:) returns a patient having an order for today" file="./spec/models/orders/order_spec.rb" time="0.074163"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active.orders_for(patient:) returns a patient having a one-off order for today" file="./spec/models/orders/order_spec.rb" time="0.064139"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active one-off orders returns an empty list if dates are in the future" file="./spec/models/orders/order_spec.rb" time="0.048940"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active one-off orders returns an empty list if dates are in the past" file="./spec/models/orders/order_spec.rb" time="0.037545"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active one-off orders returns an order if date is today" file="./spec/models/orders/order_spec.rb" time="0.037312"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active one-off orders returns an order if dates are in the past and the future" file="./spec/models/orders/order_spec.rb" time="0.045338"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active recurring orders returns an order if start date is in the past and end date is today" file="./spec/models/orders/order_spec.rb" time="0.046592"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active recurring orders returns an order if start date is today and end date is unspecified" file="./spec/models/orders/order_spec.rb" time="0.032218"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active recurring orders returns an empty list if start date and end date are in the past" file="./spec/models/orders/order_spec.rb" time="0.045994"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order.active recurring orders returns an order if start date is in the past and end date is unspecified" file="./spec/models/orders/order_spec.rb" time="0.033425"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#archive! fails on an already archived order" file="./spec/models/orders/order_spec.rb" time="0.030215"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#archive! archives an ended order" file="./spec/models/orders/order_spec.rb" time="0.036911"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#archive! archives a recurring order" file="./spec/models/orders/order_spec.rb" time="0.033079"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#archive! archives a one-off order" file="./spec/models/orders/order_spec.rb" time="0.042457"></testcase>
<testcase classname="spec.models.orders.order_spec" name="Orders::Order#order_by_past_date orders historic orders by descending end_date or most recent past date" file="./spec/models/orders/order_spec.rb" time="0.056719"></testcase>
<testcase classname="spec.models.patients.patient_diet_spec" name="Patients::PatientDiet is expected to belong to diet required: true" file="./spec/models/patients/patient_diet_spec.rb" time="0.020185"></testcase>
<testcase classname="spec.models.patients.patient_diet_spec" name="Patients::PatientDiet is expected to belong to created_by required: true" file="./spec/models/patients/patient_diet_spec.rb" time="0.004165"></testcase>
<testcase classname="spec.models.patients.patient_diet_spec" name="Patients::PatientDiet is expected to belong to patient required: true" file="./spec/models/patients/patient_diet_spec.rb" time="0.005607"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator error messages when the message is defined adds the customized message" file="./spec/validators/includes_validator_spec.rb" time="0.001621"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator error messages when the message is not defined adds the default message" file="./spec/validators/includes_validator_spec.rb" time="0.002025"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator validations when payload contains the one key is expected to be valid" file="./spec/validators/includes_validator_spec.rb" time="0.001656"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator validations when payload does not contain all keys is expected not to be valid" file="./spec/validators/includes_validator_spec.rb" time="0.003404"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator validations when payload contains empty key is expected not to be valid" file="./spec/validators/includes_validator_spec.rb" time="0.002095"></testcase>
<testcase classname="spec.validators.includes_validator_spec" name="IncludesValidator validations when payload contains all keys is expected to be valid" file="./spec/validators/includes_validator_spec.rb" time="0.001563"></testcase>
<testcase classname="spec.lib.parameter.types.float_spec" name="Parameter::Types::Float must be initialized with a numeric value" file="./spec/lib/parameter/types/float_spec.rb" time="0.069278"></testcase>
<testcase classname="spec.lib.parameter.types.float_spec" name="Parameter::Types::Float fails to create float parameter with incompatible units" file="./spec/lib/parameter/types/float_spec.rb" time="0.026289"></testcase>
<testcase classname="spec.lib.parameter.types.float_spec" name="Parameter::Types::Float coerces a numeric value into a floating point number" file="./spec/lib/parameter/types/float_spec.rb" time="0.002110"></testcase>
<testcase classname="spec.lib.parameter.types.float_spec" name="Parameter::Types::Float#display_value properly converts value" file="./spec/lib/parameter/types/float_spec.rb" time="0.002823"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to have many item_stocks class_name =&gt; Medications::Formulary::ItemStock" file="./spec/models/infrastructure/stock_spec.rb" time="0.009983"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to have carbon :id, :name, and :external_identifier" file="./spec/models/infrastructure/stock_spec.rb" time="0.006974"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to validate that :name is case-sensitively unique within the scope of :external_identifier" file="./spec/models/infrastructure/stock_spec.rb" time="0.019857"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/stock_spec.rb" time="0.015634"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to validate that :external_identifier is case-sensitively unique as long as it is not blank" file="./spec/models/infrastructure/stock_spec.rb" time="0.021225"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock is expected to have many formulary_items class_name =&gt; Medications::Formulary::Item through item_stocks" file="./spec/models/infrastructure/stock_spec.rb" time="0.007112"></testcase>
<testcase classname="spec.models.infrastructure.stock_spec" name="Infrastructure::Stock validates uniqueness of stocks and central stocks" file="./spec/models/infrastructure/stock_spec.rb" time="0.026950"></testcase>
<testcase classname="spec.models.concerns.slug_spec" name="Slug validates the slug column" file="./spec/models/concerns/slug_spec.rb" time="0.015365"></testcase>
<testcase classname="spec.models.concerns.slug_spec" name="Slug#sluggify when slug column exists when no slug_column is set raises an exception" file="./spec/models/concerns/slug_spec.rb" time="0.002404"></testcase>
<testcase classname="spec.models.concerns.slug_spec" name="Slug#sluggify when slug column exists when slug_column is set parameterizes that value when validation is called" file="./spec/models/concerns/slug_spec.rb" time="0.002319"></testcase>
<testcase classname="spec.models.concerns.slug_spec" name="Slug#sluggify when no slug column exists raises an exception" file="./spec/models/concerns/slug_spec.rb" time="0.009065"></testcase>
<testcase classname="spec.lib.auth.oidc.user_info_spec" name="Auth::OIDC::UserInfo#email returns user&apos;s email" file="./spec/lib/auth/oidc/user_info_spec.rb" time="0.001832"></testcase>
<testcase classname="spec.lib.auth.oidc.user_info_spec" name="Auth::OIDC::UserInfo#username returns user&apos;s username" file="./spec/lib/auth/oidc/user_info_spec.rb" time="0.001744"></testcase>
<testcase classname="spec.lib.auth.oidc.user_info_spec" name="Auth::OIDC::UserInfo#last_name returns user&apos;s last name" file="./spec/lib/auth/oidc/user_info_spec.rb" time="0.001834"></testcase>
<testcase classname="spec.lib.auth.oidc.user_info_spec" name="Auth::OIDC::UserInfo#first_name returns user&apos;s first name" file="./spec/lib/auth/oidc/user_info_spec.rb" time="0.002744"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_entries_spec" name="GetLogbookEntries returns entries ordered by date descending" file="./spec/requests/logbook/get_logbook_entries_spec.rb" time="0.365771"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_entries_spec" name="GetLogbookEntries returns paginated entries" file="./spec/requests/logbook/get_logbook_entries_spec.rb" time="0.592034"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_entries_spec" name="GetLogbookEntries returns entries with meta data" file="./spec/requests/logbook/get_logbook_entries_spec.rb" time="0.183992"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_entries_spec" name="GetLogbookEntries returns 404 when `session_id` doesn&apos;t exist" file="./spec/requests/logbook/get_logbook_entries_spec.rb" time="0.032830"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_entries_spec" name="GetLogbookEntries returns 403 when user doesn&apos;t have the required rights" file="./spec/requests/logbook/get_logbook_entries_spec.rb" time="0.148552"></testcase>
<testcase classname="spec.requests.medications.create_category_spec" name="Create Category returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_category_spec.rb" time="0.038195"></testcase>
<testcase classname="spec.requests.medications.create_category_spec" name="Create Category returns success (200)" file="./spec/requests/medications/create_category_spec.rb" time="0.042219"></testcase>
<testcase classname="spec.requests.medications.create_category_spec" name="Create Category returns unprocessable entity (422) when creating doubles" file="./spec/requests/medications/create_category_spec.rb" time="0.041969"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.028119"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link returns unprocessable entity (422) if the type does not exist" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.037893"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link xperthis care links returns unprocessable entity (422) if the options are invalid" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.035821"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link xperthis care links returns unprocessable entity (422) if the options are not specified" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.039958"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link xperthis care links returns created (201) and the context link" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.036629"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link static links returns created (201) and the context link" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.041751"></testcase>
<testcase classname="spec.requests.context_links.create_context_link_spec" name="Create context link templated links returns created (201) and the context link" file="./spec/requests/context_links/create_context_link_spec.rb" time="0.039198"></testcase>
<testcase classname="spec.requests.planning.update_deviation_for_patient_spec" name="Update a deviation for a patient updates a deviation" file="./spec/requests/planning/update_deviation_for_patient_spec.rb" time="0.191737"></testcase>
<testcase classname="spec.requests.planning.update_deviation_for_patient_spec" name="Update a deviation for a patient fails if deviation does not exists" file="./spec/requests/planning/update_deviation_for_patient_spec.rb" time="0.028820"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders fails when end date comes before start date" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.199035"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders create new orders for the patients that are not excluded" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.186808"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders fails when end date is in the past" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.125565"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders fails when a patient is not found" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.046424"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders create new orders for the included patients" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.113862"></testcase>
<testcase classname="spec.requests.orders.create_many_orders_spec" name="Create many orders fails when user is unauthorized" file="./spec/requests/orders/create_many_orders_spec.rb" time="0.094918"></testcase>
<testcase classname="spec.models.patients.admission_event_spec" name="Patients::AdmissionEvent is expected to belong to patient required: true" file="./spec/models/patients/admission_event_spec.rb" time="0.019134"></testcase>
<testcase classname="spec.models.patients.admission_event_spec" name="Patients::AdmissionEvent is expected to validate that :type cannot be empty/falsy" file="./spec/models/patients/admission_event_spec.rb" time="0.009420"></testcase>
<testcase classname="spec.models.patients.admission_event_spec" name="Patients::AdmissionEvent is expected to validate that :type is either ‹&quot;admission&quot;› or ‹&quot;discharge&quot;›" file="./spec/models/patients/admission_event_spec.rb" time="0.007579"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient returns future orders for a given patient" file="./spec/requests/orders/get_orders_spec.rb" time="0.097137"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient returns orders for a given frequency" file="./spec/requests/orders/get_orders_spec.rb" time="0.069712"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient returns active orders for a given patient" file="./spec/requests/orders/get_orders_spec.rb" time="0.085263"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient returns archived orders for a given patient" file="./spec/requests/orders/get_orders_spec.rb" time="0.101136"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient requires authorization" file="./spec/requests/orders/get_orders_spec.rb" time="0.048688"></testcase>
<testcase classname="spec.requests.orders.get_orders_spec" name="GetOrdersForPatient returns historic orders for a given patient" file="./spec/requests/orders/get_orders_spec.rb" time="0.100582"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments creates a new comment for a given logbook entry" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.182745"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments returns comments for a given logbook entry" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.362887"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments when updating an existing comments succeeds for the original author" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.126618"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments when updating an existing comments fails for users other that the original author" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.203651"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments when deleting an existing comments succeeds for the original author" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.220466"></testcase>
<testcase classname="spec.requests.logbook.logbook_comments_spec" name="Logbook Comments when deleting an existing comments fails for users other that the original author" file="./spec/requests/logbook/logbook_comments_spec.rb" time="0.245230"></testcase>
<testcase classname="spec.models.exports.exporters.disposable_consumption_spec" name="Exports::Exporters::DisposableConsumption contains disposable consumptions" file="./spec/models/exports/exporters/disposable_consumption_spec.rb" time="0.236889"></testcase>
<testcase classname="spec.requests.sessions.add_session_spec" name="Sessions creates a new session" file="./spec/requests/sessions/add_session_spec.rb" time="0.956213"></testcase>
<testcase classname="spec.requests.sessions.add_session_spec" name="Sessions returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/sessions/add_session_spec.rb" time="0.483952"></testcase>
<testcase classname="spec.requests.devices.get_device_attachments_spec" name="Devices::DeviceAttachment returns not found (404) if the device is not found" file="./spec/requests/devices/get_device_attachments_spec.rb" time="0.083464"></testcase>
<testcase classname="spec.requests.devices.get_device_attachments_spec" name="Devices::DeviceAttachment returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_device_attachments_spec.rb" time="0.051275"></testcase>
<testcase classname="spec.requests.devices.get_device_attachments_spec" name="Devices::DeviceAttachment returns success (200) and a list of device attachments" file="./spec/requests/devices/get_device_attachments_spec.rb" time="0.260938"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion requires authorization" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.144578"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion succeeds when a device serial number is given and a corresponding session exists" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.182749"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion succeeds when a patient&apos;s hospital ID is given and a corresponding session exists" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.214138"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors disabled succeeds if the given patient has no session" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.116324"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors disabled succeeds if the given patient&apos;s hospital id is not found" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.041026"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors disabled succeeds if patient is not enrolled" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.066082"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors enabled fails if the given patient has no session" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.113479"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors enabled fails if the given patient&apos;s hospital id is not found" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.044178"></testcase>
<testcase classname="spec.requests.integration.integrate_machine_data_spec" name="Machine data ingestion with errors enabled fails if patient is not enrolled" file="./spec/requests/integration/integrate_machine_data_spec.rb" time="0.067935"></testcase>
<testcase classname="spec.clock_spec" name="Clockwork schedules daily jobs once a day" file="./spec/clock_spec.rb" time="0.000023"><skipped/></testcase>
<testcase classname="spec.clock_spec" name="Clockwork schedules monthly jobs once a month" file="./spec/clock_spec.rb" time="0.000006"><skipped/></testcase>
<testcase classname="spec.clock_spec" name="Clockwork schedules weekly jobs once a week" file="./spec/clock_spec.rb" time="0.000006"><skipped/></testcase>
<testcase classname="spec.requests.users.update_user_password_spec" name="ChangeUserPassword changes any password when admin" file="./spec/requests/users/update_user_password_spec.rb" time="0.071091"></testcase>
<testcase classname="spec.requests.users.update_user_password_spec" name="ChangeUserPassword denies when not admin" file="./spec/requests/users/update_user_password_spec.rb" time="0.029564"></testcase>
<testcase classname="spec.requests.users.update_user_password_spec" name="ChangeUserPassword denies password change when user is not self" file="./spec/requests/users/update_user_password_spec.rb" time="0.029222"></testcase>
<testcase classname="spec.requests.users.update_user_password_spec" name="ChangeUserPassword denies when new_password and new_password_confirmation are not equal" file="./spec/requests/users/update_user_password_spec.rb" time="0.049823"></testcase>
<testcase classname="spec.requests.users.update_user_password_spec" name="ChangeUserPassword denies when new_password and new_password_confirmation are not equal" file="./spec/requests/users/update_user_password_spec.rb" time="0.032266"></testcase>
<testcase classname="spec.integrations.executions.recip_e.create_spec" name="Asynchronous create Recip-e prescription adds an execution to the queue" file="./spec/integrations/executions/recip_e/create_spec.rb" time="0.121474"></testcase>
<testcase classname="spec.integrations.executions.recip_e.create_spec" name="Asynchronous create Recip-e prescription creates the Recip-e prescription" file="./spec/integrations/executions/recip_e/create_spec.rb" time="0.749254"></testcase>
<testcase classname="spec.models.medications.home_medication_order_spec" name="Medications::HomeMedicationOrder is expected to belong to prescriber optional: true" file="./spec/models/medications/home_medication_order_spec.rb" time="0.003195"></testcase>
<testcase classname="spec.models.medications.home_medication_order_spec" name="Medications::HomeMedicationOrder is expected to have many home_medication_order_items" file="./spec/models/medications/home_medication_order_spec.rb" time="0.002159"></testcase>
<testcase classname="spec.models.medications.home_medication_order_spec" name="Medications::HomeMedicationOrder is expected to belong to patient required: true" file="./spec/models/medications/home_medication_order_spec.rb" time="0.002874"></testcase>
<testcase classname="spec.requests.users.add_role_spec" name="AddRole audits the action" file="./spec/requests/users/add_role_spec.rb" time="0.046690"></testcase>
<testcase classname="spec.requests.users.add_role_spec" name="AddRole adds a role" file="./spec/requests/users/add_role_spec.rb" time="0.042980"></testcase>
<testcase classname="spec.requests.users.add_role_spec" name="AddRole requires authorization" file="./spec/requests/users/add_role_spec.rb" time="0.027586"></testcase>
<testcase classname="spec.requests.users.add_role_spec" name="AddRole fails creation when giving existing role name" file="./spec/requests/users/add_role_spec.rb" time="0.048615"></testcase>
<testcase classname="spec.requests.devices.get_device_configurations_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_device_configurations_spec.rb" time="0.035993"></testcase>
<testcase classname="spec.requests.devices.get_device_configurations_spec" name="Devices::Device returns device_configuration for a device" file="./spec/requests/devices/get_device_configurations_spec.rb" time="0.037623"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns virtual_products with a list actual products" file="./spec/requests/medications/get_product_spec.rb" time="0.147766"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with stock locations" file="./spec/requests/medications/get_product_spec.rb" time="0.126771"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with form codes" file="./spec/requests/medications/get_product_spec.rb" time="0.244366"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with codes" file="./spec/requests/medications/get_product_spec.rb" time="0.163990"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns alternatives for actual products" file="./spec/requests/medications/get_product_spec.rb" time="0.130456"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct fails if product is not found" file="./spec/requests/medications/get_product_spec.rb" time="0.028590"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with packages with details" file="./spec/requests/medications/get_product_spec.rb" time="0.236619"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with codes as tables" file="./spec/requests/medications/get_product_spec.rb" time="0.240811"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns a product with a list of active ingredients" file="./spec/requests/medications/get_product_spec.rb" time="0.369349"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_product_spec.rb" time="0.047295"></testcase>
<testcase classname="spec.requests.medications.get_product_spec" name="GetProduct returns product by id" file="./spec/requests/medications/get_product_spec.rb" time="0.115956"></testcase>
<testcase classname="spec.models.contact_spec" name="Contact is expected to validate that :contactable cannot be empty/falsy" file="./spec/models/contact_spec.rb" time="0.020436"></testcase>
<testcase classname="spec.models.contact_spec" name="Contact is expected to validate that :name cannot be empty/falsy" file="./spec/models/contact_spec.rb" time="0.006600"></testcase>
<testcase classname="spec.models.contact_spec" name="Contact is expected to belong to contactable required: true" file="./spec/models/contact_spec.rb" time="0.009389"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage is expected to belong to administration_route required: true" file="./spec/models/medications/dosage_spec.rb" time="0.080333"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage is expected to belong to order required: true" file="./spec/models/medications/dosage_spec.rb" time="0.028836"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage dose is expected to validate that :dose cannot be empty/falsy" file="./spec/models/medications/dosage_spec.rb" time="0.024482"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage dose when dose is a string does not save" file="./spec/models/medications/dosage_spec.rb" time="0.017946"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage dose when dose is a quantity saves" file="./spec/models/medications/dosage_spec.rb" time="0.055690"></testcase>
<testcase classname="spec.models.medications.dosage_spec" name="Medications::Dosage dose when dose is a range saves" file="./spec/models/medications/dosage_spec.rb" time="0.075353"></testcase>
<testcase classname="spec.requests.medications.clone_home_medication_order_spec" name="CloneHomeMedicationOrder returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/clone_home_medication_order_spec.rb" time="0.191749"></testcase>
<testcase classname="spec.requests.medications.clone_home_medication_order_spec" name="CloneHomeMedicationOrder copies a home medication order with one order item" file="./spec/requests/medications/clone_home_medication_order_spec.rb" time="0.256426"></testcase>
<testcase classname="spec.requests.medications.clone_home_medication_order_spec" name="CloneHomeMedicationOrder copies a home medication order with multi line items" file="./spec/requests/medications/clone_home_medication_order_spec.rb" time="0.263567"></testcase>
<testcase classname="spec.requests.delete_contact_spec" name="DeleteContact returns not_found (404) if the weight cannot be found" file="./spec/requests/delete_contact_spec.rb" time="0.036120"></testcase>
<testcase classname="spec.requests.delete_contact_spec" name="DeleteContact deletes the specified phone_number" file="./spec/requests/delete_contact_spec.rb" time="0.100627"></testcase>
<testcase classname="spec.requests.delete_contact_spec" name="DeleteContact returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/delete_contact_spec.rb" time="0.105358"></testcase>
<testcase classname="spec.requests.executions.queue.pop_queue_spec" name="Pop queue returns success (200) and the execution transitioned to `waiting`" file="./spec/requests/executions/queue/pop_queue_spec.rb" time="0.105100"></testcase>
<testcase classname="spec.requests.executions.queue.pop_queue_spec" name="Pop queue returns not found (204) if there are no executions on the queue" file="./spec/requests/executions/queue/pop_queue_spec.rb" time="0.041919"></testcase>
<testcase classname="spec.requests.executions.queue.pop_queue_spec" name="Pop queue returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/queue/pop_queue_spec.rb" time="0.032101"></testcase>
<testcase classname="spec.requests.executions.queue.pop_queue_spec" name="Pop queue returns unprocessable entity (422) if the runner was not specified" file="./spec/requests/executions/queue/pop_queue_spec.rb" time="0.045286"></testcase>
<testcase classname="spec.requests.executions.queue.pop_queue_spec" name="Pop queue pops the executions by date" file="./spec/requests/executions/queue/pop_queue_spec.rb" time="0.276838"></testcase>
<testcase classname="spec.models.codable_code_spec" name="CodableCode is expected to belong to code required: true" file="./spec/models/codable_code_spec.rb" time="0.024351"></testcase>
<testcase classname="spec.models.codable_code_spec" name="CodableCode validates uniqueness within a codable" file="./spec/models/codable_code_spec.rb" time="0.026621"></testcase>
<testcase classname="spec.models.codable_code_spec" name="CodableCode when code system enforces unique usage validates uniqueness within a codable" file="./spec/models/codable_code_spec.rb" time="0.030385"></testcase>
<testcase classname="spec.models.codable_code_spec" name="CodableCode when given a code validates codable" file="./spec/models/codable_code_spec.rb" time="0.036239"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_spec" name="DeleteVascularAccessSite deletes the specified access site if status is permanently_removed" file="./spec/requests/vascular_access/delete_vascular_access_site_spec.rb" time="0.136878"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_spec" name="DeleteVascularAccessSite returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/delete_vascular_access_site_spec.rb" time="0.099559"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_spec" name="DeleteVascularAccessSite cannot delete the specified access site if the status is not permanently_removed" file="./spec/requests/vascular_access/delete_vascular_access_site_spec.rb" time="0.134518"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_spec" name="DeleteVascularAccessSite returns not_found (404) if the access site cannot be found" file="./spec/requests/vascular_access/delete_vascular_access_site_spec.rb" time="0.031529"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_spec" name="Exports::Exporters::MedicationAdministration contains administered medications" file="./spec/models/exports/exporters/medication_administration_spec.rb" time="0.341763"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_spec" name="Exports::Exporters::MedicationAdministration does not contain administration outside of start and end date " file="./spec/models/exports/exporters/medication_administration_spec.rb" time="0.632785"></testcase>
<testcase classname="spec.lib.validators.required_validator_spec" name="Validators::RequiredValidator rejects null values" file="./spec/lib/validators/required_validator_spec.rb" time="0.002122"></testcase>
<testcase classname="spec.lib.validators.required_validator_spec" name="Validators::RequiredValidator accepts values if they are not null" file="./spec/lib/validators/required_validator_spec.rb" time="0.001708"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to validate that :version cannot be empty/falsy" file="./spec/models/medications/source_spec.rb" time="0.013840"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/source_spec.rb" time="0.014585"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to validate that :name is case-sensitively unique" file="./spec/models/medications/source_spec.rb" time="0.016042"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many forms dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.005354"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many units dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.008190"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source validates only lowercase alphanumeric and dash/underscore name" file="./spec/models/medications/source_spec.rb" time="0.020723"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many companies dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.002570"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many route dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.003190"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many product dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.002563"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to validate that :description cannot be empty/falsy" file="./spec/models/medications/source_spec.rb" time="0.013231"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many packages dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.004829"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source is expected to have many ingredients dependent =&gt; destroy" file="./spec/models/medications/source_spec.rb" time="0.011073"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source#supervised? has the alias &apos;#supervised&apos;" file="./spec/models/medications/source_spec.rb" time="0.004522"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source#supervised? when name not &apos;manual&apos; returns true" file="./spec/models/medications/source_spec.rb" time="0.003641"></testcase>
<testcase classname="spec.models.medications.source_spec" name="Medications::Source#supervised? when name is &apos;manual&apos; returns false" file="./spec/models/medications/source_spec.rb" time="0.002769"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_spec" name="GetVascularAccessSite fails when given access site does not exist" file="./spec/requests/vascular_access/get_vascular_access_site_spec.rb" time="0.033912"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_spec" name="GetVascularAccessSite returns the given access site" file="./spec/requests/vascular_access/get_vascular_access_site_spec.rb" time="0.115655"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_spec" name="GetVascularAccessSite requires authorization" file="./spec/requests/vascular_access/get_vascular_access_site_spec.rb" time="0.123795"></testcase>
<testcase classname="spec.models.charts.ultrafiltration_evolution_spec" name="Charts::UltrafiltrationEvolution#call returns UFV and UFR data points" file="./spec/models/charts/ultrafiltration_evolution_spec.rb" time="0.091286"></testcase>
<testcase classname="spec.models.patients.infection_spec" name="Patients::Infection is expected to validate that :pathology cannot be empty/falsy" file="./spec/models/patients/infection_spec.rb" time="0.012738"></testcase>
<testcase classname="spec.models.patients.infection_spec" name="Patients::Infection is expected to belong to patient required: true" file="./spec/models/patients/infection_spec.rb" time="0.003861"></testcase>
<testcase classname="spec.lib.parameter.repository_spec" name="Parameter::Repository#write persists the parameter" file="./spec/lib/parameter/repository_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.lib.parameter.repository_spec" name="Parameter::Repository#get returns the lastest value for a given parameter" file="./spec/lib/parameter/repository_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index returns all the users with a certain profession" file="./spec/requests/users/get_users_spec.rb" time="0.127043"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index returns paginated users" file="./spec/requests/users/get_users_spec.rb" time="0.083740"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index sorts the returned list on last_name and first_name" file="./spec/requests/users/get_users_spec.rb" time="0.170641"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index returns active users when the scope parameter is active" file="./spec/requests/users/get_users_spec.rb" time="0.094822"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index returns all users when the scope parameter is all" file="./spec/requests/users/get_users_spec.rb" time="0.116761"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index sorts the returned list on first_name desc" file="./spec/requests/users/get_users_spec.rb" time="0.070091"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index returns max page size when page size too large" file="./spec/requests/users/get_users_spec.rb" time="0.382147"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index requires authorization" file="./spec/requests/users/get_users_spec.rb" time="0.034338"></testcase>
<testcase classname="spec.requests.users.get_users_spec" name="UsersController.index sorts the returned list on first name" file="./spec/requests/users/get_users_spec.rb" time="0.126955"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when creating briefings creates a new briefing" file="./spec/requests/briefings/briefings_spec.rb" time="0.059101"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when retrieving briefings returns paginated entries" file="./spec/requests/briefings/briefings_spec.rb" time="0.156913"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when retrieving briefings returns entries ordered by date descending" file="./spec/requests/briefings/briefings_spec.rb" time="0.107374"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when updating briefings fails if briefing is closed" file="./spec/requests/briefings/briefings_spec.rb" time="0.054062"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when updating briefings updates existing briefing" file="./spec/requests/briefings/briefings_spec.rb" time="0.060684"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when updating briefings fails if briefing does not exist" file="./spec/requests/briefings/briefings_spec.rb" time="0.027213"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when retrieving one briefing fails if the givem briefing does not exist" file="./spec/requests/briefings/briefings_spec.rb" time="0.055758"></testcase>
<testcase classname="spec.requests.briefings.briefings_spec" name="Briefings when retrieving one briefing returns the given briefing" file="./spec/requests/briefings/briefings_spec.rb" time="0.050310"></testcase>
<testcase classname="spec.requests.executions.queue.retry_queue_spec" name="Retry queue returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/queue/retry_queue_spec.rb" time="0.044096"></testcase>
<testcase classname="spec.requests.executions.queue.retry_queue_spec" name="Retry queue returns success (200) and the execution transitioned to `scheduled`" file="./spec/requests/executions/queue/retry_queue_spec.rb" time="0.068469"></testcase>
<testcase classname="spec.requests.executions.queue.retry_queue_spec" name="Retry queue returns not found (404) if the execution is not found" file="./spec/requests/executions/queue/retry_queue_spec.rb" time="0.025292"></testcase>
<testcase classname="spec.requests.patients.create_contact_for_patient_spec" name="AddPatientContact creates a new contact for the given patient" file="./spec/requests/patients/create_contact_for_patient_spec.rb" time="0.082954"></testcase>
<testcase classname="spec.requests.patients.create_contact_for_patient_spec" name="AddPatientContact creates a new contact with only required fields filled" file="./spec/requests/patients/create_contact_for_patient_spec.rb" time="0.073008"></testcase>
<testcase classname="spec.requests.patients.create_contact_for_patient_spec" name="AddPatientContact returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/create_contact_for_patient_spec.rb" time="0.050125"></testcase>
<testcase classname="spec.requests.patients.create_contact_for_patient_spec" name="AddPatientContact returns unprocessable_entity (422) if the data is invalid" file="./spec/requests/patients/create_contact_for_patient_spec.rb" time="0.059656"></testcase>
<testcase classname="spec.requests.patients.create_contact_for_patient_spec" name="AddPatientContact returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/create_contact_for_patient_spec.rb" time="0.033830"></testcase>
<testcase classname="spec.requests.create_code_by_codable_spec" name="Create Code by Codable returns no content when adding codes already in the system and code exists" file="./spec/requests/create_code_by_codable_spec.rb" time="0.109086"></testcase>
<testcase classname="spec.requests.create_code_by_codable_spec" name="Create Code by Codable returns :unprocessable_entity (422) when code system not editable and code does not exist" file="./spec/requests/create_code_by_codable_spec.rb" time="0.057098"></testcase>
<testcase classname="spec.requests.create_code_by_codable_spec" name="Create Code by Codable returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/create_code_by_codable_spec.rb" time="0.053387"></testcase>
<testcase classname="spec.requests.create_code_by_codable_spec" name="Create Code by Codable returns success (200) and creates the code when in an editable code system" file="./spec/requests/create_code_by_codable_spec.rb" time="0.076688"></testcase>
<testcase classname="spec.requests.delete_code_system_spec" name="Delete Code system returns success (200) and deletes the code sytem when editable" file="./spec/requests/delete_code_system_spec.rb" time="0.038134"></testcase>
<testcase classname="spec.requests.delete_code_system_spec" name="Delete Code system returns method not allowed (405) when not editable" file="./spec/requests/delete_code_system_spec.rb" time="0.029221"></testcase>
<testcase classname="spec.requests.delete_code_system_spec" name="Delete Code system returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/delete_code_system_spec.rb" time="0.030868"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct is expected to have many product_ingredients" file="./spec/models/medications/medicinal_product_spec.rb" time="0.010717"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct is expected to have carbon :id and :external_meta_information" file="./spec/models/medications/medicinal_product_spec.rb" time="0.002089"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct is expected to have many medicinal_product_packages" file="./spec/models/medications/medicinal_product_spec.rb" time="0.002051"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct is expected to have many medicinal_variants" file="./spec/models/medications/medicinal_product_spec.rb" time="0.002894"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct is expected to belong to pharma_company required: true" file="./spec/models/medications/medicinal_product_spec.rb" time="0.003825"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct.search_by_name finds all medicinal products matching name" file="./spec/models/medications/medicinal_product_spec.rb" time="0.096158"></testcase>
<testcase classname="spec.models.medications.medicinal_product_spec" name="Medications::MedicinalProduct.in_formulary returns all medicinal products that have a matching formulary item" file="./spec/models/medications/medicinal_product_spec.rb" time="0.095549"></testcase>
<testcase classname="spec.models.medications.services.administer_standing_order_medication_spec" name="Medications::Services::AdministerStandingOrderMedication standing orders with medicinal products creates an administration" file="./spec/models/medications/services/administer_standing_order_medication_spec.rb" time="0.245720"></testcase>
<testcase classname="spec.models.medications.services.administer_standing_order_medication_spec" name="Medications::Services::AdministerStandingOrderMedication standing orders with medicinal products creates a billing item" file="./spec/models/medications/services/administer_standing_order_medication_spec.rb" time="0.217798"></testcase>
<testcase classname="spec.models.medications.services.administer_standing_order_medication_spec" name="Medications::Services::AdministerStandingOrderMedication standing orders with magistral preparations creates an administration" file="./spec/models/medications/services/administer_standing_order_medication_spec.rb" time="0.152147"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to have many packages dependent =&gt; destroy" file="./spec/models/medications/form_spec.rb" time="0.002910"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to have many form_products dependent =&gt; destroy" file="./spec/models/medications/form_spec.rb" time="0.002342"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to have many products through form_products" file="./spec/models/medications/form_spec.rb" time="0.002792"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/form_spec.rb" time="0.008433"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to belong to source required: true" file="./spec/models/medications/form_spec.rb" time="0.005620"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to validate that :name is case-sensitively unique within the scope of :source_id" file="./spec/models/medications/form_spec.rb" time="0.020845"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/form_spec.rb" time="0.013440"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form.most_used accepts a source to limit the initial group" file="./spec/models/medications/form_spec.rb" time="0.089056"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form.most_used returns the top used item when 1 limit is given" file="./spec/models/medications/form_spec.rb" time="0.297306"></testcase>
<testcase classname="spec.models.medications.form_spec" name="Medications::Form.most_used returns only used items" file="./spec/models/medications/form_spec.rb" time="0.047839"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order fails if order is already ended" file="./spec/requests/orders/stop_order_spec.rb" time="0.095753"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order rejects stopping if not granted" file="./spec/requests/orders/stop_order_spec.rb" time="0.027454"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order fails on one-off orders in the future" file="./spec/requests/orders/stop_order_spec.rb" time="0.063340"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order fails on a recurring order in the future" file="./spec/requests/orders/stop_order_spec.rb" time="0.058434"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order fails stopping if order not found" file="./spec/requests/orders/stop_order_spec.rb" time="0.027455"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order rejects stopping if order is already archived" file="./spec/requests/orders/stop_order_spec.rb" time="0.068445"></testcase>
<testcase classname="spec.requests.orders.stop_order_spec" name="Stop order stops a recurring order" file="./spec/requests/orders/stop_order_spec.rb" time="0.069701"></testcase>
<testcase classname="spec.models.concerns.identifier_guard_spec" name="IdentifierGuard#identifier when using an unsupervised source and an identifier was given remains the same on save" file="./spec/models/concerns/identifier_guard_spec.rb" time="0.029608"></testcase>
<testcase classname="spec.models.concerns.identifier_guard_spec" name="IdentifierGuard#identifier when using an unsupervised source and no identifier was given is auto filled with name on save" file="./spec/models/concerns/identifier_guard_spec.rb" time="0.028934"></testcase>
<testcase classname="spec.models.concerns.identifier_guard_spec" name="IdentifierGuard#identifier when using a supervised source and an identifier was given remains the same on save" file="./spec/models/concerns/identifier_guard_spec.rb" time="0.029540"></testcase>
<testcase classname="spec.models.concerns.identifier_guard_spec" name="IdentifierGuard#identifier when using a supervised source and no identifier was given to fail validation on save" file="./spec/models/concerns/identifier_guard_spec.rb" time="0.005918"></testcase>
<testcase classname="spec.requests.medications.search_forms_spec" name="Search Forms returns an list of forms" file="./spec/requests/medications/search_forms_spec.rb" time="0.069857"></testcase>
<testcase classname="spec.requests.medications.search_forms_spec" name="Search Forms returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_forms_spec.rb" time="0.025904"></testcase>
<testcase classname="spec.requests.medications.search_forms_spec" name="Search Forms can filter by source" file="./spec/requests/medications/search_forms_spec.rb" time="0.055711"></testcase>
<testcase classname="spec.requests.medications.search_forms_spec" name="Search Forms can filter by name" file="./spec/requests/medications/search_forms_spec.rb" time="0.057211"></testcase>
<testcase classname="spec.requests.medications.search_forms_spec" name="Search Forms can filter by most-used" file="./spec/requests/medications/search_forms_spec.rb" time="0.363419"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts does not return products without formulary item" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.085523"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns matches sorted by product name" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.138478"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts does not return variants that don&apos;t have a formulary item of products that have variants with a formulary item" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.082045"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts does not return deprecated products" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.078646"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts does not return products with deprecated active ingredients" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.092605"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns matching ingredients" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.114496"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns an empty list when search query is missing" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.048963"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns matching products and ingredients" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.128730"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns an empty list when search query is less than three characters" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.048366"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_products_spec" name="GetMedicinalProducts returns matching products" file="./spec/requests/medications/get_medicinal_products_spec.rb" time="0.096472"></testcase>
<testcase classname="spec.models.vascular_access.intervention_type_spec" name="VascularAccess::InterventionType is expected to have many interventions" file="./spec/models/vascular_access/intervention_type_spec.rb" time="0.013221"></testcase>
<testcase classname="spec.requests.executions.queue.upload_queue_spec" name="Upload queue returns not found (404) if the execution is not found" file="./spec/requests/executions/queue/upload_queue_spec.rb" time="0.029138"></testcase>
<testcase classname="spec.requests.executions.queue.upload_queue_spec" name="Upload queue returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/queue/upload_queue_spec.rb" time="0.048284"></testcase>
<testcase classname="spec.requests.executions.queue.upload_queue_spec" name="Upload queue returns success (200) and the execution transitioned to `scheduled`" file="./spec/requests/executions/queue/upload_queue_spec.rb" time="0.088727"></testcase>
<testcase classname="spec.requests.executions.queue.upload_queue_spec" name="Upload queue returns unprocessable entity (422) if execution cannot continue" file="./spec/requests/executions/queue/upload_queue_spec.rb" time="0.054105"></testcase>
<testcase classname="spec.requests.executions.queue.upload_queue_spec" name="Upload queue enqueues an execution job" file="./spec/requests/executions/queue/upload_queue_spec.rb" time="0.091095"></testcase>
<testcase classname="spec.models.episodes.services.cancel_discharge_spec" name="Episodes::Services::CancelDischarge restarts an episode" file="./spec/models/episodes/services/cancel_discharge_spec.rb" time="0.169651"></testcase>
<testcase classname="spec.models.episodes.services.cancel_discharge_spec" name="Episodes::Services::CancelDischarge only restarts episodes with same id" file="./spec/models/episodes/services/cancel_discharge_spec.rb" time="0.222234"></testcase>
<testcase classname="spec.requests.billing_codes.get_billing_codes_spec" name="Billing::Code returns success (200) and alphabetically sorted billing codes" file="./spec/requests/billing_codes/get_billing_codes_spec.rb" time="0.042851"></testcase>
<testcase classname="spec.requests.billing_codes.get_billing_codes_spec" name="Billing::Code returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/billing_codes/get_billing_codes_spec.rb" time="0.024404"></testcase>
<testcase classname="spec.requests.medications.delete_magistral_preparation_spec" name="DeleteMagistralPreparation returns 422 if the magistral preparation is used as standing order" file="./spec/requests/medications/delete_magistral_preparation_spec.rb" time="0.056262"></testcase>
<testcase classname="spec.requests.medications.delete_magistral_preparation_spec" name="DeleteMagistralPreparation returns 403 if the user isn&apos;t authorized" file="./spec/requests/medications/delete_magistral_preparation_spec.rb" time="0.028181"></testcase>
<testcase classname="spec.requests.medications.delete_magistral_preparation_spec" name="DeleteMagistralPreparation deletes magistral preparation" file="./spec/requests/medications/delete_magistral_preparation_spec.rb" time="0.036365"></testcase>
<testcase classname="spec.models.medications.standing_orders.magistral_spec" name="Medications::StandingOrders::Magistral is expected to validate with PractitionerValidator" file="./spec/models/medications/standing_orders/magistral_spec.rb" time="0.021330"></testcase>
<testcase classname="spec.models.medications.standing_orders.magistral_spec" name="Medications::StandingOrders::Magistral#administer! creates an administration" file="./spec/models/medications/standing_orders/magistral_spec.rb" time="0.152559"></testcase>
<testcase classname="spec.models.devices.device_attachment_spec" name="Devices::DeviceAttachment is expected to have an attachment named attachment" file="./spec/models/devices/device_attachment_spec.rb" time="0.002435"></testcase>
<testcase classname="spec.models.devices.device_attachment_spec" name="Devices::DeviceAttachment is expected to belong to uploaded_by required: true" file="./spec/models/devices/device_attachment_spec.rb" time="0.006027"></testcase>
<testcase classname="spec.models.devices.device_attachment_spec" name="Devices::DeviceAttachment is expected to belong to device required: true" file="./spec/models/devices/device_attachment_spec.rb" time="0.006620"></testcase>
<testcase classname="spec.models.devices.device_attachment_spec" name="Devices::DeviceAttachment is expected to validate that :name cannot be empty/falsy" file="./spec/models/devices/device_attachment_spec.rb" time="0.008358"></testcase>
<testcase classname="spec.requests.executions.queue.get_queue_spec" name="Get queue returns unprocessable entity (422) if the runner was not specified" file="./spec/requests/executions/queue/get_queue_spec.rb" time="0.028128"></testcase>
<testcase classname="spec.requests.executions.queue.get_queue_spec" name="Get queue returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/queue/get_queue_spec.rb" time="0.026859"></testcase>
<testcase classname="spec.requests.executions.queue.get_queue_spec" name="Get queue returns success (200) and the executions sorted by created_at" file="./spec/requests/executions/queue/get_queue_spec.rb" time="0.131745"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index requires view rights" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.035655"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index returns all medication when no params provided" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.330005"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index returns paginated result" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.296929"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when ingredients parameter provided return all results with that ingredient" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.180130"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when ingredients parameter provided return all results with that ingredient when multiple products have the same ingredient" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.268024"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when ingredients parameter provided returns no result when ingredient is included of none of the administrations" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.178155"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when product id parameter provided returns no result when product does not exist" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.153838"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when product id parameter provided return all results with that product" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.170993"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when date parameters are provided and only date_to is provided, return all medication before date_to" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.320477"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when date parameters are provided and only date_from is provided, return all medication after date_from" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.275724"></testcase>
<testcase classname="spec.requests.medications.get_medication_administrations_spec" name="MedicationAdministrationsController .index when date parameters are provided return all medication between date_from and date_to" file="./spec/requests/medications/get_medication_administrations_spec.rb" time="0.318685"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.026957"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems filters on multidose" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.046555"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems filters on name" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.043682"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems filters on billed_to" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.048104"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems combines multiple filters" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.112827"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems returns paginated list of formulary items" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.042051"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_items_spec" name="GetMedicationsFormularyItems filters on stocks" file="./spec/requests/medications/formulary_items/get_formulary_items_spec.rb" time="0.115813"></testcase>
<testcase classname="spec.requests.patients.get_patient_master_records_spec" name="Patients::PatientMasterRecord returns a paginated list of patient master records" file="./spec/requests/patients/get_patient_master_records_spec.rb" time="0.355949"></testcase>
<testcase classname="spec.requests.patients.get_patient_master_records_spec" name="Patients::PatientMasterRecord returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_patient_master_records_spec.rb" time="0.030589"></testcase>
<testcase classname="spec.requests.patients.diagnoses.create_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/diagnoses/create_patient_diagnosis_spec.rb" time="0.054905"></testcase>
<testcase classname="spec.requests.patients.diagnoses.create_patient_diagnosis_spec" name="Patients::PatientDiagnosis audits the destroy action" file="./spec/requests/patients/diagnoses/create_patient_diagnosis_spec.rb" time="0.070164"></testcase>
<testcase classname="spec.requests.patients.diagnoses.create_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns success (200) and the created patient diagnosis" file="./spec/requests/patients/diagnoses/create_patient_diagnosis_spec.rb" time="0.073755"></testcase>
<testcase classname="spec.requests.medications.cancel_home_medication_order_spec" name="Medications DestroyHomeMedicationOrder fails if order does not exist" file="./spec/requests/medications/cancel_home_medication_order_spec.rb" time="0.082069"></testcase>
<testcase classname="spec.requests.medications.cancel_home_medication_order_spec" name="Medications DestroyHomeMedicationOrder fails if patient does not exist" file="./spec/requests/medications/cancel_home_medication_order_spec.rb" time="0.121444"></testcase>
<testcase classname="spec.requests.medications.cancel_home_medication_order_spec" name="Medications DestroyHomeMedicationOrder soft-deletes orders without prescription" file="./spec/requests/medications/cancel_home_medication_order_spec.rb" time="0.150405"></testcase>
<testcase classname="spec.requests.medications.cancel_home_medication_order_spec" name="Medications DestroyHomeMedicationOrder cancels sent orders" file="./spec/requests/medications/cancel_home_medication_order_spec.rb" time="0.233508"></testcase>
<testcase classname="spec.requests.medications.cancel_home_medication_order_spec" name="Medications DestroyHomeMedicationOrder denies destroying if not granted" file="./spec/requests/medications/cancel_home_medication_order_spec.rb" time="0.128950"></testcase>
<testcase classname="spec.requests.diagnoses.create_diagnosis_spec" name="Patients::Diagnosis returns unprocessable entity (422) if the diagnosis name already exists" file="./spec/requests/diagnoses/create_diagnosis_spec.rb" time="0.067835"></testcase>
<testcase classname="spec.requests.diagnoses.create_diagnosis_spec" name="Patients::Diagnosis returns success (200) and the created diagnosis" file="./spec/requests/diagnoses/create_diagnosis_spec.rb" time="0.036913"></testcase>
<testcase classname="spec.requests.diagnoses.create_diagnosis_spec" name="Patients::Diagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/diagnoses/create_diagnosis_spec.rb" time="0.025815"></testcase>
<testcase classname="spec.lib.tik_tok_spec" name="TikTok tik toks" file="./spec/lib/tik_tok_spec.rb" time="0.000011"><skipped/></testcase>
<testcase classname="spec.models.infrastructure.disposable_consumption_spec" name="Infrastructure::DisposableConsumption is expected to belong to consumed_by class_name =&gt; Users::User required: true" file="./spec/models/infrastructure/disposable_consumption_spec.rb" time="0.004315"></testcase>
<testcase classname="spec.models.infrastructure.disposable_consumption_spec" name="Infrastructure::DisposableConsumption preserves consumable initial state" file="./spec/models/infrastructure/disposable_consumption_spec.rb" time="0.110480"></testcase>
<testcase classname="spec.models.infrastructure.disposable_consumption_spec" name="Infrastructure::DisposableConsumption persists consumable items" file="./spec/models/infrastructure/disposable_consumption_spec.rb" time="0.138576"></testcase>
<testcase classname="spec.models.infrastructure.disposable_consumption_spec" name="Infrastructure::DisposableConsumption is expected to belong to patient class_name =&gt; Patients::Patient required: true" file="./spec/models/infrastructure/disposable_consumption_spec.rb" time="0.003643"></testcase>
<testcase classname="spec.models.infrastructure.disposable_consumption_spec" name="Infrastructure::DisposableConsumption is expected to belong to session class_name =&gt; Sessions::Session optional: true" file="./spec/models/infrastructure/disposable_consumption_spec.rb" time="0.002830"></testcase>
<testcase classname="spec.models.executions.reports.base_spec" name="Executions::Reports::Base has a default category" file="./spec/models/executions/reports/base_spec.rb" time="0.013110"></testcase>
<testcase classname="spec.models.executions.reports.base_spec" name="Executions::Reports::Base#schedule! schedules a job" file="./spec/models/executions/reports/base_spec.rb" time="0.038045"></testcase>
<testcase classname="spec.models.executions.reports.base_spec" name="Executions::Reports::Base#execute! generates a report and attaches it" file="./spec/models/executions/reports/base_spec.rb" time="0.186264"></testcase>
<testcase classname="spec.requests.users.current_user_spec" name="Current User API update requires authentication" file="./spec/requests/users/current_user_spec.rb" time="0.010501"></testcase>
<testcase classname="spec.requests.users.current_user_spec" name="Current User API update updates current user information" file="./spec/requests/users/current_user_spec.rb" time="0.040674"></testcase>
<testcase classname="spec.requests.users.current_user_spec" name="Current User API update updates avatar" file="./spec/requests/users/current_user_spec.rb" time="0.107353"></testcase>
<testcase classname="spec.requests.users.current_user_spec" name="Current User API show requires authentication" file="./spec/requests/users/current_user_spec.rb" time="0.007616"></testcase>
<testcase classname="spec.requests.users.current_user_spec" name="Current User API show returns the current user" file="./spec/requests/users/current_user_spec.rb" time="0.030497"></testcase>
<testcase classname="spec.requests.laboratory.create_lab_system_spec" name="Lab System CreateLabSystem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/create_lab_system_spec.rb" time="0.026677"></testcase>
<testcase classname="spec.requests.laboratory.create_lab_system_spec" name="Lab System CreateLabSystem creates the lab system and adds a mapping for every defined parameter" file="./spec/requests/laboratory/create_lab_system_spec.rb" time="0.093075"></testcase>
<testcase classname="spec.requests.patients.get_patient_transport_spec" name="GetPatientTransport fails if patient does not exist" file="./spec/requests/patients/get_patient_transport_spec.rb" time="0.031177"></testcase>
<testcase classname="spec.requests.patients.get_patient_transport_spec" name="GetPatientTransport returns patient&apos;s transport preferences" file="./spec/requests/patients/get_patient_transport_spec.rb" time="0.101818"></testcase>
<testcase classname="spec.requests.patients.get_patient_transport_spec" name="GetPatientTransport requires write rights" file="./spec/requests/patients/get_patient_transport_spec.rb" time="0.076800"></testcase>
<testcase classname="spec.models.patients.services.upsert_spec" name="Patients::Services::Upsert merges patient attributes for update" file="./spec/models/patients/services/upsert_spec.rb" time="0.066692"></testcase>
<testcase classname="spec.models.patients.services.upsert_spec" name="Patients::Services::Upsert raises RecordInvalid if data is missing and the patient is not present" file="./spec/models/patients/services/upsert_spec.rb" time="0.007611"></testcase>
<testcase classname="spec.models.patients.services.upsert_spec" name="Patients::Services::Upsert merges patient attributes for upsert" file="./spec/models/patients/services/upsert_spec.rb" time="0.067861"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_mappings_spec" name="Lab system mappings returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/update_lab_system_mappings_spec.rb" time="0.052255"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_mappings_spec" name="Lab system mappings doesn&apos;t accept empty strings for lab system mapping code" file="./spec/requests/laboratory/update_lab_system_mappings_spec.rb" time="0.068645"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_mappings_spec" name="Lab system mappings returns not found (404) if the lab system doesn&apos;t exist" file="./spec/requests/laboratory/update_lab_system_mappings_spec.rb" time="0.045985"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_mappings_spec" name="Lab system mappings returns the updated lab system" file="./spec/requests/laboratory/update_lab_system_mappings_spec.rb" time="0.069555"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? first full week of the month session planned is expected to be due :first_full_week_of_the_month and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.193247"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? first full week of the month no session planned is expected not to be due :first_full_week_of_the_month and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.179716"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? first full week of the month not the first week is expected not to be due :first_full_week_of_the_month and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.195147"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? specific dates no session planned is expected not to be due :specific_dates, nil, and Sun, 21 Jun 2020" file="./spec/models/tasks/scheduler_spec.rb" time="0.060465"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? specific dates session planned is expected not to be due :specific_dates, nil, and Mon, 29 Jun 2020" file="./spec/models/tasks/scheduler_spec.rb" time="0.168440"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? specific dates session planned is expected to be due :specific_dates, nil, and Mon, 22 Jun 2020" file="./spec/models/tasks/scheduler_spec.rb" time="0.182637"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? specific dates session planned is expected not to be due :specific_dates, nil, and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.183464"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? specific dates session planned session already completed is expected not to be due :specific_dates, nil, and Mon, 22 Jun 2020" file="./spec/models/tasks/scheduler_spec.rb" time="0.213252"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.181803"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.183995"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.176826"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.182362"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.189760"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.177759"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.162650"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is thursday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.206941"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.179869"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.205065"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.178642"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.178844"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.185466"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.193842"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.203527"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is tuesday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.183226"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.182113"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.205498"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.185296"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.204135"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.184340"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.178954"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.176904"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is wednesday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.176978"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.181783"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.179755"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187524"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.177445"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.188637"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.180895"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.183930"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a monday - wednesday - friday schedule when it is monday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.205416"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.184045"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.201798"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187802"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187165"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.218994"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.180205"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.214657"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is wednesday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.180044"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.181557"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.186209"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.178178"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.202865"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.188111"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187463"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.202801"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is thursday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.188182"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187083"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.177931"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.203379"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.183400"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.186604"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.174952"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.208853"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is monday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.210099"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected to be due :every_week and [&quot;tuesday&quot;, &quot;thursday&quot;, &quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.179937"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;monday&quot;, &quot;wednesday&quot;, &quot;friday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.180021"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.174783"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;thursday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.165847"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected to be due :every_week and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.174941"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;sunday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.178865"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;saturday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.184136"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every week patient is on a tuesday - thursday - saturday schedule when it is tuesday is expected not to be due :every_week and [&quot;wednesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.183256"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every session on wednesday is expected to be due :every_session and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.177593"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every session on tuesday when there is a completed session is expected to be due :every_session and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.227250"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every session on tuesday when there is no ongoing session is expected not to be due :every_session and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.196616"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every session on tuesday when there is an ongoing session is expected to be due :every_session and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.282044"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? every session on monday is expected to be due :every_session and nil" file="./spec/models/tasks/scheduler_spec.rb" time="0.211051"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? odd weeks even cweek is expected not to be due :odd_weeks and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.165035"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? odd weeks even cweek is expected not to be due :odd_weeks and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.164259"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? odd weeks odd cweek is expected not to be due :odd_weeks and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.188205"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? odd weeks odd cweek is expected to be due :odd_weeks and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.192981"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? even weeks even cweek is expected not to be due :even_weeks and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.187719"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? even weeks even cweek is expected to be due :even_weeks and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.176746"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? even weeks odd cweek is expected not to be due :even_weeks and [&quot;tuesday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.161036"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#due? even weeks odd cweek is expected not to be due :even_weeks and [&quot;monday&quot;]" file="./spec/models/tasks/scheduler_spec.rb" time="0.163236"></testcase>
<testcase classname="spec.models.tasks.scheduler_spec" name="Tasks::Scheduler#new evaluation date default to today" file="./spec/models/tasks/scheduler_spec.rb" time="0.057425"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_patients_spec.rb" time="0.027353"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients sorts patients according to given sort_keys" file="./spec/requests/patients/get_patients_spec.rb" time="0.313815"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns paginated result" file="./spec/requests/patients/get_patients_spec.rb" time="0.234557"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns enrolled patients by default" file="./spec/requests/patients/get_patients_spec.rb" time="0.229203"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns not enrolled patients if the `scope` is `not_enrolled`" file="./spec/requests/patients/get_patients_spec.rb" time="0.230171"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns unenrolled patients if the `scope` is `unenrolled`" file="./spec/requests/patients/get_patients_spec.rb" time="0.263183"></testcase>
<testcase classname="spec.requests.patients.get_patients_spec" name="GetPatients returns information about unenrollement" file="./spec/requests/patients/get_patients_spec.rb" time="0.061676"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription fails to update with bad parameters and returns errors" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.099010"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription returns 404 not found if patient does not exist" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.024053"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription requires rights" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.072068"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription returns 422 unprocessable if patient has no treatment" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.047839"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription when successfully updating the prescription audits the action" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.168888"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription when successfully updating the prescription returns success and the updated prescription" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.129809"></testcase>
<testcase classname="spec.requests.prescriptions.update_prescription_spec" name="UpdatePrescription when successfully updating the prescription updates the prescription" file="./spec/requests/prescriptions/update_prescription_spec.rb" time="0.225832"></testcase>
<testcase classname="spec.models.medications.product_ingredient_spec" name="Medications::ProductIngredient is expected to belong to medicinal_product optional: true" file="./spec/models/medications/product_ingredient_spec.rb" time="0.002362"></testcase>
<testcase classname="spec.models.medications.product_ingredient_spec" name="Medications::ProductIngredient is expected to belong to active_ingredient optional: true" file="./spec/models/medications/product_ingredient_spec.rb" time="0.002276"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query is not valid when query_type is missing" file="./spec/models/executions/medications/query_spec.rb" time="0.029690"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query is not valid when query is missing" file="./spec/models/executions/medications/query_spec.rb" time="0.008545"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query is not valid when query_type is invalid" file="./spec/models/executions/medications/query_spec.rb" time="0.010450"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#sanitize_payload sanitizes payload" file="./spec/models/executions/medications/query_spec.rb" time="0.009566"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#schedule schedules a publish job" file="./spec/models/executions/medications/query_spec.rb" time="0.063294"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#schedule schedules a timeout job" file="./spec/models/executions/medications/query_spec.rb" time="0.030130"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#schedule raises unless there are sources defined" file="./spec/models/executions/medications/query_spec.rb" time="0.034624"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#sources returns enabled supervised sources when none specified in payload" file="./spec/models/executions/medications/query_spec.rb" time="0.039177"></testcase>
<testcase classname="spec.models.executions.medications.query_spec" name="Executions::Medications::Query#sources returns filtered sources when specified in payload" file="./spec/models/executions/medications/query_spec.rb" time="0.039140"></testcase>
<testcase classname="spec.requests.medications.timestamper_spec" name="Medications::Prescriptions::Ehealth::Services::Timestamper when ehealth timestamping is disabled does not timestamp the prescription" file="./spec/requests/medications/timestamper_spec.rb" time="0.087623"></testcase>
<testcase classname="spec.requests.medications.timestamper_spec" name="Medications::Prescriptions::Ehealth::Services::Timestamper when ehealth timestamping is enabled creates a recipe payload for a intradialytic medication product prescription" file="./spec/requests/medications/timestamper_spec.rb" time="0.167671"></testcase>
<testcase classname="spec.requests.medications.timestamper_spec" name="Medications::Prescriptions::Ehealth::Services::Timestamper when ehealth timestamping is enabled creates a prescription payload" file="./spec/requests/medications/timestamper_spec.rb" time="0.120966"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate that :moment is either ‹&quot;connect_phase&quot;›, ‹&quot;treatment_phase&quot;›, ‹&quot;disconnect_phase&quot;›, or ‹&quot;reflect_phase&quot;›" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.019274"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate that :quantity looks like a number greater than or equal to 0 and less than 100000 as long as it is not nil" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.022223"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to prescriber optional: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.013322"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to medicinal_product optional: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.012886"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate with PractitionerValidator" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.011657"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to archive_of optional: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.012345"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to galenic_term optional: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.011586"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate that :medication_type cannot be empty/falsy" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.016241"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to medicinal_variant optional: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.012871"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to belong to patient required: true" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.012682"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate that :medication_type is either ‹&quot;product&quot;› or ‹&quot;magistral_preparation&quot;›" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.014667"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription is expected to validate that :frequency is either ‹&quot;specific_dates&quot;›, ‹&quot;every_session&quot;›, ‹&quot;every_week&quot;›, ‹&quot;even_weeks&quot;›, ‹&quot;odd_weeks&quot;›, or ‹&quot;first_full_week_of_the_month&quot;›" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.020238"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.stopped returns past prescriptions" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.363074"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.active returns currently active prescriptions" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.465216"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_range validates to true when there are dates given that are not between start_date and end_date because it is dynamically set" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.073024"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_range validates to true when there are dates are past the start_date and the end_date is not given" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.069022"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_range validates to true when there are dates given that are before the start_date because it is dynamically set" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.063773"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_range validates to true when there are dates are between start and end_date" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.059975"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_frequency_days validates to true when there are no days and the frequency is specific_dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.060445"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_frequency_days validates to true when there are days and the frequency is not specific_dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.055953"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_frequency_days validates to false when there are no days and the frequency is not specific_dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.060896"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.prescriptions_for(patient:) returns prescriptions for the given patient" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.162145"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.prescriptions_for(patient:) returns latest prescriptions only" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.118527"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_days_inclusion validates to true when all days are in the list" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.065441"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_days_inclusion validates to false when a day is not in the list" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.061362"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns false when start date is in the future" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.002166"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns true when today is included in the range of start and end date" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001811"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns false when end date is today" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001889"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns true when start date is today" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.002005"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns false when end date is in the past" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.002190"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#active? returns true for an open ended prescription" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001950"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#stop!(prescriber:, reason:) stops prescription" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.dates sets a default value" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001718"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.days sets a default value" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001795"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#dynamic_start_end_dates dynamically sets end date when dates are given" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.058141"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#dynamic_start_end_dates dynamically sets end date when dates are given on the same day" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.064405"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#dynamic_start_end_dates dynamically sets start date when dates are given" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.065418"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_frequency validates to true when there are no dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.060234"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_frequency validates to true when there are dates and the frequency is specific_dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.059873"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#validate_dates_frequency validates to true when there are dates and the frequency is specific_dates" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.057852"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#stopped? returns true when prescription expired a day ago" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.002128"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#stopped? returns false when prescription is still running" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001867"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription#stopped? returns true when prescription expired today" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.001686"></testcase>
<testcase classname="spec.models.medications.intradialytic_medication_prescription_spec" name="Medications::IntradialyticMedicationPrescription.future returns future prescriptions" file="./spec/models/medications/intradialytic_medication_prescription_spec.rb" time="0.339614"></testcase>
<testcase classname="spec.requests.medications.sources.get_sources_spec" name="Get sources returns success (200) and the sources" file="./spec/requests/medications/sources/get_sources_spec.rb" time="0.040606"></testcase>
<testcase classname="spec.requests.medications.sources.get_sources_spec" name="Get sources returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/sources/get_sources_spec.rb" time="0.025671"></testcase>
<testcase classname="spec.requests.medications.sources.get_sources_spec" name="Get sources returns success (200) and the sources filtered by enabled" file="./spec/requests/medications/sources/get_sources_spec.rb" time="0.035272"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_spec" name="GET /api/connectors/:id returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_connector_spec.rb" time="0.070160"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_spec" name="GET /api/connectors/:id returns success (200) and the connector" file="./spec/requests/infrastructure/get_connector_spec.rb" time="0.036559"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_spec" name="GET /api/connectors/:id returns not found (404) if the connector is not found" file="./spec/requests/infrastructure/get_connector_spec.rb" time="0.029404"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession does not bill unbillable sessions" file="./spec/models/billing/services/bill_session_spec.rb" time="0.092251"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession creates two billing items if both fee and forfait code are present" file="./spec/models/billing/services/bill_session_spec.rb" time="0.143622"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession carbonizes billing items" file="./spec/models/billing/services/bill_session_spec.rb" time="0.116766"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession does not bill a session twice" file="./spec/models/billing/services/bill_session_spec.rb" time="0.136916"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession when the attending doctor is billed creates a billing item for the session" file="./spec/models/billing/services/bill_session_spec.rb" time="0.143678"></testcase>
<testcase classname="spec.models.billing.services.bill_session_spec" name="Billing::Services::BillSession when the session sign off is billed creates a billing item for the session" file="./spec/models/billing/services/bill_session_spec.rb" time="0.145455"></testcase>
<testcase classname="spec.models.medications.services.create_ingredient_spec" name="Medications::Services::CreateIngredient creates an ingredient" file="./spec/models/medications/services/create_ingredient_spec.rb" time="0.033661"></testcase>
<testcase classname="spec.requests.wounds.get_wound_image_spec" name="GetWoundImage returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wound_image_spec.rb" time="0.169465"></testcase>
<testcase classname="spec.requests.wounds.get_wound_image_spec" name="GetWoundImage returns the wound image" file="./spec/requests/wounds/get_wound_image_spec.rb" time="0.181778"></testcase>
<testcase classname="spec.requests.wounds.get_wound_image_spec" name="GetWoundImage returns not_found (404) if the wound image cannot be found" file="./spec/requests/wounds/get_wound_image_spec.rb" time="0.027345"></testcase>
<testcase classname="spec.requests.sessions.update_transport_spec" name="Sessions UpdateSessionTransport updates only the given fields" file="./spec/requests/sessions/update_transport_spec.rb" time="0.143127"></testcase>
<testcase classname="spec.requests.sessions.update_transport_spec" name="Sessions UpdateSessionTransport denies updating sessions transport if not granted" file="./spec/requests/sessions/update_transport_spec.rb" time="0.122034"></testcase>
<testcase classname="spec.requests.sessions.update_transport_spec" name="Sessions UpdateSessionTransport updates a sessions preferred transport" file="./spec/requests/sessions/update_transport_spec.rb" time="0.172446"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate not on same day validates that end date cannot be before start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001979"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate not on same day validates that end date cannot be on the same day as start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001850"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate not on same day validates that end date can be after start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001763"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate on same day validates that end date can be after start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001963"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate on same day validates that end date can be on the same day as start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001693"></testcase>
<testcase classname="spec.models.concerns.start_end_date_spec" name="StartEndDate on same day validates that end date cannot be before start date" file="./spec/models/concerns/start_end_date_spec.rb" time="0.001740"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_acl_spec" name="UpdateCenterAcl updates the user&apos;s center acl" file="./spec/requests/infrastructure/update_center_acl_spec.rb" time="0.076533"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_acl_spec" name="UpdateCenterAcl returns not_found (404) if the center acl isn&apos;t found" file="./spec/requests/infrastructure/update_center_acl_spec.rb" time="0.050598"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_acl_spec" name="UpdateCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/update_center_acl_spec.rb" time="0.049725"></testcase>
<testcase classname="spec.requests.devise.unlocks.update_unlock_spec" name="Unlock account when the token is valid creates an audit" file="./spec/requests/devise/unlocks/update_unlock_spec.rb" time="0.448376"></testcase>
<testcase classname="spec.requests.devise.unlocks.update_unlock_spec" name="Unlock account when the token is valid returns success (200) and unlocks the account when the token is not expired" file="./spec/requests/devise/unlocks/update_unlock_spec.rb" time="0.044390"></testcase>
<testcase classname="spec.requests.devise.unlocks.update_unlock_spec" name="Unlock account when the token is valid returns success (200) when the token is expired" file="./spec/requests/devise/unlocks/update_unlock_spec.rb" time="0.050019"></testcase>
<testcase classname="spec.requests.devise.unlocks.update_unlock_spec" name="Unlock account when the token is invalid returns unprocessable entity (422)" file="./spec/requests/devise/unlocks/update_unlock_spec.rb" time="0.043915"></testcase>
<testcase classname="spec.models.patients.prescription_respository_spec" name="Patients::PrescriptionRepository#get correctly fills in default values" file="./spec/models/patients/prescription_respository_spec.rb" time="0.000016"><skipped/></testcase>
<testcase classname="spec.models.patients.prescription_respository_spec" name="Patients::PrescriptionRepository#get correctly fills in persisted values" file="./spec/models/patients/prescription_respository_spec.rb" time="0.000014"><skipped/></testcase>
<testcase classname="spec.models.patients.prescription_respository_spec" name="Patients::PrescriptionRepository#get returns all parameters in the prescription template" file="./spec/models/patients/prescription_respository_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.requests.medications.create_form_spec" name="Create Form returns unprocessable entity (422) when creating doubles" file="./spec/requests/medications/create_form_spec.rb" time="0.043853"></testcase>
<testcase classname="spec.requests.medications.create_form_spec" name="Create Form returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_form_spec.rb" time="0.026892"></testcase>
<testcase classname="spec.requests.medications.create_form_spec" name="Create Form returns not found (404) when using an undefined source" file="./spec/requests/medications/create_form_spec.rb" time="0.029044"></testcase>
<testcase classname="spec.requests.medications.create_form_spec" name="Create Form returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_form_spec.rb" time="0.037063"></testcase>
<testcase classname="spec.requests.medications.create_form_spec" name="Create Form returns success (200) and creates the form when in in a unsupervised source" file="./spec/requests/medications/create_form_spec.rb" time="0.039151"></testcase>
<testcase classname="spec.models.medications.active_ingredient_spec" name="Medications::ActiveIngredient is expected to have many product_ingredients" file="./spec/models/medications/active_ingredient_spec.rb" time="0.001856"></testcase>
<testcase classname="spec.models.medications.active_ingredient_spec" name="Medications::ActiveIngredient is expected to have many variant_ingredients" file="./spec/models/medications/active_ingredient_spec.rb" time="0.005305"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift is expected to belong to center required: true" file="./spec/models/infrastructure/shift_spec.rb" time="0.008972"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift validates uniqueness of name scoped on center_id" file="./spec/models/infrastructure/shift_spec.rb" time="0.034576"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift is expected to validate that :ends_at cannot be empty/falsy" file="./spec/models/infrastructure/shift_spec.rb" time="0.012777"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift is expected to validate that :starts_at cannot be empty/falsy" file="./spec/models/infrastructure/shift_spec.rb" time="0.012779"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/shift_spec.rb" time="0.019047"></testcase>
<testcase classname="spec.models.infrastructure.shift_spec" name="Infrastructure::Shift#ongoing? returns true if the shift is ongoing" file="./spec/models/infrastructure/shift_spec.rb" time="0.004612"></testcase>
<testcase classname="spec.requests.patients.add_allergy_for_patient_spec" name="AddAllergyForPatient adds a new allergy" file="./spec/requests/patients/add_allergy_for_patient_spec.rb" time="0.118274"></testcase>
<testcase classname="spec.requests.patients.add_allergy_for_patient_spec" name="AddAllergyForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_allergy_for_patient_spec.rb" time="0.097064"></testcase>
<testcase classname="spec.models.reports.transport_overview_pdf_spec" name="Transport overview report gets a pdf with the transport overview" file="./spec/models/reports/transport_overview_pdf_spec.rb" time="0.335313"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#destroy destroyes a patient search index" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.158548"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#create creates the patients search index" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.109139"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#create updates the patients search index if the patient exists" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.139158"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#update_patient_latest_unenrollment_reason updates the patient&apos;s unenrollemnt reason" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.113896"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#update_patient_latest_treatment_info updates the patient&apos;s treatment id" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.387469"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#update_prescription updates the patient&apos;s prescription" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.145745"></testcase>
<testcase classname="spec.models.patients.services.update_patient_master_record_spec" name="Patients::Services::UpdateSearchIndex#update_patient_latest_transplant_status updates the patient&apos;s transplant status" file="./spec/models/patients/services/update_patient_master_record_spec.rb" time="0.212869"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient creates a deviation for deletion of planning_schema with optional end_date" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.159154"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient fails if given type is invalid" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.127369"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient creates a deviation for deletion of planning_schema with end_date" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.152380"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient does not create a deviation and deletes counterpart if present" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.194691"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient fails if date is missing" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.126186"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient adds a new deviation" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.151759"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient fails if shift is missing" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.116130"></testcase>
<testcase classname="spec.requests.planning.add_deviation_for_patient_spec" name="Create a deviation for a patient fails if position is missing" file="./spec/requests/planning/add_deviation_for_patient_spec.rb" time="0.118572"></testcase>
<testcase classname="spec.models.planning.schema_element_spec" name="Planning::SchemaElement add some examples to (or delete) /home/runner/work/nephroflow-api/nephroflow-api/spec/models/planning/schema_element_spec.rb" file="./spec/models/planning/schema_element_spec.rb" time="0.000012"><skipped/></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType (de-)serializes" file="./spec/types/range_type_spec.rb" time="0.001656"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType#cast returns a range when the object is a hash containing integers" file="./spec/types/range_type_spec.rb" time="0.001774"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType#cast raises a TypeError when the object cannot be cast" file="./spec/types/range_type_spec.rb" time="0.001800"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType#cast returns a range when the object is a hash containing quantities" file="./spec/types/range_type_spec.rb" time="0.007888"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType#cast returns nil when object is nil" file="./spec/types/range_type_spec.rb" time="0.001637"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType#cast returns the object when the object is a range" file="./spec/types/range_type_spec.rb" time="0.001687"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType when the bounds are quantities (de-)serializes" file="./spec/types/range_type_spec.rb" time="0.006128"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType when the bounds are ratios (de-)serializes" file="./spec/types/range_type_spec.rb" time="0.010000"></testcase>
<testcase classname="spec.types.range_type_spec" name="RangeType when the range is unbounded (de-)serializes" file="./spec/types/range_type_spec.rb" time="0.001933"></testcase>
<testcase classname="spec.requests.patients.add_address_for_patient_spec" name="AddAddressForPatient saves an optional note for the address" file="./spec/requests/patients/add_address_for_patient_spec.rb" time="0.095711"></testcase>
<testcase classname="spec.requests.patients.add_address_for_patient_spec" name="AddAddressForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_address_for_patient_spec.rb" time="0.097082"></testcase>
<testcase classname="spec.requests.patients.add_address_for_patient_spec" name="AddAddressForPatient creates a new address" file="./spec/requests/patients/add_address_for_patient_spec.rb" time="0.086644"></testcase>
<testcase classname="spec.requests.patients.add_address_for_patient_spec" name="AddAddressForPatient accepts other as an `address_type`" file="./spec/requests/patients/add_address_for_patient_spec.rb" time="0.087548"></testcase>
<testcase classname="spec.requests.patients.add_address_for_patient_spec" name="AddAddressForPatient fails if `address_type` is not valid" file="./spec/requests/patients/add_address_for_patient_spec.rb" time="0.082734"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import is not valid when identifiers are invalid" file="./spec/models/executions/medications/import_spec.rb" time="0.022304"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import is not valid when identifiers is empty" file="./spec/models/executions/medications/import_spec.rb" time="0.009422"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import is not valid when identifiers is missing" file="./spec/models/executions/medications/import_spec.rb" time="0.009245"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import#sources returns supervised identifier sources" file="./spec/models/executions/medications/import_spec.rb" time="0.033522"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import#schedule schedules a timeout job" file="./spec/models/executions/medications/import_spec.rb" time="0.047466"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import#schedule raises unless there are sources defined" file="./spec/models/executions/medications/import_spec.rb" time="0.025259"></testcase>
<testcase classname="spec.models.executions.medications.import_spec" name="Executions::Medications::Import#schedule schedules an import job" file="./spec/models/executions/medications/import_spec.rb" time="0.054523"></testcase>
<testcase classname="spec.models.medications.form_product_spec" name="Medications::FormProduct is expected to belong to form required: true" file="./spec/models/medications/form_product_spec.rb" time="0.007309"></testcase>
<testcase classname="spec.models.medications.form_product_spec" name="Medications::FormProduct is expected to belong to product required: true" file="./spec/models/medications/form_product_spec.rb" time="0.006777"></testcase>
<testcase classname="spec.requests.consumables.consumables_spec" name="Consumable API returns all consumables" file="./spec/requests/consumables/consumables_spec.rb" time="0.438958"></testcase>
<testcase classname="spec.requests.consumables.consumables_spec" name="Consumable API returns a single consumable" file="./spec/requests/consumables/consumables_spec.rb" time="0.133245"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.081023"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link returns not found (404) if the link does not exist" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.082750"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link returns not found (404) if the patient does not exist" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.032909"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link xperthis care links returns redirect (302)" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.120956"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link static links returns redirect (302)" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.089066"></testcase>
<testcase classname="spec.requests.patients.context_links.get_patient_context_link_spec" name="Get patient context link templated links returns redirect (302)" file="./spec/requests/patients/context_links/get_patient_context_link_spec.rb" time="0.093182"></testcase>
<testcase classname="spec.requests.patients.delete_infection_for_patient_spec" name="DeleteInfectionForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_infection_for_patient_spec.rb" time="0.058180"></testcase>
<testcase classname="spec.requests.patients.delete_infection_for_patient_spec" name="DeleteInfectionForPatient deletes an existing infection" file="./spec/requests/patients/delete_infection_for_patient_spec.rb" time="0.070621"></testcase>
<testcase classname="spec.requests.integration.update_patient_spec" name="Integration Update Patient updates the legal address" file="./spec/requests/integration/update_patient_spec.rb" time="0.089525"></testcase>
<testcase classname="spec.requests.integration.update_patient_spec" name="Integration Update Patient updates the patient if the patient already exists but not enrolled" file="./spec/requests/integration/update_patient_spec.rb" time="0.081509"></testcase>
<testcase classname="spec.requests.integration.update_patient_spec" name="Integration Update Patient updates the patient if the patient is enrolled" file="./spec/requests/integration/update_patient_spec.rb" time="0.095096"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting an attachment returns the attachment" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.086228"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting an attachment returns not found if attachment doesn&apos;t exist" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.029057"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting an attachment requires authorization" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.064461"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting all attachment returns the attachment" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.066463"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting all attachment returns not found if attachment doesn&apos;t exist" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.026018"></testcase>
<testcase classname="spec.requests.patients.get_patient_attachment_spec" name="PatientAttachments when getting all attachment requires authorization" file="./spec/requests/patients/get_patient_attachment_spec.rb" time="0.065023"></testcase>
<testcase classname="spec.models.executions.reports.general_practitioner_spec" name="Executions::Reports::GeneralPractitioner payload validates inclusion of `patient_id`" file="./spec/models/executions/reports/general_practitioner_spec.rb" time="0.021912"></testcase>
<testcase classname="spec.models.executions.reports.general_practitioner_spec" name="Executions::Reports::GeneralPractitioner payload validates inclusion of `year`" file="./spec/models/executions/reports/general_practitioner_spec.rb" time="0.029934"></testcase>
<testcase classname="spec.requests.devices.update_device_spec" name="Devices::Device returns not found (404) if the device is not found" file="./spec/requests/devices/update_device_spec.rb" time="0.038932"></testcase>
<testcase classname="spec.requests.devices.update_device_spec" name="Devices::Device returns unprocessable entity (422) if the device name already exists" file="./spec/requests/devices/update_device_spec.rb" time="0.054191"></testcase>
<testcase classname="spec.requests.devices.update_device_spec" name="Devices::Device audits the update action" file="./spec/requests/devices/update_device_spec.rb" time="0.051036"></testcase>
<testcase classname="spec.requests.devices.update_device_spec" name="Devices::Device returns success (200) and the updated device" file="./spec/requests/devices/update_device_spec.rb" time="0.059707"></testcase>
<testcase classname="spec.requests.devices.update_device_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/update_device_spec.rb" time="0.046170"></testcase>
<testcase classname="spec.requests.diagnoses.delete_diagnosis_spec" name="Patients::Diagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/diagnoses/delete_diagnosis_spec.rb" time="0.030044"></testcase>
<testcase classname="spec.requests.diagnoses.delete_diagnosis_spec" name="Patients::Diagnosis returns not found (404) if the diagnosis doesn&apos;t exist" file="./spec/requests/diagnoses/delete_diagnosis_spec.rb" time="0.024950"></testcase>
<testcase classname="spec.requests.diagnoses.delete_diagnosis_spec" name="Patients::Diagnosis returns success (200) and the archived diagnosis if it is in use" file="./spec/requests/diagnoses/delete_diagnosis_spec.rb" time="0.119006"></testcase>
<testcase classname="spec.requests.diagnoses.delete_diagnosis_spec" name="Patients::Diagnosis returns no content (204) when it is not in use" file="./spec/requests/diagnoses/delete_diagnosis_spec.rb" time="0.037540"></testcase>
<testcase classname="spec.requests.create_code_by_system_spec" name="Create Code by Code System Slug returns unprocessable entity (422) when creating doubles in an editable code system" file="./spec/requests/create_code_by_system_spec.rb" time="0.045985"></testcase>
<testcase classname="spec.requests.create_code_by_system_spec" name="Create Code by Code System Slug returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/create_code_by_system_spec.rb" time="0.031690"></testcase>
<testcase classname="spec.requests.create_code_by_system_spec" name="Create Code by Code System Slug returns method not allowed (405) when code system not editable" file="./spec/requests/create_code_by_system_spec.rb" time="0.029717"></testcase>
<testcase classname="spec.requests.create_code_by_system_spec" name="Create Code by Code System Slug returns success (200) and creates the code when in an editable code system" file="./spec/requests/create_code_by_system_spec.rb" time="0.038410"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns success (200) and exportables sorted by created_at" file="./spec/requests/exports/get_exportables_spec.rb" time="0.060184"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns exportables filtered by center if center_id param was passed" file="./spec/requests/exports/get_exportables_spec.rb" time="0.069209"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns exportables filtered by state if state param was passed" file="./spec/requests/exports/get_exportables_spec.rb" time="0.069961"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns exportables filtered by export_type if type param was passed" file="./spec/requests/exports/get_exportables_spec.rb" time="0.058602"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/get_exportables_spec.rb" time="0.025250"></testcase>
<testcase classname="spec.requests.exports.get_exportables_spec" name="Get exportables returns exportables filtered by start_date/end_date if date params were passed" file="./spec/requests/exports/get_exportables_spec.rb" time="0.081810"></testcase>
<testcase classname="spec.requests.medications.get_forms_spec" name="GetForms returns an list of forms" file="./spec/requests/medications/get_forms_spec.rb" time="0.072810"></testcase>
<testcase classname="spec.requests.medications.get_forms_spec" name="GetForms returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_forms_spec.rb" time="0.027468"></testcase>
<testcase classname="spec.models.episodes.services.admit_spec" name="Episodes::Services::Admit creates an episode for an admission" file="./spec/models/episodes/services/admit_spec.rb" time="0.077994"></testcase>
<testcase classname="spec.jobs.generate_medication_export_job_spec" name="GenerateMedicationExportJob creates an exportable containing all medication billing items for one week" file="./spec/jobs/generate_medication_export_job_spec.rb" time="1.911507"></testcase>
<testcase classname="spec.jobs.generate_medication_export_job_spec" name="GenerateMedicationExportJob raises ArgumentError when the options are incorrect" file="./spec/jobs/generate_medication_export_job_spec.rb" time="0.003002"></testcase>
<testcase classname="spec.jobs.generate_medication_export_job_spec" name="GenerateMedicationExportJob creates an exportable containing all medication billing items for one day" file="./spec/jobs/generate_medication_export_job_spec.rb" time="1.844193"></testcase>
<testcase classname="spec.jobs.generate_medication_export_job_spec" name="GenerateMedicationExportJob `autoready` option does not transition exportable to ready when there are invalid billing items" file="./spec/jobs/generate_medication_export_job_spec.rb" time="0.348986"></testcase>
<testcase classname="spec.jobs.generate_medication_export_job_spec" name="GenerateMedicationExportJob `autoready` option automatically transitions exportable to ready when all billing items are valid" file="./spec/jobs/generate_medication_export_job_spec.rb" time="0.358090"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items filters by billed_item_type" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.911024"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items returns a carbon copy" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.285944"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items filters by end_date" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.912803"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items filters by start_date" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.946370"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items returns success (200) and billing items sorted by administered_at" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.982427"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items returns an empty errors if there are none" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.309289"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items filters by center_id" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.899663"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.027713"></testcase>
<testcase classname="spec.requests.billing_items.get_billing_items_spec" name="Get billing items returns the soft validation errors if there are any" file="./spec/requests/billing_items/get_billing_items_spec.rb" time="0.261167"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock for a non-existing user returns unprocessable entity (422) and does not send an account unlock email by email" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.021514"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock for a non-existing user returns unprocessable entity (422) and does not send an account unlock email by username" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.012850"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock for an existing user returns unprocessable entity (422) when the user is not locked" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.028328"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock for an existing user returns created (201), sends an account unlock email and sets unlock token by email" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.047662"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock for an existing user returns created (201), sends an account unlock email and sets unlock token by username" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.046987"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock paranoid mode returns created (201) when the user is not locked" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.024454"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock paranoid mode returns created (201) for a non-existing user" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.011786"></testcase>
<testcase classname="spec.requests.devise.unlocks.create_unlock_spec" name="Request account unlock paranoid mode returns created (201) for an existing user" file="./spec/requests/devise/unlocks/create_unlock_spec.rb" time="0.047870"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_product_spec" name="GetMedicinalProduct returns sorted dose quantities" file="./spec/requests/medications/get_medicinal_product_spec.rb" time="0.132989"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_product_spec" name="GetMedicinalProduct returns the product data" file="./spec/requests/medications/get_medicinal_product_spec.rb" time="0.058787"></testcase>
<testcase classname="spec.requests.medications.get_medicinal_product_spec" name="GetMedicinalProduct fails if product is not found" file="./spec/requests/medications/get_medicinal_product_spec.rb" time="0.026092"></testcase>
<testcase classname="spec.models.medications.home_medication_order_item_spec" name="Medications::HomeMedicationOrderItem checks if the home medication order is valid" file="./spec/models/medications/home_medication_order_item_spec.rb" time="0.021884"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility fails if the transplant eligibility status does not exist" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.093950"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility updates patient&apos;s transplant eligibility status" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.112637"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility updates audit information" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.143597"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility requires write rights" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.029184"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility fails if patient does not exist" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.029598"></testcase>
<testcase classname="spec.requests.patients.update_patient_transplant_eligibility_status_spec" name="Update patient transplant eligibility sets patient&apos;s transplant eligibility when he/she has no status yet" file="./spec/requests/patients/update_patient_transplant_eligibility_status_spec.rb" time="0.103884"></testcase>
<testcase classname="spec.models.medications.services.administer_variable_dose_medication_spec" name="Medications::Services::AdministerVariableDoseMedication creates an administration" file="./spec/models/medications/services/administer_variable_dose_medication_spec.rb" time="0.293537"></testcase>
<testcase classname="spec.models.medications.services.administer_variable_dose_medication_spec" name="Medications::Services::AdministerVariableDoseMedication creates a billing item" file="./spec/models/medications/services/administer_variable_dose_medication_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.requests.integration.create_patient_spec" name="Integration Create Patient creates the patient if it does not exist" file="./spec/requests/integration/create_patient_spec.rb" time="0.043501"></testcase>
<testcase classname="spec.requests.integration.create_patient_spec" name="Integration Create Patient creates the address for the patient" file="./spec/requests/integration/create_patient_spec.rb" time="0.046865"></testcase>
<testcase classname="spec.requests.integration.create_patient_spec" name="Integration Create Patient creates the patient with no address if address is empty" file="./spec/requests/integration/create_patient_spec.rb" time="0.042841"></testcase>
<testcase classname="spec.requests.integration.create_patient_spec" name="Integration Create Patient updates patient if it exists" file="./spec/requests/integration/create_patient_spec.rb" time="0.078333"></testcase>
<testcase classname="spec.requests.vascular_access.delete_intervention_spec" name="DeleteIntervention returns not_found (404) if the intervention cannot be found" file="./spec/requests/vascular_access/delete_intervention_spec.rb" time="0.027972"></testcase>
<testcase classname="spec.requests.vascular_access.delete_intervention_spec" name="DeleteIntervention returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/delete_intervention_spec.rb" time="0.093494"></testcase>
<testcase classname="spec.requests.vascular_access.delete_intervention_spec" name="DeleteIntervention deletes the specified intervention" file="./spec/requests/vascular_access/delete_intervention_spec.rb" time="0.100438"></testcase>
<testcase classname="spec.requests.vascular_access.get_site_hemostasis_default_spec" name="GetAccessSiteHemostasisDefault returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_site_hemostasis_default_spec.rb" time="0.188378"></testcase>
<testcase classname="spec.requests.vascular_access.get_site_hemostasis_default_spec" name="GetAccessSiteHemostasisDefault returns hemostasis default" file="./spec/requests/vascular_access/get_site_hemostasis_default_spec.rb" time="0.180452"></testcase>
<testcase classname="spec.requests.vascular_access.get_site_hemostasis_default_spec" name="GetAccessSiteHemostasisDefault returns not_found (404) if the access site is not found" file="./spec/requests/vascular_access/get_site_hemostasis_default_spec.rb" time="0.092453"></testcase>
<testcase classname="spec.requests.devices.get_device_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_device_spec.rb" time="0.035527"></testcase>
<testcase classname="spec.requests.devices.get_device_spec" name="Devices::Device returns not found (404) if the device is not found" file="./spec/requests/devices/get_device_spec.rb" time="0.041359"></testcase>
<testcase classname="spec.requests.devices.get_device_spec" name="Devices::Device returns success (200) and the device" file="./spec/requests/devices/get_device_spec.rb" time="0.061538"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns entries filtered by tags" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.178543"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns journal entries in briefing&apos;s date range" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.472955"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns entries filtered by patient" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.244512"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns entries filtered by categories" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.195050"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns entries filtered by not selected items" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.197632"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns journal entries filtered by journals" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.187378"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation fails if the given briefing does not exist" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.081343"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for preparation returns journal entries sorted by patients&apos; names" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.350490"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns entries filtered by discussed items" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.257512"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion only shows items where the user has rights for" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.323221"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns selected journal entries with discussed information" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.475138"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns entries filtered by journals" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.233608"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion only shows selected items where the user has rights for" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.487386"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns entries filtered by tags" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.182498"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns selected journal entries" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.475255"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns entries filtered by categories" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.232310"></testcase>
<testcase classname="spec.requests.briefings.briefing_items_spec" name="BriefingItems when retrieving items for discussion returns entries filtered by patient" file="./spec/requests/briefings/briefing_items_spec.rb" time="0.282038"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_techniques_spec" name="GetVascularAccessSiteTechniques requires authorization" file="./spec/requests/vascular_access/get_vascular_access_site_techniques_spec.rb" time="0.028429"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_techniques_spec" name="GetVascularAccessSiteTechniques returns a list of site techniques" file="./spec/requests/vascular_access/get_vascular_access_site_techniques_spec.rb" time="0.025844"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_history_table_spec" name="Session History requires authorization" file="./spec/requests/sessions/get_sessions_history_table_spec.rb" time="0.100064"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_history_table_spec" name="Session History returns the history data for sessions that has entered the treatment phase" file="./spec/requests/sessions/get_sessions_history_table_spec.rb" time="0.886115"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_history_table_spec" name="Session History adds the defined extra columns" file="./spec/requests/sessions/get_sessions_history_table_spec.rb" time="0.098816"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_history_table_spec" name="Session History returns the history data for an unenrolled patient" file="./spec/requests/sessions/get_sessions_history_table_spec.rb" time="0.401558"></testcase>
<testcase classname="spec.requests.fhir.allergies_spec" name="Fhir AllergyIntolerance creates an allergy for a patient" file="./spec/requests/fhir/allergies_spec.rb" time="0.080732"></testcase>
<testcase classname="spec.requests.fhir.allergies_spec" name="Fhir AllergyIntolerance requires authorization" file="./spec/requests/fhir/allergies_spec.rb" time="0.030718"></testcase>
<testcase classname="spec.requests.fhir.allergies_spec" name="Fhir AllergyIntolerance returns not found if patient is not found" file="./spec/requests/fhir/allergies_spec.rb" time="0.029966"></testcase>
<testcase classname="spec.models.patients.enrollment_spec" name="Patients::Enrollment is expected to belong to patient required: true" file="./spec/models/patients/enrollment_spec.rb" time="0.003722"></testcase>
<testcase classname="spec.models.patients.enrollment_spec" name="Patients::Enrollment is expected to belong to user required: true" file="./spec/models/patients/enrollment_spec.rb" time="0.003312"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_chart_spec" name="GetSessionProgressChart returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/get_session_progress_chart_spec.rb" time="0.125602"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_chart_spec" name="GetSessionProgressChart returns ultrafiltration evolution chart" file="./spec/requests/sessions/get_session_progress_chart_spec.rb" time="0.133235"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_chart_spec" name="GetSessionProgressChart returns blood pressure evolution chart" file="./spec/requests/sessions/get_session_progress_chart_spec.rb" time="0.125227"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_chart_spec" name="GetSessionProgressChart returns not_found (404) if the session cannot be found" file="./spec/requests/sessions/get_session_progress_chart_spec.rb" time="0.033001"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_chart_spec" name="GetSessionProgressChart returns unprocessable_entity (422) if chart cannot be found" file="./spec/requests/sessions/get_session_progress_chart_spec.rb" time="0.126497"></testcase>
<testcase classname="spec.models.wounds.wound_image_spec" name="Wounds::WoundImage is expected to have an attachment named media" file="./spec/models/wounds/wound_image_spec.rb" time="0.002068"></testcase>
<testcase classname="spec.models.wounds.wound_image_spec" name="Wounds::WoundImage is expected to belong to wound_evaluation required: true" file="./spec/models/wounds/wound_image_spec.rb" time="0.004254"></testcase>
<testcase classname="spec.models.patients.patient_attachment_spec" name="Patients::PatientAttachment is expected to have an attachment named media" file="./spec/models/patients/patient_attachment_spec.rb" time="0.002557"></testcase>
<testcase classname="spec.models.patients.patient_attachment_spec" name="Patients::PatientAttachment is expected to belong to patient required: true" file="./spec/models/patients/patient_attachment_spec.rb" time="0.004494"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validate that :export_type is either ‹&quot;medication&quot;› or ‹&quot;billing&quot;›" file="./spec/models/exports/exportable_spec.rb" time="0.012910"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validate that :end_date cannot be empty/falsy" file="./spec/models/exports/exportable_spec.rb" time="0.009919"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validate that :billing_items cannot be empty/falsy" file="./spec/models/exports/exportable_spec.rb" time="0.008383"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to belong to center optional: true" file="./spec/models/exports/exportable_spec.rb" time="0.005074"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validate that :export_type cannot be empty/falsy" file="./spec/models/exports/exportable_spec.rb" time="0.010984"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to have many billing_items class_name =&gt; Billing::Item through exportable_billing_items" file="./spec/models/exports/exportable_spec.rb" time="0.001996"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validate that :start_date cannot be empty/falsy" file="./spec/models/exports/exportable_spec.rb" time="0.006624"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to have many exportable_billing_items class_name =&gt; Exports::ExportableBillingItem" file="./spec/models/exports/exportable_spec.rb" time="0.002349"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable is expected to validates associated :exportable_billing_items and :billing_items" file="./spec/models/exports/exportable_spec.rb" time="0.002002"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_export_validations validates billing items are valid on export" file="./spec/models/exports/exportable_spec.rb" time="0.262662"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_dates validates that end date is greater than start date" file="./spec/models/exports/exportable_spec.rb" time="0.009215"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_dates validates that start date is in the past" file="./spec/models/exports/exportable_spec.rb" time="0.004621"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_dates validates that end date cannot be today" file="./spec/models/exports/exportable_spec.rb" time="0.004186"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_dates validates that end date is in the past" file="./spec/models/exports/exportable_spec.rb" time="0.004083"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to transition state to :ready from :ready on event :download, with params: [] (on :default)" file="./spec/models/exports/exportable_spec.rb" time="0.012211"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine sets exported_at on export" file="./spec/models/exports/exportable_spec.rb" time="0.294263"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to transition state to :exported from :exported on event :export, with params: [] (on :default)" file="./spec/models/exports/exportable_spec.rb" time="0.006886"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to have initial state :draft" file="./spec/models/exports/exportable_spec.rb" time="0.001772"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine cannot mark without billing items" file="./spec/models/exports/exportable_spec.rb" time="0.007129"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine can be downloaded more than once" file="./spec/models/exports/exportable_spec.rb" time="0.020050"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to have states &quot;draft&quot;, &quot;ready&quot;, and &quot;exported&quot;" file="./spec/models/exports/exportable_spec.rb" time="0.001784"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to transition state to :exported from :exported on event :download, with params: [] (on :default)" file="./spec/models/exports/exportable_spec.rb" time="0.007788"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine can be exported more than" file="./spec/models/exports/exportable_spec.rb" time="0.019942"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine cannot mark with billing items invalid for export" file="./spec/models/exports/exportable_spec.rb" time="0.246703"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine is expected to transition state to :exported from :ready on event :export, with params: [] (on :default)" file="./spec/models/exports/exportable_spec.rb" time="0.007903"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine transitions state to :ready on event :mark" file="./spec/models/exports/exportable_spec.rb" time="0.270695"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable state machine sets downloaded_at on download" file="./spec/models/exports/exportable_spec.rb" time="0.299500"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#filtered_billing_items filters medication billing items that are non-billable" file="./spec/models/exports/exportable_spec.rb" time="0.653131"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#filtered_billing_items filters medication billing items that do not have a corresponding formulary item" file="./spec/models/exports/exportable_spec.rb" time="0.637217"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables validates overlapping exportables for the same type when one does not have a center specified but the other does" file="./spec/models/exports/exportable_spec.rb" time="0.013762"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables validates overlapping exportables for the same type but different centers" file="./spec/models/exports/exportable_spec.rb" time="0.016855"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables validates overlapping exportables for different types" file="./spec/models/exports/exportable_spec.rb" time="0.012547"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables for the same type and center validates overlapping exportables when there is an overlapping exportable" file="./spec/models/exports/exportable_spec.rb" time="0.013023"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables for the same type and center validates overlapping exportables when there is an earlier exportable with same end date" file="./spec/models/exports/exportable_spec.rb" time="0.012116"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables for the same type and center validates overlapping exportables when there is a later exportable" file="./spec/models/exports/exportable_spec.rb" time="0.019888"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables for the same type and center validates overlapping exportables when there is an earlier exportable" file="./spec/models/exports/exportable_spec.rb" time="0.012919"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#validate_overlapping_exportables for the same type and center validates overlapping exportables when there is a later exportable with same start date" file="./spec/models/exports/exportable_spec.rb" time="0.020384"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#medication? / #billing? when the exportable is billing type is expected not to be medication" file="./spec/models/exports/exportable_spec.rb" time="0.006208"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#medication? / #billing? when the exportable is billing type is expected to be billing" file="./spec/models/exports/exportable_spec.rb" time="0.006184"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#medication? / #billing? when the exportable is medication type is expected not to be billing" file="./spec/models/exports/exportable_spec.rb" time="0.007431"></testcase>
<testcase classname="spec.models.exports.exportable_spec" name="Exports::Exportable#medication? / #billing? when the exportable is medication type is expected to be medication" file="./spec/models/exports/exportable_spec.rb" time="0.006514"></testcase>
<testcase classname="spec.requests.infrastructure.get_global_center_acl_spec" name="GetGlobalCenterAcl returns array containing the global center acl" file="./spec/requests/infrastructure/get_global_center_acl_spec.rb" time="0.098017"></testcase>
<testcase classname="spec.requests.infrastructure.get_global_center_acl_spec" name="GetGlobalCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_global_center_acl_spec.rb" time="0.042683"></testcase>
<testcase classname="spec.requests.infrastructure.get_global_center_acl_spec" name="GetGlobalCenterAcl returns empty array when no global rights have been defined" file="./spec/requests/infrastructure/get_global_center_acl_spec.rb" time="0.033054"></testcase>
<testcase classname="spec.jobs.purge_patients_job_spec" name="PurgePatientsJob only purges patients admitted past the configured timespan that where never enrolled" file="./spec/jobs/purge_patients_job_spec.rb" time="0.275654"></testcase>
<testcase classname="spec.models.planning.decorators.on_even_weeks_spec" name="Planning::Decorators::OnEvenWeeks odd week is expected not to be scheduled" file="./spec/models/planning/decorators/on_even_weeks_spec.rb" time="0.001955"></testcase>
<testcase classname="spec.models.planning.decorators.on_even_weeks_spec" name="Planning::Decorators::OnEvenWeeks even week is expected to be scheduled" file="./spec/models/planning/decorators/on_even_weeks_spec.rb" time="0.002473"></testcase>
<testcase classname="spec.models.context_links.static_spec" name="ContextLinks::Static#render renders a static uri" file="./spec/models/context_links/static_spec.rb" time="0.002072"></testcase>
<testcase classname="spec.requests.devices.create_device_spec" name="Devices::Device returns success (200) and the created device" file="./spec/requests/devices/create_device_spec.rb" time="0.046791"></testcase>
<testcase classname="spec.requests.devices.create_device_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/create_device_spec.rb" time="0.031257"></testcase>
<testcase classname="spec.requests.devices.create_device_spec" name="Devices::Device audits the create action" file="./spec/requests/devices/create_device_spec.rb" time="0.045191"></testcase>
<testcase classname="spec.requests.devices.create_device_spec" name="Devices::Device returns unprocessable entity (422) if the device name already exists" file="./spec/requests/devices/create_device_spec.rb" time="0.046247"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_info_spec" name="UpdatePatientContactInfo returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_patient_contact_info_spec.rb" time="0.091495"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_info_spec" name="UpdatePatientContactInfo updates a patient&apos;s contact info" file="./spec/requests/patients/update_patient_contact_info_spec.rb" time="0.122677"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_info_spec" name="UpdatePatientContactInfo denies updating not enrolled patients" file="./spec/requests/patients/update_patient_contact_info_spec.rb" time="0.052126"></testcase>
<testcase classname="spec.requests.infrastructure.create_global_center_acl_spec" name="CreateGlobalCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_global_center_acl_spec.rb" time="0.034907"></testcase>
<testcase classname="spec.requests.infrastructure.create_global_center_acl_spec" name="CreateGlobalCenterAcl creates a global center acl" file="./spec/requests/infrastructure/create_global_center_acl_spec.rb" time="0.049584"></testcase>
<testcase classname="spec.requests.infrastructure.create_global_center_acl_spec" name="CreateGlobalCenterAcl fails when the acl already exists" file="./spec/requests/infrastructure/create_global_center_acl_spec.rb" time="0.066832"></testcase>
<testcase classname="spec.requests.vascular_access.replace_catheter_spec" name="ReplaceCatheter replaces the catheter" file="./spec/requests/vascular_access/replace_catheter_spec.rb" time="0.384859"></testcase>
<testcase classname="spec.requests.vascular_access.replace_catheter_spec" name="ReplaceCatheter cannot replace if base site type is not a catheter" file="./spec/requests/vascular_access/replace_catheter_spec.rb" time="0.167229"></testcase>
<testcase classname="spec.requests.vascular_access.replace_catheter_spec" name="ReplaceCatheter returns not found if the access site does not exist" file="./spec/requests/vascular_access/replace_catheter_spec.rb" time="0.097979"></testcase>
<testcase classname="spec.requests.vascular_access.replace_catheter_spec" name="ReplaceCatheter requires write rights" file="./spec/requests/vascular_access/replace_catheter_spec.rb" time="0.088484"></testcase>
<testcase classname="spec.requests.vascular_access.replace_catheter_spec" name="ReplaceCatheter returns audit info" file="./spec/requests/vascular_access/replace_catheter_spec.rb" time="0.377028"></testcase>
<testcase classname="spec.models.medications.tasks.delegate_spec" name="Medications::Tasks::Delegate a medication order that was created on the second day of a session should be taken into account" file="./spec/models/medications/tasks/delegate_spec.rb" time="0.345299"></testcase>
<testcase classname="spec.models.medications.tasks.delegate_spec" name="Medications::Tasks::Delegate don&apos;t display medication orders that occur on the same day as a night dialysis session that was started the day before" file="./spec/models/medications/tasks/delegate_spec.rb" time="0.301433"></testcase>
<testcase classname="spec.models.medications.tasks.delegate_spec" name="Medications::Tasks::Delegate medication prescribed on the start day of a session should be shown in the session, even if session continues the next day" file="./spec/models/medications/tasks/delegate_spec.rb" time="0.213426"></testcase>
<testcase classname="spec.models.medications.tasks.delegate_spec" name="Medications::Tasks::Delegate medication prescription was updated when session is ongoing shows the updated medication in workflow" file="./spec/models/medications/tasks/delegate_spec.rb" time="0.347494"></testcase>
<testcase classname="spec.models.medications.tasks.delegate_spec" name="Medications::Tasks::Delegate medication prescription was updated when session is ongoing shows the updated medication in workflow, even if the update happened after midnight" file="./spec/models/medications/tasks/delegate_spec.rb" time="0.340834"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_devices_spec" name="GET /api/connectors/:id/devices returns not found (404) if the connector is not known" file="./spec/requests/infrastructure/get_connector_devices_spec.rb" time="0.029696"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_devices_spec" name="GET /api/connectors/:id/devices return success (200) and the connectors" file="./spec/requests/infrastructure/get_connector_devices_spec.rb" time="0.092823"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_devices_spec" name="GET /api/connectors/:id/devices returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_connector_devices_spec.rb" time="0.065294"></testcase>
<testcase classname="spec.requests.medications.sources.create_source_spec" name="Create source returns unprocessable entity (422) if the name contains spaces" file="./spec/requests/medications/sources/create_source_spec.rb" time="0.031342"></testcase>
<testcase classname="spec.requests.medications.sources.create_source_spec" name="Create source returns created (201) and the source" file="./spec/requests/medications/sources/create_source_spec.rb" time="0.030962"></testcase>
<testcase classname="spec.requests.medications.sources.create_source_spec" name="Create source returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/sources/create_source_spec.rb" time="0.025702"></testcase>
<testcase classname="spec.requests.medications.sources.create_source_spec" name="Create source returns unprocessable entity (422) if the version is missing" file="./spec/requests/medications/sources/create_source_spec.rb" time="0.031618"></testcase>
<testcase classname="spec.requests.medications.sources.create_source_spec" name="Create source returns unprocessable entity (422) if published_at is missing" file="./spec/requests/medications/sources/create_source_spec.rb" time="0.032134"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_product_spec.rb" time="0.027012"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product can link actual products for virtual products" file="./spec/requests/medications/create_product_spec.rb" time="0.229713"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product can create a product in it&apos;s simpliest form" file="./spec/requests/medications/create_product_spec.rb" time="0.092076"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_product_spec.rb" time="0.075166"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product returns success (200) and creates the product when in in a unsupervised source" file="./spec/requests/medications/create_product_spec.rb" time="0.192612"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product creates the link for actual products" file="./spec/requests/medications/create_product_spec.rb" time="0.202107"></testcase>
<testcase classname="spec.requests.medications.create_product_spec" name="Create product returns not found (404) when using an undefined source" file="./spec/requests/medications/create_product_spec.rb" time="0.074102"></testcase>
<testcase classname="spec.requests.patients.delete_allergy_for_patient_spec" name="DeleteAllergyForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_allergy_for_patient_spec.rb" time="0.052972"></testcase>
<testcase classname="spec.requests.patients.delete_allergy_for_patient_spec" name="DeleteAllergyForPatient deletes an allery" file="./spec/requests/patients/delete_allergy_for_patient_spec.rb" time="0.063531"></testcase>
<testcase classname="spec.requests.reports.get_journal_printout_spec" name="Journal Printout when journal data available expect a report with the journal export" file="./spec/requests/reports/get_journal_printout_spec.rb" time="0.135557"></testcase>
<testcase classname="spec.requests.patients.add_remark_for_patient_spec" name="AddRemarkForPatient creates a new remark" file="./spec/requests/patients/add_remark_for_patient_spec.rb" time="0.106147"></testcase>
<testcase classname="spec.requests.patients.add_remark_for_patient_spec" name="AddRemarkForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_remark_for_patient_spec.rb" time="0.079052"></testcase>
<testcase classname="spec.lib.core_ext.boolean_spec" name="Boolean casts false" file="./spec/lib/core_ext/boolean_spec.rb" time="0.001641"></testcase>
<testcase classname="spec.lib.core_ext.boolean_spec" name="Boolean is expected to respond to #to_b" file="./spec/lib/core_ext/boolean_spec.rb" time="0.002955"></testcase>
<testcase classname="spec.lib.core_ext.boolean_spec" name="Boolean casts true" file="./spec/lib/core_ext/boolean_spec.rb" time="0.001812"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns entries ordered by date descending" file="./spec/requests/journal/journal_entries_spec.rb" time="0.154599"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns the last two-week entries if period is set so" file="./spec/requests/journal/journal_entries_spec.rb" time="0.160503"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns paginated entries" file="./spec/requests/journal/journal_entries_spec.rb" time="0.216155"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns the today&apos;s entries if period is set so" file="./spec/requests/journal/journal_entries_spec.rb" time="0.165949"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns entries filtered by tags" file="./spec/requests/journal/journal_entries_spec.rb" time="0.155529"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns the last month entries if period is set so" file="./spec/requests/journal/journal_entries_spec.rb" time="0.204752"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries returns the meta data" file="./spec/requests/journal/journal_entries_spec.rb" time="0.126267"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries fails if journal is invalid" file="./spec/requests/journal/journal_entries_spec.rb" time="0.083515"></testcase>
<testcase classname="spec.requests.journal.journal_entries_spec" name="Journal Entries fails if user has no rights for the given journal" file="./spec/requests/journal/journal_entries_spec.rb" time="0.096968"></testcase>
<testcase classname="spec.models.vascular_access.site_examination_image_spec" name="VascularAccess::SiteExaminationImage is expected to have an attachment named media" file="./spec/models/vascular_access/site_examination_image_spec.rb" time="0.013368"></testcase>
<testcase classname="spec.models.vascular_access.site_examination_image_spec" name="VascularAccess::SiteExaminationImage is expected to belong to site_examination required: true" file="./spec/models/vascular_access/site_examination_image_spec.rb" time="0.004488"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription denies prescribing if not granted" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.131639"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription rejects updates if galenic form does not exist for the product" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.132099"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription succeeds if prescription dates are before start_date" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.150039"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription rejects past entries updates" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.162744"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription updates the given medication" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.151976"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription succeeds if prescription dates are not between start_date and end_date" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.164383"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription rejects edit if start and end date overlap" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.123970"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription fails if medication does not exist" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.087676"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription keeps track of previous medications" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.166401"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription succeeds if specific prescription dates are all after stop date" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.135900"></testcase>
<testcase classname="spec.requests.medications.edit_home_medication_prescription_spec" name="Medications EditHomeMedicationPrescription accepts today as end date" file="./spec/requests/medications/edit_home_medication_prescription_spec.rb" time="0.141246"></testcase>
<testcase classname="spec.requests.room_overviews_spec" name="Room Overviews API returns the available shift&apos;s" file="./spec/requests/room_overviews_spec.rb" time="0.188995"></testcase>
<testcase classname="spec.requests.room_overviews_spec" name="Room Overviews API returns not found (404) if room doesn&apos;t exist" file="./spec/requests/room_overviews_spec.rb" time="0.028911"></testcase>
<testcase classname="spec.requests.room_overviews_spec" name="Room Overviews API returns the current shift if the shift is not specified" file="./spec/requests/room_overviews_spec.rb" time="0.184077"></testcase>
<testcase classname="spec.requests.room_overviews_spec" name="Room Overviews API returns room&apos;s overview" file="./spec/requests/room_overviews_spec.rb" time="0.170408"></testcase>
<testcase classname="spec.requests.room_overviews_spec" name="Room Overviews API returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/room_overviews_spec.rb" time="0.026711"></testcase>
<testcase classname="spec.models.episodes.adt_event_spec" name="Episodes::AdtEvent is expected to belong to patient required: true" file="./spec/models/episodes/adt_event_spec.rb" time="0.006765"></testcase>
<testcase classname="spec.models.episodes.adt_event_spec" name="Episodes::AdtEvent is expected to validate that :event_type cannot be empty/falsy" file="./spec/models/episodes/adt_event_spec.rb" time="0.010728"></testcase>
<testcase classname="spec.models.episodes.adt_event_spec" name="Episodes::AdtEvent is expected to validate that :date cannot be empty/falsy" file="./spec/models/episodes/adt_event_spec.rb" time="0.006977"></testcase>
<testcase classname="spec.models.episodes.adt_event_spec" name="Episodes::AdtEvent is expected to validate that :patient_type cannot be empty/falsy" file="./spec/models/episodes/adt_event_spec.rb" time="0.009384"></testcase>
<testcase classname="spec.models.episodes.adt_event_spec" name="Episodes::AdtEvent is expected to validate that :episode_identifier cannot be empty/falsy" file="./spec/models/episodes/adt_event_spec.rb" time="0.011388"></testcase>
<testcase classname="spec.requests.sessions.get_transport_spec" name="GetSessionTransport returns sessions&apos;s transport preferences" file="./spec/requests/sessions/get_transport_spec.rb" time="0.130667"></testcase>
<testcase classname="spec.requests.sessions.get_transport_spec" name="GetSessionTransport fails if session does not exist" file="./spec/requests/sessions/get_transport_spec.rb" time="0.025927"></testcase>
<testcase classname="spec.requests.sessions.get_transport_spec" name="GetSessionTransport requires write rights" file="./spec/requests/sessions/get_transport_spec.rb" time="0.137014"></testcase>
<testcase classname="spec.requests.health.get_health_spec" name="Get health when all resources are healthy returns success (200)" file="./spec/requests/health/get_health_spec.rb" time="0.021883"></testcase>
<testcase classname="spec.requests.health.get_health_spec" name="Get health when one resources is unhealthy returns internal server error (500)" file="./spec/requests/health/get_health_spec.rb" time="0.015755"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products returns an list of products" file="./spec/requests/medications/search_products_spec.rb" time="0.141769"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by virtual" file="./spec/requests/medications/search_products_spec.rb" time="0.343126"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_products_spec.rb" time="0.026021"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by source" file="./spec/requests/medications/search_products_spec.rb" time="0.131602"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by ambulatory" file="./spec/requests/medications/search_products_spec.rb" time="0.128040"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by name" file="./spec/requests/medications/search_products_spec.rb" time="0.106013"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter products without virtual link" file="./spec/requests/medications/search_products_spec.rb" time="0.137841"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can limit the result" file="./spec/requests/medications/search_products_spec.rb" time="0.153792"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by administration routes" file="./spec/requests/medications/search_products_spec.rb" time="0.171919"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by ingredient name" file="./spec/requests/medications/search_products_spec.rb" time="0.080118"></testcase>
<testcase classname="spec.requests.medications.search_products_spec" name="Search Products can filter by intradialytic" file="./spec/requests/medications/search_products_spec.rb" time="0.139444"></testcase>
<testcase classname="spec.models.configurations.services.revert_spec" name="Configurations::Services::Revert reverts the configuration to default value" file="./spec/models/configurations/services/revert_spec.rb" time="0.011574"></testcase>
<testcase classname="spec.requests.task_groups_spec" name="TaskGroups returns the workflow task groups for the current phase" file="./spec/requests/task_groups_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers status should be &apos;processing&apos; when an import is busy, and &apos;available&apos; otherwise" file="./spec/requests/users/import_users_spec.rb" time="0.078659"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers updates the user when he already exists" file="./spec/requests/users/import_users_spec.rb" time="1.105589"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers returns forbidden when not authorised" file="./spec/requests/users/import_users_spec.rb" time="0.029893"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers fails when username is missing" file="./spec/requests/users/import_users_spec.rb" time="0.092444"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers insert user with nephrologist role when he does not exist" file="./spec/requests/users/import_users_spec.rb" time="1.095642"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers fails when header invalid" file="./spec/requests/users/import_users_spec.rb" time="0.097474"></testcase>
<testcase classname="spec.requests.users.import_users_spec" name="ImportUsers fails when role does not exists" file="./spec/requests/users/import_users_spec.rb" time="0.096641"></testcase>
<testcase classname="spec.jobs.send_journal_item_job_spec" name="SendJournalItemJob sends a json payload to an endpoint" file="./spec/jobs/send_journal_item_job_spec.rb" time="0.106109"></testcase>
<testcase classname="spec.models.medications.price_spec" name="Medications::Price is expected to belong to package required: true" file="./spec/models/medications/price_spec.rb" time="0.007310"></testcase>
<testcase classname="spec.models.medications.price_spec" name="Medications::Price is expected to validate that :price_cents cannot be empty/falsy" file="./spec/models/medications/price_spec.rb" time="0.007942"></testcase>
<testcase classname="spec.models.medications.price_spec" name="Medications::Price is expected to monetize price" file="./spec/models/medications/price_spec.rb" time="0.005432"></testcase>
<testcase classname="spec.models.medications.price_spec" name="Medications::Price is expected to validate that :price_type cannot be empty/falsy" file="./spec/models/medications/price_spec.rb" time="0.015184"></testcase>
<testcase classname="spec.models.medications.price_spec" name="Medications::Price is expected to validate that :currency cannot be empty/falsy" file="./spec/models/medications/price_spec.rb" time="0.007870"></testcase>
<testcase classname="spec.requests.logbook.logbook_promotions_spec" name="Logbook Promotions allows promoting a logbook entry to multiple journals" file="./spec/requests/logbook/logbook_promotions_spec.rb" time="0.174753"></testcase>
<testcase classname="spec.requests.logbook.logbook_promotions_spec" name="Logbook Promotions fails when logbook entry does not exist" file="./spec/requests/logbook/logbook_promotions_spec.rb" time="0.165270"></testcase>
<testcase classname="spec.requests.logbook.logbook_promotions_spec" name="Logbook Promotions fails when journal does not exist" file="./spec/requests/logbook/logbook_promotions_spec.rb" time="0.142573"></testcase>
<testcase classname="spec.requests.logbook.logbook_promotions_spec" name="Logbook Promotions fails when user doesn&apos;t have required rights for given journals" file="./spec/requests/logbook/logbook_promotions_spec.rb" time="0.147926"></testcase>
<testcase classname="spec.requests.logbook.logbook_promotions_spec" name="Logbook Promotions allows promoting a logbook entry to a journal" file="./spec/requests/logbook/logbook_promotions_spec.rb" time="0.194832"></testcase>
<testcase classname="spec.requests.medications.update_category_spec" name="Update category returns success (200) and an updated administration route" file="./spec/requests/medications/update_category_spec.rb" time="0.042187"></testcase>
<testcase classname="spec.requests.medications.update_category_spec" name="Update category returns unprocessable entity (422) when reusing a name" file="./spec/requests/medications/update_category_spec.rb" time="0.057418"></testcase>
<testcase classname="spec.requests.medications.update_category_spec" name="Update category returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/update_category_spec.rb" time="0.029178"></testcase>
<testcase classname="spec.requests.users.update_role_spec" name="UpdateRoleName updates role&apos;s name" file="./spec/requests/users/update_role_spec.rb" time="0.047782"></testcase>
<testcase classname="spec.requests.users.update_role_spec" name="UpdateRoleName updates admin role name" file="./spec/requests/users/update_role_spec.rb" time="0.042054"></testcase>
<testcase classname="spec.requests.users.update_role_spec" name="UpdateRoleName requires authorization" file="./spec/requests/users/update_role_spec.rb" time="0.034767"></testcase>
<testcase classname="spec.requests.users.update_role_spec" name="UpdateRoleName denies update if role does not exist" file="./spec/requests/users/update_role_spec.rb" time="0.038286"></testcase>
<testcase classname="spec.requests.users.update_role_spec" name="UpdateRoleName audits the action" file="./spec/requests/users/update_role_spec.rb" time="0.040605"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base transitions from :executing to :errored if an ExecutionError was raised" file="./spec/models/executions/state_machine_spec.rb" time="0.101739"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base transitions from :errored to :scheduled on retry" file="./spec/models/executions/state_machine_spec.rb" time="0.069154"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base is expected to have states &quot;created&quot;, &quot;scheduled&quot;, &quot;enqueued&quot;, &quot;executing&quot;, &quot;waiting&quot;, &quot;completed&quot;, and &quot;errored&quot;" file="./spec/models/executions/state_machine_spec.rb" time="0.029128"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base transitions from :executing to :errored if an error was raised" file="./spec/models/executions/state_machine_spec.rb" time="0.040313"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base transitions from :executing to :completed if no error is raised" file="./spec/models/executions/state_machine_spec.rb" time="0.027670"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base is expected to have initial state :created" file="./spec/models/executions/state_machine_spec.rb" time="0.021223"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :waiting from :enqueued on event :wait, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.020292"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :completed from :executing on event :complete, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.025151"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :executing from :scheduled on event :execute, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.021633"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :scheduled from :waiting on event :continue, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.029611"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :scheduled from :errored on event :retry, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.026997"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions is expected to transition state to :errored from :executing on event :error, with params: [] (on :default)" file="./spec/models/executions/state_machine_spec.rb" time="0.025993"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions #schedule transitions from created to enqueued when the job is enqueueable" file="./spec/models/executions/state_machine_spec.rb" time="0.029691"></testcase>
<testcase classname="spec.models.executions.state_machine_spec" name="Executions::Base state transitions #schedule transitions from created to scheduled when the job is not enqueueable" file="./spec/models/executions/state_machine_spec.rb" time="0.075752"></testcase>
<testcase classname="spec.models.medications.standing_orders.product_spec" name="Medications::StandingOrders::Product is expected to validate with PractitionerValidator" file="./spec/models/medications/standing_orders/product_spec.rb" time="0.028915"></testcase>
<testcase classname="spec.models.medications.standing_orders.product_spec" name="Medications::StandingOrders::Product#administer! creates a billing item" file="./spec/models/medications/standing_orders/product_spec.rb" time="0.212897"></testcase>
<testcase classname="spec.models.medications.standing_orders.product_spec" name="Medications::StandingOrders::Product#administer! creates an administration" file="./spec/models/medications/standing_orders/product_spec.rb" time="0.205916"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order creates a new recurrent order" file="./spec/requests/orders/create_order_spec.rb" time="0.104983"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order fails when user is unauthorized" file="./spec/requests/orders/create_order_spec.rb" time="0.080408"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order fails when type is not included in category" file="./spec/requests/orders/create_order_spec.rb" time="0.084799"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order fails when end date comes before start date" file="./spec/requests/orders/create_order_spec.rb" time="0.094277"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order fails when patient does not exist" file="./spec/requests/orders/create_order_spec.rb" time="0.028939"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order fails when end date is in the past" file="./spec/requests/orders/create_order_spec.rb" time="0.091054"></testcase>
<testcase classname="spec.requests.orders.create_order_spec" name="Create order creates a new single order" file="./spec/requests/orders/create_order_spec.rb" time="0.096736"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_spec" name="Lab System UpdateLabSystem returns the updated lab system" file="./spec/requests/laboratory/update_lab_system_spec.rb" time="0.040784"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_spec" name="Lab System UpdateLabSystem returns not found (404) if the lab system doesn&apos;t exist" file="./spec/requests/laboratory/update_lab_system_spec.rb" time="0.034144"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_system_spec" name="Lab System UpdateLabSystem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/update_lab_system_spec.rb" time="0.030908"></testcase>
<testcase classname="spec.requests.medications.delete_administration_route_spec" name="Delete Administration Route returns success (200) and deletes the route when in in a unsupervised source" file="./spec/requests/medications/delete_administration_route_spec.rb" time="0.057508"></testcase>
<testcase classname="spec.requests.medications.delete_administration_route_spec" name="Delete Administration Route returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/delete_administration_route_spec.rb" time="0.036675"></testcase>
<testcase classname="spec.requests.medications.delete_administration_route_spec" name="Delete Administration Route returns method not allowed (405) when deleting within a supervised source" file="./spec/requests/medications/delete_administration_route_spec.rb" time="0.043973"></testcase>
<testcase classname="spec.requests.medications.create_ingredient_spec" name="Create Ingredient returns not found (404) when using an undefined source" file="./spec/requests/medications/create_ingredient_spec.rb" time="0.035262"></testcase>
<testcase classname="spec.requests.medications.create_ingredient_spec" name="Create Ingredient returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_ingredient_spec.rb" time="0.028207"></testcase>
<testcase classname="spec.requests.medications.create_ingredient_spec" name="Create Ingredient returns unprocessable entity (422) when creating doubles" file="./spec/requests/medications/create_ingredient_spec.rb" time="0.041645"></testcase>
<testcase classname="spec.requests.medications.create_ingredient_spec" name="Create Ingredient returns success (200) and creates the ingredient when in in a unsupervised source" file="./spec/requests/medications/create_ingredient_spec.rb" time="0.040625"></testcase>
<testcase classname="spec.requests.medications.create_ingredient_spec" name="Create Ingredient returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_ingredient_spec.rb" time="0.030337"></testcase>
<testcase classname="spec.models.sessions.services.consume_form_disposables_spec" name="Sessions::Services::ConsumeFormDisposables#call consumes defined disposables marks the disposables as consumed" file="./spec/models/sessions/services/consume_form_disposables_spec.rb" time="0.094216"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment is expected to belong to author required: true" file="./spec/models/logbook/comment_spec.rb" time="0.004252"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment is expected to validate that :content cannot be empty/falsy" file="./spec/models/logbook/comment_spec.rb" time="0.005615"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment is expected to belong to parent required: true" file="./spec/models/logbook/comment_spec.rb" time="0.004049"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment#viewer_can_{edit,delete}? always equals false for a user other the author or promoter" file="./spec/models/logbook/comment_spec.rb" time="0.026660"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment#viewer_can_{edit,delete}? equals false for the author more than 8 hours after creation" file="./spec/models/logbook/comment_spec.rb" time="0.020573"></testcase>
<testcase classname="spec.models.logbook.comment_spec" name="Logbook::Comment#viewer_can_{edit,delete}? equals true for the author within 8 hours after creation" file="./spec/models/logbook/comment_spec.rb" time="0.022135"></testcase>
<testcase classname="spec.integrations.executions.exports.medication_administration_spec" name="Asynchronous exports: medication_administration generates the report" file="./spec/integrations/executions/exports/medication_administration_spec.rb" time="0.336736"></testcase>
<testcase classname="spec.requests.medications.delete_ingredient_spec" name="Delete Ingredient returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/delete_ingredient_spec.rb" time="0.037339"></testcase>
<testcase classname="spec.requests.medications.delete_ingredient_spec" name="Delete Ingredient returns success (200) and deletes the route when in in a unsupervised source" file="./spec/requests/medications/delete_ingredient_spec.rb" time="0.050705"></testcase>
<testcase classname="spec.requests.medications.delete_ingredient_spec" name="Delete Ingredient returns method not allowed (405) when deleting within a supervised source" file="./spec/requests/medications/delete_ingredient_spec.rb" time="0.040136"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User validates uniqueness of email" file="./spec/models/users/user_spec.rb" time="0.025958"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User has default avatar" file="./spec/models/users/user_spec.rb" time="0.012825"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User formats the practitioner identifier correctly" file="./spec/models/users/user_spec.rb" time="0.012203"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to have carbon :id, :first_name, :last_name, and :practitioner_identifier" file="./spec/models/users/user_spec.rb" time="0.001744"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User validates uniqueness of username" file="./spec/models/users/user_spec.rb" time="0.024333"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :password cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.011787"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :last_name cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.016076"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :username cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.017944"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to have an attachment named avatar" file="./spec/models/users/user_spec.rb" time="0.002302"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :role cannot be empty/falsy, producing a custom validation error on failure" file="./spec/models/users/user_spec.rb" time="0.016552"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to allow :email to be ‹&quot;user@example.com&quot;›" file="./spec/models/users/user_spec.rb" time="0.006595"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :password_digest cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.016033"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected not to allow :email to be ‹&quot;user-example.com&quot;›" file="./spec/models/users/user_spec.rb" time="0.008405"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User normalizes email" file="./spec/models/users/user_spec.rb" time="0.013104"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that the length of :password is at least 5" file="./spec/models/users/user_spec.rb" time="0.015428"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User normalizes username" file="./spec/models/users/user_spec.rb" time="0.012630"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to belong to role required: true" file="./spec/models/users/user_spec.rb" time="0.009691"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :first_name cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.019321"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User is expected to validate that :email cannot be empty/falsy" file="./spec/models/users/user_spec.rb" time="0.019009"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User#rights returns user rights" file="./spec/models/users/user_spec.rb" time="0.014583"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User.find_or_create_by_user_info finds an user by its username (case-insensitive)" file="./spec/models/users/user_spec.rb" time="0.016205"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User.find_or_create_by_user_info creates an user by its username" file="./spec/models/users/user_spec.rb" time="0.016045"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User when password policy is enforced enforces strong passwords" file="./spec/models/users/user_spec.rb" time="2.165698"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User.find_by_email_or_username finds a user by email" file="./spec/models/users/user_spec.rb" time="0.027971"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User.find_by_email_or_username finds a user by case insensitive username" file="./spec/models/users/user_spec.rb" time="0.023642"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User#has_right? returns true if the user has a specific right" file="./spec/models/users/user_spec.rb" time="0.013477"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User behaves like Indestructible is indestructible" file="./spec/models/users/user_spec.rb" time="0.002302"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User#avatar_url returns a fully qualified URL" file="./spec/models/users/user_spec.rb" time="0.014451"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User#full_name returns a user his/her full_name" file="./spec/models/users/user_spec.rb" time="0.012780"></testcase>
<testcase classname="spec.models.users.user_spec" name="Users::User#password= stores encrypted password in `password_digest`" file="./spec/models/users/user_spec.rb" time="0.003466"></testcase>
<testcase classname="spec.models.infrastructure.connector_spec" name="Infrastructure::Connector is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/connector_spec.rb" time="0.005115"></testcase>
<testcase classname="spec.migrations.20200205085849_migrate_configuration_spec" name="MigrateConfiguration creates the appropriate configurations" file="./spec/migrations/20200205085849_migrate_configuration_spec.rb" time="0.332571"></testcase>
<testcase classname="spec.migrations.20200205085849_migrate_configuration_spec" name="MigrateConfiguration SEND_SESSION_SUMMARY_TO_EHR migrates correctly when it is `never`" file="./spec/migrations/20200205085849_migrate_configuration_spec.rb" time="0.289632"></testcase>
<testcase classname="spec.migrations.20200205085849_migrate_configuration_spec" name="MigrateConfiguration SEND_SESSION_SUMMARY_TO_EHR migrates correctly when it is `adhoc`" file="./spec/migrations/20200205085849_migrate_configuration_spec.rb" time="0.294350"></testcase>
<testcase classname="spec.migrations.20200205085849_migrate_configuration_spec" name="MigrateConfiguration SEND_SESSION_SUMMARY_TO_EHR migrates correctly when it is `always`" file="./spec/migrations/20200205085849_migrate_configuration_spec.rb" time="0.269116"></testcase>
<testcase classname="spec.requests.briefings.briefing_closures_spec" name="BriefingClosures closes the given briefing" file="./spec/requests/briefings/briefing_closures_spec.rb" time="0.087335"></testcase>
<testcase classname="spec.requests.briefings.briefing_closures_spec" name="BriefingClosures fails if the given briefing is closed" file="./spec/requests/briefings/briefing_closures_spec.rb" time="0.046248"></testcase>
<testcase classname="spec.requests.briefings.briefing_closures_spec" name="BriefingClosures fails if the given briefing does not exist" file="./spec/requests/briefings/briefing_closures_spec.rb" time="0.026990"></testcase>
<testcase classname="spec.models.executions.medications.sync_spec" name="Executions::Medications::Sync#schedule updates identifiers from enabled, supervised, syncable sources" file="./spec/models/executions/medications/sync_spec.rb" time="0.155744"></testcase>
<testcase classname="spec.models.executions.medications.sync_spec" name="Executions::Medications::Sync#schedule self-destructs when there are no updates" file="./spec/models/executions/medications/sync_spec.rb" time="0.038715"></testcase>
<testcase classname="spec.models.executions.medications.sync_spec" name="Executions::Medications::Sync#schedule schedules an import job" file="./spec/models/executions/medications/sync_spec.rb" time="0.062785"></testcase>
<testcase classname="spec.models.executions.medications.sync_spec" name="Executions::Medications::Sync#schedule schedules a timeout job" file="./spec/models/executions/medications/sync_spec.rb" time="0.062827"></testcase>
<testcase classname="spec.models.executions.medications.sync_spec" name="Executions::Medications::Sync#schedule raises unless there are sources defined" file="./spec/models/executions/medications/sync_spec.rb" time="0.031630"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_spec" name="Update an existing patient contact updates an existing contact" file="./spec/requests/patients/update_patient_contact_spec.rb" time="0.066258"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_spec" name="Update an existing patient contact fails if new contact is invalid" file="./spec/requests/patients/update_patient_contact_spec.rb" time="0.065981"></testcase>
<testcase classname="spec.requests.patients.update_patient_contact_spec" name="Update an existing patient contact returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_patient_contact_spec.rb" time="0.051356"></testcase>
<testcase classname="spec.requests.create_code_system_spec" name="Create Code System returns unprocessable entity (422) when creating doubles" file="./spec/requests/create_code_system_spec.rb" time="0.036563"></testcase>
<testcase classname="spec.requests.create_code_system_spec" name="Create Code System returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/create_code_system_spec.rb" time="0.026209"></testcase>
<testcase classname="spec.requests.create_code_system_spec" name="Create Code System returns success (200) and creates the code system" file="./spec/requests/create_code_system_spec.rb" time="0.035528"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns success (200) when the exportable was already exported" file="./spec/requests/exports/export_exportable_spec.rb" time="0.050635"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable exports the carbon copy of the medication exportable" file="./spec/requests/exports/export_exportable_spec.rb" time="0.745709"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns success (200) and exports the medication exportable" file="./spec/requests/exports/export_exportable_spec.rb" time="0.758618"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns unprocessable entity (422) when the exportable is in draft" file="./spec/requests/exports/export_exportable_spec.rb" time="0.032801"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable exports the carbon copy of the billing exportable" file="./spec/requests/exports/export_exportable_spec.rb" time="0.365262"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns success (200) and exports the billing exportable" file="./spec/requests/exports/export_exportable_spec.rb" time="0.498218"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/export_exportable_spec.rb" time="0.031397"></testcase>
<testcase classname="spec.requests.exports.export_exportable_spec" name="Export exportable returns not found (404) if the exportable is not found" file="./spec/requests/exports/export_exportable_spec.rb" time="0.025710"></testcase>
<testcase classname="spec.requests.patients.update_patient_spec" name="Update patient updating a patient fails with forbidden when not authorized" file="./spec/requests/patients/update_patient_spec.rb" time="0.058187"></testcase>
<testcase classname="spec.requests.patients.update_patient_spec" name="Update patient updating a patient succeeds with valid payload" file="./spec/requests/patients/update_patient_spec.rb" time="0.093145"></testcase>
<testcase classname="spec.requests.patients.update_patient_spec" name="Update patient updating a patient fails if the patient does not exist" file="./spec/requests/patients/update_patient_spec.rb" time="0.040387"></testcase>
<testcase classname="spec.requests.patients.update_patient_spec" name="Update patient updating a patient when manual patient management is disabled fails" file="./spec/requests/patients/update_patient_spec.rb" time="0.088534"></testcase>
<testcase classname="spec.requests.patients.unenrollments_spec" name="Patient Unenrollments returns not found (404) if the patient cannot be found" file="./spec/requests/patients/unenrollments_spec.rb" time="0.031404"></testcase>
<testcase classname="spec.requests.patients.unenrollments_spec" name="Patient Unenrollments returns all unenrollments for a patient" file="./spec/requests/patients/unenrollments_spec.rb" time="0.105279"></testcase>
<testcase classname="spec.requests.patients.unenrollments_spec" name="Patient Unenrollments returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/unenrollments_spec.rb" time="0.023959"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient returns an empty array when no match" file="./spec/requests/patients/search_patient_spec.rb" time="0.463812"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches enrolled when search_scope not set" file="./spec/requests/patients/search_patient_spec.rb" time="0.488248"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient prioritizes `search_scope` over `exclude_assigned`" file="./spec/requests/patients/search_patient_spec.rb" time="0.501649"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches patients with non ascii characters (Ä)" file="./spec/requests/patients/search_patient_spec.rb" time="0.472396"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches by patient number" file="./spec/requests/patients/search_patient_spec.rb" time="0.448301"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches for patient number starting from 5 digits" file="./spec/requests/patients/search_patient_spec.rb" time="0.489249"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches only for full patient numbers" file="./spec/requests/patients/search_patient_spec.rb" time="0.495189"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches by name" file="./spec/requests/patients/search_patient_spec.rb" time="0.490488"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches by name and birthdate" file="./spec/requests/patients/search_patient_spec.rb" time="0.501745"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient accepts birthdate with dashes" file="./spec/requests/patients/search_patient_spec.rb" time="0.503226"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient does not take into account special characters" file="./spec/requests/patients/search_patient_spec.rb" time="0.477964"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/search_patient_spec.rb" time="0.486613"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches by name and patient number" file="./spec/requests/patients/search_patient_spec.rb" time="0.505180"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient does not return patients having ongoing session if set so" file="./spec/requests/patients/search_patient_spec.rb" time="0.512170"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches by birthdate," file="./spec/requests/patients/search_patient_spec.rb" time="0.515500"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient searches not enrolled when search_scope set to &apos;not_enrolled&apos;" file="./spec/requests/patients/search_patient_spec.rb" time="0.513738"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient accepts `1` as `true` for `exclude_assigned_patients` parameter" file="./spec/requests/patients/search_patient_spec.rb" time="0.507770"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient complains about invalid data" file="./spec/requests/patients/search_patient_spec.rb" time="0.512628"></testcase>
<testcase classname="spec.requests.patients.search_patient_spec" name="SearchPatient returns no results if invalid query is passed " file="./spec/requests/patients/search_patient_spec.rb" time="0.476806"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room updates the room if upsizing" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.204229"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room returns unauthorized if unauthorized" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.046474"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room when switching from grid to list returns an error if downsizing" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.242077"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room when switching from grid to list updates the room" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.296123"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room switching from grid to list and back fails if positions is greater than room capacity" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.318896"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room in list mode returns an error if room dimension is under the dimension limit" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.083722"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room in list mode returns an error if downsizing in list mode" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.081290"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room when switching from list to grid returns an error if downsizing" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.119109"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room when switching from list to grid updates the room " file="./spec/requests/infrastructure/update_room_spec.rb" time="0.151401"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room in grid mode returns an error if downsizing" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.164587"></testcase>
<testcase classname="spec.requests.infrastructure.update_room_spec" name="Rooms when updating a room in grid mode returns an error if room dimension is over/under the dimension limit" file="./spec/requests/infrastructure/update_room_spec.rb" time="0.219113"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns a carbon copy of the billing items" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.318285"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns unprocessable entity (422) when the billing item is already present" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.283076"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns not found (404) if the exportable cannot be found" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.255631"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns unprocessable entity (422) when adding a billing item of incompatible type" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.355428"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns created (201) and the exportable" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.316698"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns not found (404) if the billing item cannot be found" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.036699"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns unprocessable entity (422) when the exportable is not in draft" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.266684"></testcase>
<testcase classname="spec.requests.exports.create_exportable_billing_items_spec" name="Create exportable billing items association returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/create_exportable_billing_items_spec.rb" time="0.270260"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustment_spec" name="GET /ultrafiltration_volume_adjustments/:id returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/get_ultrafiltration_volume_adjustment_spec.rb" time="0.032755"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustment_spec" name="GET /ultrafiltration_volume_adjustments/:id returns 404 not found if the ultrafiltration volume adjustment does not exist" file="./spec/requests/patients/get_ultrafiltration_volume_adjustment_spec.rb" time="0.032830"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustment_spec" name="GET /ultrafiltration_volume_adjustments/:id returns the ultrafiltration volume adjustment" file="./spec/requests/patients/get_ultrafiltration_volume_adjustment_spec.rb" time="0.099120"></testcase>
<testcase classname="spec.models.reports.report_spec" name="Reports::Report is expected to have an attachment named document" file="./spec/models/reports/report_spec.rb" time="0.015559"></testcase>
<testcase classname="spec.models.reports.report_spec" name="Reports::Report is expected to validate that :report_type cannot be empty/falsy" file="./spec/models/reports/report_spec.rb" time="0.007195"></testcase>
<testcase classname="spec.models.reports.report_spec" name="Reports::Report.latest " file="./spec/models/reports/report_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.reports.report_spec" name="Reports::Report.rotate! rotates backups" file="./spec/models/reports/report_spec.rb" time="0.317025"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/room_spec.rb" time="0.009581"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room is expected to belong to stock optional: true" file="./spec/models/infrastructure/room_spec.rb" time="0.004618"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room is expected to belong to center required: true" file="./spec/models/infrastructure/room_spec.rb" time="0.004413"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room is expected to have many positions" file="./spec/models/infrastructure/room_spec.rb" time="0.002206"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room validates uniqueness of name" file="./spec/models/infrastructure/room_spec.rb" time="0.034976"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room.create_with_positions creates a room w/ default positions" file="./spec/models/infrastructure/room_spec.rb" time="0.000007"><skipped/></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room#used_for_ongoing_sessions? returns false when there are no active sessions" file="./spec/models/infrastructure/room_spec.rb" time="0.120745"></testcase>
<testcase classname="spec.models.infrastructure.room_spec" name="Infrastructure::Room#used_for_ongoing_sessions? returns true when there are active sessions" file="./spec/models/infrastructure/room_spec.rb" time="0.096404"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication deletes future medications" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.122316"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication fails deletion if medication not found" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.080918"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication delete future medication of restarted stopped medication creates stopped medication" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.323619"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication can&apos;t stop stopped medication" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.164364"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication stops medication without archiving" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.156093"></testcase>
<testcase classname="spec.requests.medications.stop_intradialytic_medication_spec" name="Medications StopIntradialyticMedication requires write rights" file="./spec/requests/medications/stop_intradialytic_medication_spec.rb" time="0.025785"></testcase>
<testcase classname="spec.requests.patients.get_treatments_spec" name="Treatments returns all treatments" file="./spec/requests/patients/get_treatments_spec.rb" time="0.073331"></testcase>
<testcase classname="spec.requests.patients.get_treatments_spec" name="Treatments returns treatments sorted by name" file="./spec/requests/patients/get_treatments_spec.rb" time="0.069398"></testcase>
<testcase classname="spec.requests.patients.get_treatments_spec" name="Treatments requires read rights" file="./spec/requests/patients/get_treatments_spec.rb" time="0.026814"></testcase>
<testcase classname="spec.requests.medications.search_ingredients_spec" name="Search Ingredients can filter by source" file="./spec/requests/medications/search_ingredients_spec.rb" time="0.066081"></testcase>
<testcase classname="spec.requests.medications.search_ingredients_spec" name="Search Ingredients returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_ingredients_spec.rb" time="0.027241"></testcase>
<testcase classname="spec.requests.medications.search_ingredients_spec" name="Search Ingredients can filter by name" file="./spec/requests/medications/search_ingredients_spec.rb" time="0.075086"></testcase>
<testcase classname="spec.requests.medications.search_ingredients_spec" name="Search Ingredients returns an list of ingredients" file="./spec/requests/medications/search_ingredients_spec.rb" time="0.109778"></testcase>
<testcase classname="spec.models.dialysis_machine_model_repository_spec" name="DialysisMachineModelRepository.find returns a nil dialysis machine model when id is nil" file="./spec/models/dialysis_machine_model_repository_spec.rb" time="0.001909"></testcase>
<testcase classname="spec.models.dialysis_machine_model_repository_spec" name="DialysisMachineModelRepository.find returns a nil dialysis machine model when id isn&apos;t found" file="./spec/models/dialysis_machine_model_repository_spec.rb" time="0.001756"></testcase>
<testcase classname="spec.models.dialysis_machine_model_repository_spec" name="DialysisMachineModelRepository.find finds dialysis machine model by id" file="./spec/models/dialysis_machine_model_repository_spec.rb" time="0.002099"></testcase>
<testcase classname="spec.models.dialysis_machine_model_repository_spec" name="DialysisMachineModelRepository.all returns a collection of known dialysis machine models" file="./spec/models/dialysis_machine_model_repository_spec.rb" time="0.002041"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update returns error messages for each field" file="./spec/requests/users/update_user_spec.rb" time="0.066996"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update fails updating if user not found" file="./spec/requests/users/update_user_spec.rb" time="0.028718"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update requires authorization" file="./spec/requests/users/update_user_spec.rb" time="0.043001"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update updates optional &apos;practitioner_identifier&apos;" file="./spec/requests/users/update_user_spec.rb" time="0.062288"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update updates avatar" file="./spec/requests/users/update_user_spec.rb" time="0.150162"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update updates general information" file="./spec/requests/users/update_user_spec.rb" time="0.055643"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update returns translated error messages" file="./spec/requests/users/update_user_spec.rb" time="0.069792"></testcase>
<testcase classname="spec.requests.users.update_user_spec" name="UsersController.update when password policy is enforced updates user even without password field" file="./spec/requests/users/update_user_spec.rb" time="1.309458"></testcase>
<testcase classname="spec.models.configurations.services.reset_all_spec" name="Configurations::Services::ResetAll resets the configuration to original values" file="./spec/models/configurations/services/reset_all_spec.rb" time="0.013208"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_spec" name="Center returns unprocessable entity (422) if the center name already exists" file="./spec/requests/infrastructure/create_center_spec.rb" time="0.046302"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_spec" name="Center returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_center_spec.rb" time="0.029086"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_spec" name="Center returns created (201) if the center was created" file="./spec/requests/infrastructure/create_center_spec.rb" time="0.051285"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_spec" name="Center validate facility identifier" file="./spec/requests/infrastructure/create_center_spec.rb" time="0.033382"></testcase>
<testcase classname="spec.requests.patients.create_patient_spec" name="Create Patient requires authorization" file="./spec/requests/patients/create_patient_spec.rb" time="0.033258"></testcase>
<testcase classname="spec.requests.patients.create_patient_spec" name="Create Patient does not creates the patient if no diagnose was provided" file="./spec/requests/patients/create_patient_spec.rb" time="0.041411"></testcase>
<testcase classname="spec.requests.patients.create_patient_spec" name="Create Patient creates and enrolls the patient if it does not exist" file="./spec/requests/patients/create_patient_spec.rb" time="0.107112"></testcase>
<testcase classname="spec.requests.patients.create_patient_spec" name="Create Patient when manual patient management is disabled cannot manually create a patient" file="./spec/requests/patients/create_patient_spec.rb" time="0.041620"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate does not create candidates for orders having past date range" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.145759"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate produces candidates for active every week orders" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.172538"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate produces candidates for active one-off orders" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.142795"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate creates a due candidate for an order when the session start date is different from the session end date" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.222183"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate does not create candidates for past one-off orders" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.128195"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate produces candidates for active recurring orders" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.145224"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate does not create candidates for an archived order" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.129350"></testcase>
<testcase classname="spec.models.orders.tasks.delegate_spec" name="Orders::Tasks::Delegate produces candidates for active every week orders that were created on the same day" file="./spec/models/orders/tasks/delegate_spec.rb" time="0.159788"></testcase>
<testcase classname="spec.lib.lock_spec" name="Lock creates a lock for a key" file="./spec/lib/lock_spec.rb" time="0.001803"></testcase>
<testcase classname="spec.lib.lock_spec" name="Lock return only one lock per key" file="./spec/lib/lock_spec.rb" time="0.001775"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder creates order for magistral preparation" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.150367"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder creates and sends an order" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.192077"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder denies creating if not granted" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.127117"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder fails if package does not match medication" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.126293"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder fails if patient does not exist" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.150635"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder creates order" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.157519"></testcase>
<testcase classname="spec.requests.medications.create_home_medication_order_spec" name="Medications CreateHomeMedicationOrder fails if prescription patient does not match order patient" file="./spec/requests/medications/create_home_medication_order_spec.rb" time="0.191834"></testcase>
<testcase classname="spec.models.medications.requests.templates.ambulatory_spec" name="Medications::Requests::Templates::Ambulatory has default order_properties" file="./spec/models/medications/requests/templates/ambulatory_spec.rb" time="0.058125"></testcase>
<testcase classname="spec.models.executions.recip_e.create_spec" name="Executions::RecipE::Base#execute! updates prescription with rid" file="./spec/models/executions/recip_e/create_spec.rb" time="0.413020"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule returns unprocessable entity (422) if quantity is too big" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.165671"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule updates quantity of existing intake moments" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.200448"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule fails update if a medication not found" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.111254"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule allows to remove an intake moment" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.231703"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule allows to add intake moments to prescription" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.165080"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule allows to update prescription comment" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.153232"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule requires write rights" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.101769"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_schedule_spec" name="Medications UpdateHomeMedicationSchedule fails update if patient not found" file="./spec/requests/medications/update_home_medication_schedule_spec.rb" time="0.126604"></testcase>
<testcase classname="spec.requests.devices.resolve_device_alerts_spec" name="resolve_alerts fails when not authorized" file="./spec/requests/devices/resolve_device_alerts_spec.rb" time="0.041094"></testcase>
<testcase classname="spec.requests.devices.resolve_device_alerts_spec" name="resolve_alerts succeeds when authorized" file="./spec/requests/devices/resolve_device_alerts_spec.rb" time="0.039565"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.get raises an error when the configuration does not exist" file="./spec/lib/nephroflow/config_spec.rb" time="0.003777"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.get creates a default configuration when the entry is not present" file="./spec/lib/nephroflow/config_spec.rb" time="0.014076"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.get caches the configuration" file="./spec/lib/nephroflow/config_spec.rb" time="0.010313"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.get retrieves the configuration" file="./spec/lib/nephroflow/config_spec.rb" time="0.008091"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.set updates the configuration" file="./spec/lib/nephroflow/config_spec.rb" time="0.018151"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.set invalidates the cache" file="./spec/lib/nephroflow/config_spec.rb" time="0.029232"></testcase>
<testcase classname="spec.lib.nephroflow.config_spec" name="NephroFlow::Config.set creates a default configuration when the entry is not present" file="./spec/lib/nephroflow/config_spec.rb" time="0.010543"></testcase>
<testcase classname="spec.models.charts.vascular_access_complications_history_spec" name="Charts::VascularAccessComplicationsHistory#call returns 1 year complications count grouped by month" file="./spec/models/charts/vascular_access_complications_history_spec.rb" time="1.704113"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector recovers from unauthorized exception" file="./spec/models/chronos/services/connector_spec.rb" time="0.007137"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector creates an unexpected exception for technical chronos exceptions" file="./spec/models/chronos/services/connector_spec.rb" time="0.004634"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector creates a technical error when a recoverable exception is returned, but it is not known" file="./spec/models/chronos/services/connector_spec.rb" time="0.004564"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector creates a domain error with the code as translation key for unprocessable entity exceptions" file="./spec/models/chronos/services/connector_spec.rb" time="0.004009"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector creates a no data found exception when a 404 is received from chronos" file="./spec/models/chronos/services/connector_spec.rb" time="0.003469"></testcase>
<testcase classname="spec.models.chronos.services.connector_spec" name="Chronos::Services::Connector creates an unexpected exception for http 500 with no body" file="./spec/models/chronos/services/connector_spec.rb" time="0.004111"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio is expected to respond to [:numerator, :denominator]" file="./spec/types/ratio_spec.rb" time="0.004576"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio#&lt;=&gt; returns -1 when value is smaller" file="./spec/types/ratio_spec.rb" time="0.005272"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio#&lt;=&gt; returns 1 when numerator is greater" file="./spec/types/ratio_spec.rb" time="0.005854"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio#&lt;=&gt; returns 0 when value is equal" file="./spec/types/ratio_spec.rb" time="0.005316"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio#&lt;=&gt; returns nil when denominator is different" file="./spec/types/ratio_spec.rb" time="0.005217"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio type cast type casts using .to_ratio" file="./spec/types/ratio_spec.rb" time="0.006341"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio type cast type casts using Ratio()" file="./spec/types/ratio_spec.rb" time="0.010978"></testcase>
<testcase classname="spec.types.ratio_spec" name="Ratio#next, #succ returns the next value" file="./spec/types/ratio_spec.rb" time="0.008060"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_type_spec" name="VascularAccess::InterventionType returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/update_intervention_type_spec.rb" time="0.031941"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_type_spec" name="VascularAccess::InterventionType returns not found (404) if the diagnosis is not found" file="./spec/requests/vascular_access/update_intervention_type_spec.rb" time="0.038482"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_type_spec" name="VascularAccess::InterventionType audits the update action" file="./spec/requests/vascular_access/update_intervention_type_spec.rb" time="0.064850"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_type_spec" name="VascularAccess::InterventionType returns success (200) and the updated diagnosis" file="./spec/requests/vascular_access/update_intervention_type_spec.rb" time="0.058215"></testcase>
<testcase classname="spec.models.vascular_access.site_attachments_spec" name="VascularAccess::SiteAttachment is expected to have an attachment named media" file="./spec/models/vascular_access/site_attachments_spec.rb" time="0.022250"></testcase>
<testcase classname="spec.models.vascular_access.site_attachments_spec" name="VascularAccess::SiteAttachment is expected to belong to site required: true" file="./spec/models/vascular_access/site_attachments_spec.rb" time="0.004645"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient does not return active medications if status equals &apos;stopped&apos;" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.176454"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient returns medications for products and magistral preparations" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.212569"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient returns medications for the given patient" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.171888"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient returns several medications ordered by product name" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.212086"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient returns latest medications for the given patient" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.187277"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_for_patient_spec" name="Get home medication for patient requires read rights" file="./spec/requests/medications/get_home_medication_for_patient_spec.rb" time="0.126291"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication rejects restart if start and end date overlap" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.128493"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication restarts a stopped medication with an end date" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.160058"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication restarts a stopped medication without end date" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.165507"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication cannot restart an active medication" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.114691"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication rejects restart if start or end date are in the past" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.127800"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication requires write rights" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.121576"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication does not change the end date of the stopped medication in the archived copy" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.174445"></testcase>
<testcase classname="spec.requests.medications.restart_home_medication_spec" name="Medications RestartHomeMedication fails if medication does not exist" file="./spec/requests/medications/restart_home_medication_spec.rb" time="0.096867"></testcase>
<testcase classname="spec.requests.planning.abscences_spec" name="Absences GET /api/patients/:patient_id/absences lists future absences for a given patient" file="./spec/requests/planning/abscences_spec.rb" time="0.117739"></testcase>
<testcase classname="spec.requests.planning.abscences_spec" name="Absences POST /api/patients/:patient_id/absences creates a new absence in the past" file="./spec/requests/planning/abscences_spec.rb" time="0.085198"></testcase>
<testcase classname="spec.requests.planning.abscences_spec" name="Absences POST /api/patients/:patient_id/absences creates a new absence in the future" file="./spec/requests/planning/abscences_spec.rb" time="0.112249"></testcase>
<testcase classname="spec.requests.planning.abscences_spec" name="Absences POST /api/patients/:patient_id/absences fails to create a new absence when end date comes before start date" file="./spec/requests/planning/abscences_spec.rb" time="0.096476"></testcase>
<testcase classname="spec.requests.planning.abscences_spec" name="Absences DELETE /api/absences/:id deletes an absence" file="./spec/requests/planning/abscences_spec.rb" time="0.106080"></testcase>
<testcase classname="spec.models.patients.allergy_spec" name="Patients::Allergy is expected to belong to patient required: true" file="./spec/models/patients/allergy_spec.rb" time="0.004989"></testcase>
<testcase classname="spec.models.patients.allergy_spec" name="Patients::Allergy is expected to validate that :substance cannot be empty/falsy" file="./spec/models/patients/allergy_spec.rb" time="0.006971"></testcase>
<testcase classname="spec.models.patients.allergy_spec" name="Patients::Allergy is expected to validate that :reaction cannot be empty/falsy" file="./spec/models/patients/allergy_spec.rb" time="0.006744"></testcase>
<testcase classname="spec.requests.medications.validate_provided_moments_spec" name="Medications validate_provided_moments fails validation if patient not found" file="./spec/requests/medications/validate_provided_moments_spec.rb" time="0.144057"></testcase>
<testcase classname="spec.requests.medications.validate_provided_moments_spec" name="Medications validate_provided_moments invalidates an invalid set of moments" file="./spec/requests/medications/validate_provided_moments_spec.rb" time="0.176832"></testcase>
<testcase classname="spec.requests.medications.validate_provided_moments_spec" name="Medications validate_provided_moments requires read rights" file="./spec/requests/medications/validate_provided_moments_spec.rb" time="0.131828"></testcase>
<testcase classname="spec.requests.medications.validate_provided_moments_spec" name="Medications validate_provided_moments validates a valid set of moments" file="./spec/requests/medications/validate_provided_moments_spec.rb" time="0.000007"><skipped/></testcase>
<testcase classname="spec.jobs.executions.medications.import_job_spec" name="Executions::Medications::ImportJob transitions the execution to `waiting`" file="./spec/jobs/executions/medications/import_job_spec.rb" time="0.055788"></testcase>
<testcase classname="spec.jobs.executions.medications.import_job_spec" name="Executions::Medications::ImportJob publishes Apollo message grouped by source" file="./spec/jobs/executions/medications/import_job_spec.rb" time="0.043308"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :name is case-sensitively unique" file="./spec/models/code_system_spec.rb" time="0.014708"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :name cannot be empty/falsy" file="./spec/models/code_system_spec.rb" time="0.018660"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :uri cannot be empty/falsy" file="./spec/models/code_system_spec.rb" time="0.012340"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :version cannot be empty/falsy" file="./spec/models/code_system_spec.rb" time="0.012845"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :title cannot be empty/falsy" file="./spec/models/code_system_spec.rb" time="0.021608"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to have many codes dependent =&gt; destroy" file="./spec/models/code_system_spec.rb" time="0.007678"></testcase>
<testcase classname="spec.models.code_system_spec" name="CodeSystem is expected to validate that :published_at cannot be empty/falsy" file="./spec/models/code_system_spec.rb" time="0.009777"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position is expected to belong to room required: true" file="./spec/models/infrastructure/position_spec.rb" time="0.006870"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position is expected to validate that :number cannot be empty/falsy" file="./spec/models/infrastructure/position_spec.rb" time="0.008052"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position is expected to validate that :order cannot be empty/falsy" file="./spec/models/infrastructure/position_spec.rb" time="0.008470"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position validates uniqueness of order" file="./spec/models/infrastructure/position_spec.rb" time="0.046763"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position validates uniqueness of number" file="./spec/models/infrastructure/position_spec.rb" time="0.078791"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position#swap swaps the positions order" file="./spec/models/infrastructure/position_spec.rb" time="0.043192"></testcase>
<testcase classname="spec.models.infrastructure.position_spec" name="Infrastructure::Position#swap raises an error when swapping two positions from a different room" file="./spec/models/infrastructure/position_spec.rb" time="0.011257"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes can filter by name" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.064583"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes can filter by ambulatory" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.069170"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes can filter by intradialytic" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.090813"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes can filter by source" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.068196"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes returns an list of administration routes" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.085655"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.028433"></testcase>
<testcase classname="spec.requests.medications.get_administration_routes_spec" name="GetAdministrationRoutes can retrieve codes as tables" file="./spec/requests/medications/get_administration_routes_spec.rb" time="0.075054"></testcase>
<testcase classname="spec.requests.wounds.archive_wound_spec" name="ArchiveWound returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/archive_wound_spec.rb" time="0.076660"></testcase>
<testcase classname="spec.requests.wounds.archive_wound_spec" name="ArchiveWound fails to archive an archived wound" file="./spec/requests/wounds/archive_wound_spec.rb" time="0.062949"></testcase>
<testcase classname="spec.requests.wounds.archive_wound_spec" name="ArchiveWound archives the given wound" file="./spec/requests/wounds/archive_wound_spec.rb" time="0.073084"></testcase>
<testcase classname="spec.requests.wounds.archive_wound_spec" name="ArchiveWound returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/archive_wound_spec.rb" time="0.035049"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base has a default category" file="./spec/models/executions/exports/base_spec.rb" time="0.002147"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base format sets a default format" file="./spec/models/executions/exports/base_spec.rb" time="0.022936"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base format does not allow unknown formats" file="./spec/models/executions/exports/base_spec.rb" time="0.009685"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base#execute! generates a csv and attaches it" file="./spec/models/executions/exports/base_spec.rb" time="0.074382"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base#execute! generates a xlsx and attaches it" file="./spec/models/executions/exports/base_spec.rb" time="0.076335"></testcase>
<testcase classname="spec.models.executions.exports.base_spec" name="Executions::Exports::Base#schedule! schedules a job" file="./spec/models/executions/exports/base_spec.rb" time="0.031755"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_systems_spec" name="Lab System GetLabSystems returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/get_lab_systems_spec.rb" time="0.054879"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_systems_spec" name="Lab System GetLabSystems returns the lab systems" file="./spec/requests/laboratory/get_lab_systems_spec.rb" time="0.041857"></testcase>
<testcase classname="spec.requests.episodes.create_adt_event_spec" name="CreateAdtEpisodeEvent adds a new discharge adt event" file="./spec/requests/episodes/create_adt_event_spec.rb" time="0.146956"></testcase>
<testcase classname="spec.requests.episodes.create_adt_event_spec" name="CreateAdtEpisodeEvent returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/episodes/create_adt_event_spec.rb" time="0.088497"></testcase>
<testcase classname="spec.requests.episodes.create_adt_event_spec" name="CreateAdtEpisodeEvent adds a new cancel discharge adt event" file="./spec/requests/episodes/create_adt_event_spec.rb" time="0.125893"></testcase>
<testcase classname="spec.requests.episodes.create_adt_event_spec" name="CreateAdtEpisodeEvent adds a new cancel admission adt event" file="./spec/requests/episodes/create_adt_event_spec.rb" time="0.122061"></testcase>
<testcase classname="spec.requests.episodes.create_adt_event_spec" name="CreateAdtEpisodeEvent adds a new admission adt event" file="./spec/requests/episodes/create_adt_event_spec.rb" time="0.149526"></testcase>
<testcase classname="spec.jobs.send_patient_admission_job_spec" name="SendPatientAdmissionJob sends a json payload to an endpoint" file="./spec/jobs/send_patient_admission_job_spec.rb" time="0.153271"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns executions filtered by user_id if param was passed" file="./spec/requests/executions/get_executions_spec.rb" time="0.079796"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/get_executions_spec.rb" time="0.027690"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns executions filtered by multiple types if param was passed" file="./spec/requests/executions/get_executions_spec.rb" time="0.196671"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns executions filtered by runner if param was passed" file="./spec/requests/executions/get_executions_spec.rb" time="0.101428"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns executions filtered by category if param was passed" file="./spec/requests/executions/get_executions_spec.rb" time="0.117619"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns no maestro executions when the user does not have the integration right" file="./spec/requests/executions/get_executions_spec.rb" time="0.075445"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns success (200) and the executions sorted by created_at" file="./spec/requests/executions/get_executions_spec.rb" time="0.182183"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns executions filtered by a single type if param was passed" file="./spec/requests/executions/get_executions_spec.rb" time="0.129043"></testcase>
<testcase classname="spec.requests.executions.get_executions_spec" name="Get executions returns no medication executions when the user does not have the tenant_admin right" file="./spec/requests/executions/get_executions_spec.rb" time="0.080107"></testcase>
<testcase classname="spec.requests.patients.delete_identifier_spec" name="DeletePatientIdentifier returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_identifier_spec.rb" time="0.086172"></testcase>
<testcase classname="spec.requests.patients.delete_identifier_spec" name="DeletePatientIdentifier deletes and existing identifier" file="./spec/requests/patients/delete_identifier_spec.rb" time="0.092636"></testcase>
<testcase classname="spec.requests.actions.perform_action_spec" name="PerformAction returns 403 forbidden if the user dos not have the correct journal rigths" file="./spec/requests/actions/perform_action_spec.rb" time="0.217082"></testcase>
<testcase classname="spec.requests.actions.perform_action_spec" name="PerformAction performs an action" file="./spec/requests/actions/perform_action_spec.rb" time="0.275439"></testcase>
<testcase classname="spec.requests.actions.perform_action_spec" name="PerformAction returns 404 if the action cannot be found" file="./spec/requests/actions/perform_action_spec.rb" time="0.187533"></testcase>
<testcase classname="spec.requests.actions.perform_action_spec" name="PerformAction returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/actions/perform_action_spec.rb" time="0.149909"></testcase>
<testcase classname="spec.models.address_spec" name="Address is expected to validate that :address_type is either ‹&quot;residence&quot;›, ‹&quot;other&quot;›, or ‹&quot;legal_domicile&quot;›" file="./spec/models/address_spec.rb" time="0.011565"></testcase>
<testcase classname="spec.models.address_spec" name="Address is expected to validate that :addressable cannot be empty/falsy" file="./spec/models/address_spec.rb" time="0.006083"></testcase>
<testcase classname="spec.models.address_spec" name="Address is expected to validate that :address_type cannot be empty/falsy" file="./spec/models/address_spec.rb" time="0.007806"></testcase>
<testcase classname="spec.models.address_spec" name="Address is expected to belong to addressable required: true" file="./spec/models/address_spec.rb" time="0.003449"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets updates patient&apos;s diet" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.237455"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets sets patient&apos;s diet when he/she has no diets" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.227880"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets requires write rights" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.155253"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets fails if patient does not exist" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.043583"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets returns not found if the diet does not exist" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.104739"></testcase>
<testcase classname="spec.requests.patients.update_patient_diets_spec" name="UpdatePatientDiets updates audit information" file="./spec/requests/patients/update_patient_diets_spec.rb" time="0.256774"></testcase>
<testcase classname="spec.models.medications.requests.templates.intradialytic_spec" name="Medications::Requests::Templates::Intradialytic is expected to validate with PractitionerValidator" file="./spec/models/medications/requests/templates/intradialytic_spec.rb" time="0.234682"></testcase>
<testcase classname="spec.models.medications.requests.templates.intradialytic_spec" name="Medications::Requests::Templates::Intradialytic is expected to belong to schedule required: true" file="./spec/models/medications/requests/templates/intradialytic_spec.rb" time="0.100091"></testcase>
<testcase classname="spec.models.medications.requests.templates.intradialytic_spec" name="Medications::Requests::Templates::Intradialytic is expected to belong to requester optional: true" file="./spec/models/medications/requests/templates/intradialytic_spec.rb" time="0.095495"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator is expected to respond to #on_odd_weeks" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.170767"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator is expected to respond to #on_days" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.179145"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator is expected to respond to #on_even_weeks" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.198538"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator session planned outside of evaluation date is expected not to be scheduled" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.212234"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator session ongoing is expected to be scheduled" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.255451"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator session completed is expected to be scheduled" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.255779"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator session planned is expected to be scheduled" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.200704"></testcase>
<testcase classname="spec.models.planning.evaluators.session_evaluator_spec" name="Planning::Evaluators::SessionEvaluator no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/session_evaluator_spec.rb" time="0.189800"></testcase>
<testcase classname="spec.models.patients.diet_spec" name="Patients::Diet validates uniqueness of code" file="./spec/models/patients/diet_spec.rb" time="0.004565"></testcase>
<testcase classname="spec.models.patients.diet_spec" name="Patients::Diet is expected to have many patient_diets" file="./spec/models/patients/diet_spec.rb" time="0.002489"></testcase>
<testcase classname="spec.requests.diagnoses.get_diagnoses_spec" name="Patients::Diagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/diagnoses/get_diagnoses_spec.rb" time="0.031549"></testcase>
<testcase classname="spec.requests.diagnoses.get_diagnoses_spec" name="Patients::Diagnosis returns only archived diagnoses" file="./spec/requests/diagnoses/get_diagnoses_spec.rb" time="0.106046"></testcase>
<testcase classname="spec.requests.diagnoses.get_diagnoses_spec" name="Patients::Diagnosis returns success (200) and alphabetically sorted diagnoses" file="./spec/requests/diagnoses/get_diagnoses_spec.rb" time="0.068639"></testcase>
<testcase classname="spec.requests.diagnoses.get_diagnoses_spec" name="Patients::Diagnosis returns only active diagnoses" file="./spec/requests/diagnoses/get_diagnoses_spec.rb" time="0.069953"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_parameters_spec" name="Laboratory parameter returns laboratory parameters" file="./spec/requests/laboratory/get_lab_parameters_spec.rb" time="0.035546"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_parameters_spec" name="Laboratory parameter requires an authorized user" file="./spec/requests/laboratory/get_lab_parameters_spec.rb" time="0.035307"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off returns an evaluated session when no session publish parameter was provided" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.252223"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off does not schedule a send session summary job when manual sending of a session summary is enabled and publish_ehr variable is false" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.204466"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off signs off a high care session returns an evaluated session when success" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.221936"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off signs off a high care session does not schedule a send session summary job when manual sending of a session summary is enabled and publish_ehr variable is false" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.211842"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off signs off a high care session returns forbidden when not authorized" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.144155"></testcase>
<testcase classname="spec.requests.sessions.add_sign_off_spec" name="Session Sign Off signs off a high care session schedules a session summary job when manual session summary is enabled" file="./spec/requests/sessions/add_sign_off_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.executions.e_health.base_spec" name="Executions::EHealth::Base is expected to be enqueueable" file="./spec/models/executions/e_health/base_spec.rb" time="0.009961"></testcase>
<testcase classname="spec.models.executions.e_health.base_spec" name="Executions::EHealth::Base has a default runner" file="./spec/models/executions/e_health/base_spec.rb" time="0.002376"></testcase>
<testcase classname="spec.models.executions.e_health.base_spec" name="Executions::EHealth::Base has a default category" file="./spec/models/executions/e_health/base_spec.rb" time="0.001779"></testcase>
<testcase classname="spec.integrations.executions.reports.general_practitioner_spec" name="Asynchronous reports: general_practitioner generates the report" file="./spec/integrations/executions/reports/general_practitioner_spec.rb" time="0.597239"></testcase>
<testcase classname="spec.requests.patients.add_identifiers_spec" name="AddPatientIdentifier return forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_identifiers_spec.rb" time="0.104949"></testcase>
<testcase classname="spec.requests.patients.add_identifiers_spec" name="AddPatientIdentifier adds a new identifier" file="./spec/requests/patients/add_identifiers_spec.rb" time="0.100567"></testcase>
<testcase classname="spec.models.context_links.xperthis_care_spec" name="ContextLinks::XperthisCare is not valid when key is missing" file="./spec/models/context_links/xperthis_care_spec.rb" time="0.003264"></testcase>
<testcase classname="spec.models.context_links.xperthis_care_spec" name="ContextLinks::XperthisCare is not valid when cipher is missing" file="./spec/models/context_links/xperthis_care_spec.rb" time="0.003517"></testcase>
<testcase classname="spec.models.context_links.xperthis_care_spec" name="ContextLinks::XperthisCare is not valid when encryption options are invalid" file="./spec/models/context_links/xperthis_care_spec.rb" time="0.002915"></testcase>
<testcase classname="spec.models.context_links.xperthis_care_spec" name="ContextLinks::XperthisCare is not valid when iv is missing" file="./spec/models/context_links/xperthis_care_spec.rb" time="0.003028"></testcase>
<testcase classname="spec.models.context_links.xperthis_care_spec" name="ContextLinks::XperthisCare#render renders an Xperthis Care uri in the customer&apos;s timezone" file="./spec/models/context_links/xperthis_care_spec.rb" time="0.079852"></testcase>
<testcase classname="spec.requests.patients.get_infections_for_patient_spec" name="GetInfectionsForPatient returns all infections for a patient" file="./spec/requests/patients/get_infections_for_patient_spec.rb" time="0.121292"></testcase>
<testcase classname="spec.requests.patients.get_infections_for_patient_spec" name="GetInfectionsForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_infections_for_patient_spec.rb" time="0.086773"></testcase>
<testcase classname="spec.models.medications.order_spec" name="Medications::Order is expected to belong to product optional: true" file="./spec/models/medications/order_spec.rb" time="0.015701"></testcase>
<testcase classname="spec.models.medications.order_spec" name="Medications::Order is expected to validate that :disallow_substitution_reason cannot be empty/falsy" file="./spec/models/medications/order_spec.rb" time="0.016590"></testcase>
<testcase classname="spec.models.medications.order_spec" name="Medications::Order is expected to belong to patient required: true" file="./spec/models/medications/order_spec.rb" time="0.016471"></testcase>
<testcase classname="spec.models.medications.order_spec" name="Medications::Order is expected to have many dosages" file="./spec/models/medications/order_spec.rb" time="0.023544"></testcase>
<testcase classname="spec.models.medications.order_spec" name="Medications::Order when allowing substitution is expected not to validate that :disallow_substitution_reason cannot be empty/falsy" file="./spec/models/medications/order_spec.rb" time="0.017821"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_rank_spec" name="Patients::PatientDiagnosis audits the update action" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_rank_spec.rb" time="0.123828"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_rank_spec" name="Patients::PatientDiagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_rank_spec.rb" time="0.073377"></testcase>
<testcase classname="spec.requests.patients.diagnoses.update_patient_diagnosis_rank_spec" name="Patients::PatientDiagnosis returns success (200) and all updated ranks" file="./spec/requests/patients/diagnoses/update_patient_diagnosis_rank_spec.rb" time="0.108460"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id audits the update action" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.074691"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id returns unprocessable_entity (422) if the configuration between device and connector is not unique" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.075171"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.055489"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id returns not found (404) if the connector_device is not found" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.033870"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id returns unprocessable_entity (422) if the parameters are invalid" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.047517"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_device_spec" name="PUT /api/connectors/:id/devices/:id returns success (200) and updates the connector device" file="./spec/requests/infrastructure/update_connector_device_spec.rb" time="0.075989"></testcase>
<testcase classname="spec.jobs.send_session_summary_job_spec" name="SendSessionSummaryJob reschedules the job when the session was not completed" file="./spec/jobs/send_session_summary_job_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.jobs.send_session_summary_job_spec" name="SendSessionSummaryJob sends a json session summary payload to an endpoint" file="./spec/jobs/send_session_summary_job_spec.rb" time="0.301358"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements fails to create a measurement in the future" file="./spec/requests/measurements/measurements_spec.rb" time="0.068764"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements doens&apos;t support registering certain measurements outside of a session" file="./spec/requests/measurements/measurements_spec.rb" time="0.058079"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements returns all measurements for a given patient" file="./spec/requests/measurements/measurements_spec.rb" time="0.155726"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements returns all measurements for a given patient by name" file="./spec/requests/measurements/measurements_spec.rb" time="0.132524"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements creates a new measurement for a given patient" file="./spec/requests/measurements/measurements_spec.rb" time="0.139050"></testcase>
<testcase classname="spec.requests.measurements.measurements_spec" name="Patient Measurements requires proper authorization" file="./spec/requests/measurements/measurements_spec.rb" time="0.054953"></testcase>
<testcase classname="spec.models.audits.audit_spec" name="Audits::Audit is expected to belong to patient optional: true" file="./spec/models/audits/audit_spec.rb" time="0.007247"></testcase>
<testcase classname="spec.models.audits.audit_spec" name="Audits::Audit is expected to belong to auditable optional: true" file="./spec/models/audits/audit_spec.rb" time="0.002816"></testcase>
<testcase classname="spec.models.audits.audit_spec" name="Audits::Audit is expected to belong to user required: true" file="./spec/models/audits/audit_spec.rb" time="0.002904"></testcase>
<testcase classname="spec.models.audits.audit_spec" name="Audits::Audit is expected to validate that :user cannot be empty/falsy, producing a custom validation error on failure" file="./spec/models/audits/audit_spec.rb" time="0.003685"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order faults back to nil if end_date is not passed" file="./spec/requests/orders/update_order_spec.rb" time="0.068113"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order denies updating if not granted" file="./spec/requests/orders/update_order_spec.rb" time="0.041036"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order fails if end date is before start date" file="./spec/requests/orders/update_order_spec.rb" time="0.060119"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order fails if order does not exist" file="./spec/requests/orders/update_order_spec.rb" time="0.024581"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order updates the given order" file="./spec/requests/orders/update_order_spec.rb" time="0.071395"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order does not update category and type" file="./spec/requests/orders/update_order_spec.rb" time="0.105672"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order when updating an one-time order to a recurring order resets the order&apos;s `date` column" file="./spec/requests/orders/update_order_spec.rb" time="0.124029"></testcase>
<testcase classname="spec.requests.orders.update_order_spec" name="Update order when updating an recurring order to an one-time order resets the order&apos;s `start_date` and `end_date` columns" file="./spec/requests/orders/update_order_spec.rb" time="0.099974"></testcase>
<testcase classname="spec.requests.patients.delete_diet_spec" name="DeleteDiet rejects diet deletion if not granted" file="./spec/requests/patients/delete_diet_spec.rb" time="0.041406"></testcase>
<testcase classname="spec.requests.patients.delete_diet_spec" name="DeleteDiet delete a diet" file="./spec/requests/patients/delete_diet_spec.rb" time="0.046215"></testcase>
<testcase classname="spec.requests.patients.delete_diet_spec" name="DeleteDiet fails deletion when diet not found" file="./spec/requests/patients/delete_diet_spec.rb" time="0.039540"></testcase>
<testcase classname="spec.jobs.executions.medications.query_job_spec" name="Executions::Medications::QueryJob publishes an Apollo message" file="./spec/jobs/executions/medications/query_job_spec.rb" time="0.031898"></testcase>
<testcase classname="spec.jobs.executions.medications.query_job_spec" name="Executions::Medications::QueryJob filters by source_id" file="./spec/jobs/executions/medications/query_job_spec.rb" time="0.036127"></testcase>
<testcase classname="spec.jobs.executions.medications.query_job_spec" name="Executions::Medications::QueryJob transitions the execution to `waiting`" file="./spec/jobs/executions/medications/query_job_spec.rb" time="0.031758"></testcase>
<testcase classname="spec.jobs.executions.medications.query_job_spec" name="Executions::Medications::QueryJob filters enabled sources" file="./spec/jobs/executions/medications/query_job_spec.rb" time="0.058958"></testcase>
<testcase classname="spec.models.ultrafiltration_calculation.calculation_spec" name="UltrafiltrationCalculation::Calculation#volume_adjustments applies default volume adjustments" file="./spec/models/ultrafiltration_calculation/calculation_spec.rb" time="0.192372"></testcase>
<testcase classname="spec.integrations.executions.recip_e.cancel_spec" name="Asynchronous cancel Recip-e prescription adds an execution to the queue" file="./spec/integrations/executions/recip_e/cancel_spec.rb" time="0.300763"></testcase>
<testcase classname="spec.integrations.executions.recip_e.cancel_spec" name="Asynchronous cancel Recip-e prescription cancels the Recip-e prescription" file="./spec/integrations/executions/recip_e/cancel_spec.rb" time="0.523313"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many forms through form_products" file="./spec/models/medications/product_spec.rb" time="0.003864"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many ingredients through ingredient_products" file="./spec/models/medications/product_spec.rb" time="0.007119"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to belong to category optional: true" file="./spec/models/medications/product_spec.rb" time="0.004870"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to respond to #active_ingredients" file="./spec/models/medications/product_spec.rb" time="0.004567"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/product_spec.rb" time="0.012024"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to validate that :state cannot be empty/falsy" file="./spec/models/medications/product_spec.rb" time="0.010565"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many ingredient_products dependent =&gt; destroy" file="./spec/models/medications/product_spec.rb" time="0.003300"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product has a default synced_at" file="./spec/models/medications/product_spec.rb" time="0.026334"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many form_products dependent =&gt; destroy" file="./spec/models/medications/product_spec.rb" time="0.004055"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many administration_routes through product_routes" file="./spec/models/medications/product_spec.rb" time="0.003728"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many units through prescribable_units" file="./spec/models/medications/product_spec.rb" time="0.003445"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many product_routes dependent =&gt; destroy" file="./spec/models/medications/product_spec.rb" time="0.003510"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to belong to virtual_product optional: true" file="./spec/models/medications/product_spec.rb" time="0.004218"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to belong to company optional: true" file="./spec/models/medications/product_spec.rb" time="0.003659"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to belong to source required: true" file="./spec/models/medications/product_spec.rb" time="0.004667"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many packages dependent =&gt; destroy" file="./spec/models/medications/product_spec.rb" time="0.003486"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/product_spec.rb" time="0.009194"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product is expected to have many prescribable_units dependent =&gt; destroy" file="./spec/models/medications/product_spec.rb" time="0.003601"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#alternatives returns an empty list when the product is virtual" file="./spec/models/medications/product_spec.rb" time="0.004047"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#alternatives returns other products which share the same virtual parent if actual" file="./spec/models/medications/product_spec.rb" time="0.071211"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#initialize_intradialytic_home defaults to source values is expected not to be intradialytic" file="./spec/models/medications/product_spec.rb" time="0.022097"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#initialize_intradialytic_home defaults to source values is expected to be ambulatory" file="./spec/models/medications/product_spec.rb" time="0.023535"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product.prescribable returns only active products" file="./spec/models/medications/product_spec.rb" time="0.079246"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product.prescribable returns only products without ended_at date or ended_at in the future" file="./spec/models/medications/product_spec.rb" time="0.092154"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#active_ingredient_name returns a concatenation of only the active substances ingredients name when mixed" file="./spec/models/medications/product_spec.rb" time="0.051935"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#active_ingredient_name returns a concatenation of the ingredients name when 1" file="./spec/models/medications/product_spec.rb" time="0.053540"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#active_ingredient_name returns a concatenation of the ingredients name when 2" file="./spec/models/medications/product_spec.rb" time="0.066031"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product#active_ingredient_name returns a concatenation of the ingredients name when 3" file="./spec/models/medications/product_spec.rb" time="0.070112"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product when the product is virtual is expected to validate that :virtual_product is empty/falsy" file="./spec/models/medications/product_spec.rb" time="0.005821"></testcase>
<testcase classname="spec.models.medications.product_spec" name="Medications::Product when the product is virtual is expected to have many actual_products" file="./spec/models/medications/product_spec.rb" time="0.003822"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns created magistral preparation" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.041303"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns 403 if the user isn&apos;t authorized" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.043008"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns 422 if formula is not given" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.046008"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns 422 if form is not given" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.034412"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns 422 if dose is not given" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.035946"></testcase>
<testcase classname="spec.requests.medications.create_magistral_preparation_spec" name="CreateMagistralPreparation returns 422 if a magistral preparation already exists" file="./spec/requests/medications/create_magistral_preparation_spec.rb" time="0.040489"></testcase>
<testcase classname="spec.requests.patients.get_transplant_eligibility_statuses_spec" name="Get transplant eligibility statuses returns success (200) and transplant eligibility statuses" file="./spec/requests/patients/get_transplant_eligibility_statuses_spec.rb" time="0.044211"></testcase>
<testcase classname="spec.requests.users.get_rights_spec" name="GetRights returns wts categories sorted by name" file="./spec/requests/users/get_rights_spec.rb" time="0.036535"></testcase>
<testcase classname="spec.requests.users.get_rights_spec" name="GetRights returns global categories sorted by name" file="./spec/requests/users/get_rights_spec.rb" time="0.040155"></testcase>
<testcase classname="spec.requests.users.get_rights_spec" name="GetRights returns dws categories sorted by name" file="./spec/requests/users/get_rights_spec.rb" time="0.037436"></testcase>
<testcase classname="spec.requests.users.get_rights_spec" name="GetRights returns all categories sorted by name" file="./spec/requests/users/get_rights_spec.rb" time="0.035690"></testcase>
<testcase classname="spec.requests.medications.search_categories_spec" name="Search Categories returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_categories_spec.rb" time="0.039121"></testcase>
<testcase classname="spec.requests.medications.search_categories_spec" name="Search Categories can filter by name" file="./spec/requests/medications/search_categories_spec.rb" time="0.059748"></testcase>
<testcase classname="spec.requests.medications.search_categories_spec" name="Search Categories returns an list of categories" file="./spec/requests/medications/search_categories_spec.rb" time="0.053135"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to allow :email_contact to be ‹&quot;user@example.com&quot;›" file="./spec/models/infrastructure/center_spec.rb" time="0.004809"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to allow :email_contact to be ‹nil›" file="./spec/models/infrastructure/center_spec.rb" time="0.005038"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/center_spec.rb" time="0.009483"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to have many rooms" file="./spec/models/infrastructure/center_spec.rb" time="0.008206"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to have many shifts" file="./spec/models/infrastructure/center_spec.rb" time="0.003472"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center formats the facility identifier correctly" file="./spec/models/infrastructure/center_spec.rb" time="0.007959"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center validates uniqueness of name" file="./spec/models/infrastructure/center_spec.rb" time="0.014901"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to have many center_acls" file="./spec/models/infrastructure/center_spec.rb" time="0.002285"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected not to allow :email_contact to be ‹&quot;user-example.com&quot;›" file="./spec/models/infrastructure/center_spec.rb" time="0.007682"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center is expected to have many devices" file="./spec/models/infrastructure/center_spec.rb" time="0.002126"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center#update_with_shifts updates a center if shifts are empty" file="./spec/models/infrastructure/center_spec.rb" time="0.020349"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center#update_with_shifts returns an error when shifs are disabled" file="./spec/models/infrastructure/center_spec.rb" time="0.016205"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center#update_with_shifts updates a center w/ given shifts" file="./spec/models/infrastructure/center_spec.rb" time="0.046897"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center#used_for_ongoing_sessions? returns false when there are no active sessions" file="./spec/models/infrastructure/center_spec.rb" time="0.200166"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center#used_for_ongoing_sessions? returns true when there are active sessions" file="./spec/models/infrastructure/center_spec.rb" time="0.121722"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center.create_with_shifts creates a center when shifts are empty" file="./spec/models/infrastructure/center_spec.rb" time="0.007697"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center.create_with_shifts creates a center w/ given shifts" file="./spec/models/infrastructure/center_spec.rb" time="0.078903"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center facility identifier validation validates facility identifier if present" file="./spec/models/infrastructure/center_spec.rb" time="0.006264"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center facility identifier validation accepts valid facility identifier" file="./spec/models/infrastructure/center_spec.rb" time="0.006216"></testcase>
<testcase classname="spec.models.infrastructure.center_spec" name="Infrastructure::Center facility identifier validation accepts null facility identifier" file="./spec/models/infrastructure/center_spec.rb" time="0.005904"></testcase>
<testcase classname="spec.requests.wounds.add_wound_spec" name="AddWound returns not_found (404) if the patient cannot be found" file="./spec/requests/wounds/add_wound_spec.rb" time="0.030816"></testcase>
<testcase classname="spec.requests.wounds.add_wound_spec" name="AddWound creates a new wound for the given patient" file="./spec/requests/wounds/add_wound_spec.rb" time="0.111116"></testcase>
<testcase classname="spec.requests.wounds.add_wound_spec" name="AddWound returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/add_wound_spec.rb" time="0.091884"></testcase>
<testcase classname="spec.models.medications.ingredient_product_spec" name="Medications::IngredientProduct is expected to belong to ingredient required: true" file="./spec/models/medications/ingredient_product_spec.rb" time="0.005582"></testcase>
<testcase classname="spec.models.medications.ingredient_product_spec" name="Medications::IngredientProduct is expected to belong to product required: true" file="./spec/models/medications/ingredient_product_spec.rb" time="0.005307"></testcase>
<testcase classname="spec.models.medications.ingredient_product_spec" name="Medications::IngredientProduct when the ingredient is an active_substance is expected to validate that :quantity looks like a number greater than or equal to 0" file="./spec/models/medications/ingredient_product_spec.rb" time="0.025442"></testcase>
<testcase classname="spec.models.medications.ingredient_product_spec" name="Medications::IngredientProduct when the ingredient is an active_substance is expected to validate that :quantity cannot be empty/falsy" file="./spec/models/medications/ingredient_product_spec.rb" time="0.019665"></testcase>
<testcase classname="spec.models.medications.ingredient_product_spec" name="Medications::IngredientProduct when the ingredient is an active_substance is expected to validate that :unit cannot be empty/falsy" file="./spec/models/medications/ingredient_product_spec.rb" time="0.032218"></testcase>
<testcase classname="spec.integrations.executions.reports.billing_spec" name="Asynchronous reports: billing generates the report" file="./spec/integrations/executions/reports/billing_spec.rb" time="0.507844"></testcase>
<testcase classname="spec.requests.patients.add_infection_for_patient_spec" name="AddInfectionForPatient adds a new infection" file="./spec/requests/patients/add_infection_for_patient_spec.rb" time="0.140198"></testcase>
<testcase classname="spec.requests.patients.add_infection_for_patient_spec" name="AddInfectionForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_infection_for_patient_spec.rb" time="0.140854"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder returns updated magistral standing order" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.106508"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder does not update the administrable" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.100509"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder returns (403) if the user isn&apos;t authorized" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.074614"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder returns updated product standing order" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.096812"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder when a valid practitioner identifier is required returns (422) if the prescriber is updated to a nurse" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.111881"></testcase>
<testcase classname="spec.requests.medications.standing_orders.update_standing_order_spec" name="UpdateStandingOrder when a valid practitioner identifier is required returns (422) if the standing order is prescribed by a doctor without a practitioner_identifier" file="./spec/requests/medications/standing_orders/update_standing_order_spec.rb" time="0.114271"></testcase>
<testcase classname="spec.lib.parameter.types.integer_spec" name="Parameter::Types::Integer fails to create integer parameter with incompatible units" file="./spec/lib/parameter/types/integer_spec.rb" time="0.002298"></testcase>
<testcase classname="spec.lib.parameter.types.integer_spec" name="Parameter::Types::Integer must be initialized with a numeric value" file="./spec/lib/parameter/types/integer_spec.rb" time="0.002390"></testcase>
<testcase classname="spec.lib.parameter.types.integer_spec" name="Parameter::Types::Integer coerces a numeric value into a integer number" file="./spec/lib/parameter/types/integer_spec.rb" time="0.001762"></testcase>
<testcase classname="spec.lib.parameter.types.integer_spec" name="Parameter::Types::Integer#display_value properly converts value" file="./spec/lib/parameter/types/integer_spec.rb" time="0.002129"></testcase>
<testcase classname="spec.requests.actions.get_actions_spec" name="GetActions returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/actions/get_actions_spec.rb" time="0.121646"></testcase>
<testcase classname="spec.requests.actions.get_actions_spec" name="GetActions returns the action taxonomy for a given user and session" file="./spec/requests/actions/get_actions_spec.rb" time="0.187033"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to have many participants" file="./spec/models/briefings/briefing_spec.rb" time="0.001634"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing rejects updating closed briefings even if status changed" file="./spec/models/briefings/briefing_spec.rb" time="0.020055"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing rejects updating closed briefings" file="./spec/models/briefings/briefing_spec.rb" time="0.021558"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to have many items" file="./spec/models/briefings/briefing_spec.rb" time="0.001861"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to belong to created_by required: true" file="./spec/models/briefings/briefing_spec.rb" time="0.004302"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to validate that :start_date cannot be empty/falsy" file="./spec/models/briefings/briefing_spec.rb" time="0.005458"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to validate that :end_date cannot be empty/falsy" file="./spec/models/briefings/briefing_spec.rb" time="0.004863"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing validates that end date comes after start date" file="./spec/models/briefings/briefing_spec.rb" time="0.013353"></testcase>
<testcase classname="spec.models.briefings.briefing_spec" name="Briefings::Briefing is expected to validate that :briefing_at cannot be empty/falsy" file="./spec/models/briefings/briefing_spec.rb" time="0.005038"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_orders_spec" name="Medications GetHomeMedicationOrders does not return deleted orders" file="./spec/requests/medications/get_home_medication_orders_spec.rb" time="0.133950"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_orders_spec" name="Medications GetHomeMedicationOrders denies getting if not granted" file="./spec/requests/medications/get_home_medication_orders_spec.rb" time="0.167216"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_orders_spec" name="Medications GetHomeMedicationOrders fails if patient does not exist" file="./spec/requests/medications/get_home_medication_orders_spec.rb" time="0.188875"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_orders_spec" name="Medications GetHomeMedicationOrders returns the order for the patient" file="./spec/requests/medications/get_home_medication_orders_spec.rb" time="0.241283"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns not found (404) if the billing item is not found" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.043999"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns success (200) and updates a session billing item" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.302172"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns success (200) and updates both a session billing item and it&apos;s counterpart" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.560427"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item does not update unpermitted parameters" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.443718"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns success (200) and updates bill to and service code" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.413002"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns unprocessable_entity (422) when updating a billing item belonging to a ready exportable" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.244732"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns unprocessable_entity (422) whe updating a billing item belonging to an exported exportable" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.298568"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns success (200) and updates an order billing item" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.239149"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.245277"></testcase>
<testcase classname="spec.requests.billing_items.update_billing_item_spec" name="Update billing item returns success (200) and updates a medication billing item" file="./spec/requests/billing_items/update_billing_item_spec.rb" time="0.403719"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position fails if number is not unique in room" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.074702"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position succeeds when a position is scheduled in the past" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.148461"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disables the position" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.067998"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position requires the correct rights to update" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.056070"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position updates the position name of a position not in use" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.094595"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position is possible to change the position number when the position is not in use" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.065760"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position is possible to update the name of a position in use" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.156858"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position succeeds when a position is scheduled as a deviation in the past" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.132614"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position should succeed when a schedule and a remove deviation flatten eachother out" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position fails when position is a session" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.142959"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position is possible to change the position number when the position is scheduled" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.135008"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position fails if a position with given id is not found" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.027954"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position fails when position is scheduled" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.129272"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position disabling the position fails when position is scheduled as a deviation" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.123104"></testcase>
<testcase classname="spec.requests.infrastructure.update_position_spec" name="Position Update Position enables the position" file="./spec/requests/infrastructure/update_position_spec.rb" time="0.069387"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_system_spec" name="Lab System GetLabSystem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/get_lab_system_spec.rb" time="0.030088"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_system_spec" name="Lab System GetLabSystem returns the lab system" file="./spec/requests/laboratory/get_lab_system_spec.rb" time="0.036172"></testcase>
<testcase classname="spec.requests.users.create_user_spec" name="UsersController .create adds a new user" file="./spec/requests/users/create_user_spec.rb" time="0.057222"></testcase>
<testcase classname="spec.requests.users.create_user_spec" name="UsersController .create adds an invalid user" file="./spec/requests/users/create_user_spec.rb" time="0.048367"></testcase>
<testcase classname="spec.requests.users.create_user_spec" name="UsersController .create adds a new user with avatar" file="./spec/requests/users/create_user_spec.rb" time="0.119161"></testcase>
<testcase classname="spec.requests.users.create_user_spec" name="UsersController .create denies adding a new user if not granted" file="./spec/requests/users/create_user_spec.rb" time="0.037191"></testcase>
<testcase classname="spec.requests.users.create_user_spec" name="UsersController .create rejects creation if given role does not exist" file="./spec/requests/users/create_user_spec.rb" time="0.041908"></testcase>
<testcase classname="spec.requests.patients.update_transplant_eligibility_status_spec" name="Update transplant eligibility status returns success (200) and an updated transplant eligibility status" file="./spec/requests/patients/update_transplant_eligibility_status_spec.rb" time="0.045445"></testcase>
<testcase classname="spec.requests.patients.update_transplant_eligibility_status_spec" name="Update transplant eligibility status return unprocessable entity (422) when reusing a name" file="./spec/requests/patients/update_transplant_eligibility_status_spec.rb" time="0.041069"></testcase>
<testcase classname="spec.requests.patients.update_transplant_eligibility_status_spec" name="Update transplant eligibility status returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/patients/update_transplant_eligibility_status_spec.rb" time="0.032020"></testcase>
<testcase classname="spec.requests.patients.update_remark_for_patient_spec" name="UpdateRemarkForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_remark_for_patient_spec.rb" time="0.056110"></testcase>
<testcase classname="spec.requests.patients.update_remark_for_patient_spec" name="UpdateRemarkForPatient updates an existing remark" file="./spec/requests/patients/update_remark_for_patient_spec.rb" time="0.069794"></testcase>
<testcase classname="spec.requests.logbook.add_tags_spec" name="AddTag returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/logbook/add_tags_spec.rb" time="0.028544"></testcase>
<testcase classname="spec.requests.logbook.add_tags_spec" name="AddTag create a new tag" file="./spec/requests/logbook/add_tags_spec.rb" time="0.067062"></testcase>
<testcase classname="spec.models.billing.code_spec" name="Billing::Code is expected to have many items" file="./spec/models/billing/code_spec.rb" time="0.002266"></testcase>
<testcase classname="spec.models.billing.code_spec" name="Billing::Code validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/billing/code_spec.rb" time="0.011639"></testcase>
<testcase classname="spec.models.billing.code_spec" name="Billing::Code validations is expected to validate that :name is either ‹&quot;CHRONIC_HIGH_CARE_ADMITTED&quot;›, ‹&quot;CHRONIC_HIGH_CARE_AMBULATORY&quot;›, ‹&quot;CHRONIC_HIGH_CARE_PEDIATRIC_ADMITTED&quot;›, ‹&quot;CHRONIC_HIGH_CARE_PEDIATRIC_AMBULATORY&quot;›, ‹&quot;CHRONIC_LOW_CARE_AUTO_ADMITTED&quot;›, ‹&quot;CHRONIC_LOW_CARE_AUTO_AMBULATORY&quot;›, ‹&quot;CHRONIC_LOW_CARE_HOME_AMBULATORY&quot;›, ‹&quot;CHRONIC_LOW_CARE_NIGHT_ADMITTED&quot;›, ‹&quot;CHRONIC_LOW_CARE_NIGHT_AMBULATORY&quot;›, ‹&quot;ACUTE_AMBULATORY&quot;›, ‹&quot;ACUTE_ADMITTED&quot;›, ‹&quot;ACCESS_FLOW_ADMITTED&quot;›, ‹&quot;ACCESS_FLOW_AMBULATORY&quot;›, ‹&quot;BIDIMENSIONAL_ECHO_ADMITTED&quot;›, ‹&quot;BIDIMENSIONAL_ECHO_AMBULATORY&quot;›, ‹&quot;BLADDER_INSTILLATION_AMBULATORY&quot;›, ‹&quot;BLADDERSCAN_MALE_AMBULATORY&quot;›, ‹&quot;BLADDERSCAN_MALE_ADMITTED&quot;›, ‹&quot;BLADDERSCAN_FEMALE_AMBULATORY&quot;›, ‹&quot;BLADDERSCAN_FEMALE_ADMITTED&quot;›, ‹&quot;DIALYSIS_CATHETER_PLACEMENT_ADMITTED&quot;›, ‹&quot;DIALYSIS_CATHETER_PLACEMENT_AMBULATORY&quot;›, ‹&quot;ECG_ADMITTED&quot;›, ‹&quot;ECG_AMBULATORY&quot;›, ‹&quot;MONITORING_AMBULATORY&quot;›, ‹&quot;MONITORING_ADMITTED&quot;›, ‹&quot;PACKED_CELLS_ADMITTED&quot;›, or ‹&quot;PACKED_CELLS_AMBULATORY&quot;›" file="./spec/models/billing/code_spec.rb" time="0.053672"></testcase>
<testcase classname="spec.models.billing.code_spec" name="Billing::Code validations is expected to have carbon :id, :name, :fee_code, and :forfait_code" file="./spec/models/billing/code_spec.rb" time="0.005721"></testcase>
<testcase classname="spec.models.billing.code_spec" name="Billing::Code validations is expected to validate that :name is case-sensitively unique" file="./spec/models/billing/code_spec.rb" time="0.018441"></testcase>
<testcase classname="spec.models.planning.decorators.on_odd_weeks_spec" name="Planning::Decorators::OnOddWeeks even week is expected not to be scheduled" file="./spec/models/planning/decorators/on_odd_weeks_spec.rb" time="0.002152"></testcase>
<testcase classname="spec.models.planning.decorators.on_odd_weeks_spec" name="Planning::Decorators::OnOddWeeks odd week is expected to be scheduled" file="./spec/models/planning/decorators/on_odd_weeks_spec.rb" time="0.001829"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity is expected to respond to [:code, :value, :unit]" file="./spec/types/quantity_spec.rb" time="0.012186"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#code when initialized with a code returns a code" file="./spec/types/quantity_spec.rb" time="0.010402"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#code when initialized with a code_id returns a code" file="./spec/types/quantity_spec.rb" time="0.011395"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity type cast type casts using .to_q" file="./spec/types/quantity_spec.rb" time="0.004329"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity type cast type casts using Quantity()" file="./spec/types/quantity_spec.rb" time="0.003969"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#/ returns a ratio" file="./spec/types/quantity_spec.rb" time="0.006288"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#&lt;=&gt; returns 1 when value is greater" file="./spec/types/quantity_spec.rb" time="0.014384"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#&lt;=&gt; returns 0 when value is equal" file="./spec/types/quantity_spec.rb" time="0.012955"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#&lt;=&gt; returns nil when unit is different" file="./spec/types/quantity_spec.rb" time="0.012478"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#&lt;=&gt; returns -1 when value is smaller" file="./spec/types/quantity_spec.rb" time="0.014468"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#next, #succ returns the next value" file="./spec/types/quantity_spec.rb" time="0.013108"></testcase>
<testcase classname="spec.types.quantity_spec" name="Quantity#next, #succ raises type error when begin is a float" file="./spec/types/quantity_spec.rb" time="0.002821"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails if patient doesn&apos;t exist" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.043326"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments enrolls a predialysis patient" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.085597"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails updating when dialysis since is before birthdate" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.077973"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails if chronic dialysis is initiated without treatment" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.066434"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments enrolls a patient" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.102637"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails if treatment doesn&apos;t exist" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.067134"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails if unauthorized" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.055017"></testcase>
<testcase classname="spec.requests.enrollments.enrollments_spec" name="Enrollments fails if bad enrollment params" file="./spec/requests/enrollments/enrollments_spec.rb" time="0.064368"></testcase>
<testcase classname="spec.requests.measurements.measurement_types_spec" name="MeasurementTypes returns all measurement types" file="./spec/requests/measurements/measurement_types_spec.rb" time="0.032059"></testcase>
<testcase classname="spec.requests.measurements.measurement_types_spec" name="MeasurementTypes requires proper authorization" file="./spec/requests/measurements/measurement_types_spec.rb" time="0.029181"></testcase>
<testcase classname="spec.requests.medications.delete_category_spec" name="Delete Category returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/delete_category_spec.rb" time="0.031153"></testcase>
<testcase classname="spec.requests.medications.delete_category_spec" name="Delete Category returns success (200)" file="./spec/requests/medications/delete_category_spec.rb" time="0.033099"></testcase>
<testcase classname="spec.requests.patients.get_diets_spec" name="GetDiets returns the list of available diets" file="./spec/requests/patients/get_diets_spec.rb" time="0.040204"></testcase>
<testcase classname="spec.requests.patients.get_diets_spec" name="GetDiets returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_diets_spec.rb" time="0.025382"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to patient required: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.006064"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to validate that :medication_type cannot be empty/falsy" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.011323"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to prescriber optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.005174"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to medicinal_variant optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004876"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to archive_of optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004860"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to validate that :frequency is either ‹&quot;specific_dates&quot;›, ‹&quot;dialysis_days&quot;›, ‹&quot;non_dialysis_days&quot;›, ‹&quot;every_day&quot;›, ‹&quot;every_week&quot;›, ‹&quot;even_weeks&quot;›, ‹&quot;odd_weeks&quot;›, or ‹&quot;first_full_week_of_the_month&quot;›" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.022782"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to validate that :frequency cannot be empty/falsy" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.010031"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to have many usage_moments" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002348"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to medicinal_product optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004927"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to default_package optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004321"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to validate that :medication_type is either ‹&quot;product&quot;› or ‹&quot;magistral_preparation&quot;›" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.007787"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to validate that :quantity looks like a number greater than or equal to 0 and less than 100000 as long as it is not nil" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.026954"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription is expected to belong to galenic_term optional: true" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004513"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.active returns currently active prescriptions" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.378791"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.dates sets a default value" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002117"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#available_packages returns only packages for the defined medicinal variant and galenic form" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.037013"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#stopped? returns true when prescription expired a day ago" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002894"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#stopped? returns false when prescription is still running" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002144"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#stopped? returns true when prescription expired today" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002119"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#stop!(prescriber:, reason:) stops prescription" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.stopped returns past prescriptions" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.374469"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns true when today is included in the range of start and end date" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002385"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns true when start date is today" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002385"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns false when end date is in the past" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002677"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns false when start date is in the future" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002461"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns true for an open ended prescription" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.002401"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#active? returns false when end date is today" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.004974"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#dynamic_start_end_dates dynamically sets start date when dates are given" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.075005"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#dynamic_start_end_dates dynamically sets end date when dates are given" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.067409"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#dynamic_start_end_dates dynamically sets end date when dates are given on the same day" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.076262"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.future returns future prescriptions" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.375704"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.prescriptions_for(patient:) returns prescriptions for the given patient" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.189523"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription.prescriptions_for(patient:) returns latest prescriptions only" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.127099"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#validate_dates_range validates to true when there are dates are past the start_date and the end_date is not given" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.061864"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#validate_dates_range validates to true when there are dates given that are not between start_date and end_date because it is dynamically set" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.056627"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#validate_dates_range validates to true when there are dates given that are before the start_date because it is dynamically set" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.066346"></testcase>
<testcase classname="spec.models.medications.home_medication_prescription_spec" name="Medications::HomeMedicationPrescription#validate_dates_range validates to true when there are dates are between start and end_date" file="./spec/models/medications/home_medication_prescription_spec.rb" time="0.072679"></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session on a disabled position" file="./spec/models/sessions/services/start_session_spec.rb" time="0.459913"></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for an invalid shift" file="./spec/models/sessions/services/start_session_spec.rb" time="0.406180"></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for an unsupported treatment" file="./spec/models/sessions/services/start_session_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for a patient with an ongoing session" file="./spec/models/sessions/services/start_session_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call starts a new session" file="./spec/models/sessions/services/start_session_spec.rb" time="0.597950"></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for a deactivated patient" file="./spec/models/sessions/services/start_session_spec.rb" time="0.154044"></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for a taken position" file="./spec/models/sessions/services/start_session_spec.rb" time="0.000023"><skipped/></testcase>
<testcase classname="spec.models.sessions.services.start_session_spec" name="Sessions::Services::StartSession#call can&apos;t start session for a patient with an invalid prescription" file="./spec/models/sessions/services/start_session_spec.rb" time="0.446423"></testcase>
<testcase classname="spec.requests.reports.get_orders_report_spec" name="Get general practitioner report returns a PDF of the general practitioner report" file="./spec/requests/reports/get_orders_report_spec.rb" time="0.396058"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads adds a journal entry with tags" file="./spec/requests/journal/journal_threads_spec.rb" time="0.124435"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads fails when author has no manage rights, only read rights" file="./spec/requests/journal/journal_threads_spec.rb" time="0.029490"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads adds a journal entry" file="./spec/requests/journal/journal_threads_spec.rb" time="0.106734"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads fails when author only has manage rights for other journals" file="./spec/requests/journal/journal_threads_spec.rb" time="0.027518"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads fails if a given tag id does not exist" file="./spec/requests/journal/journal_threads_spec.rb" time="0.096338"></testcase>
<testcase classname="spec.requests.journal.journal_threads_spec" name="Patient threads requires authorization" file="./spec/requests/journal/journal_threads_spec.rb" time="0.029548"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution returns forbidden (403) if the user does not have the necessary rights" file="./spec/requests/executions/create_execution_spec.rb" time="0.034706"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution returns unprocessable entity (422) if the type does not exist" file="./spec/requests/executions/create_execution_spec.rb" time="0.036728"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/create_execution_spec.rb" time="0.028299"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution enqueues an execution job" file="./spec/requests/executions/create_execution_spec.rb" time="0.062882"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution returns created (201) and the execution transitioned to `enqueued` if it is enqueueable" file="./spec/requests/executions/create_execution_spec.rb" time="0.044371"></testcase>
<testcase classname="spec.requests.executions.create_execution_spec" name="Create execution returns created (201) and the execution transitioned to `scheduled` if it is not enqueueable" file="./spec/requests/executions/create_execution_spec.rb" time="0.081225"></testcase>
<testcase classname="spec.requests.medications.get_ingredients_spec" name="GetIngredients can filter by source" file="./spec/requests/medications/get_ingredients_spec.rb" time="0.093823"></testcase>
<testcase classname="spec.requests.medications.get_ingredients_spec" name="GetIngredients returns an list of ingredients" file="./spec/requests/medications/get_ingredients_spec.rb" time="0.096617"></testcase>
<testcase classname="spec.requests.medications.get_ingredients_spec" name="GetIngredients can filter by name" file="./spec/requests/medications/get_ingredients_spec.rb" time="0.060704"></testcase>
<testcase classname="spec.requests.medications.get_ingredients_spec" name="GetIngredients returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_ingredients_spec.rb" time="0.025281"></testcase>
<testcase classname="spec.requests.journal.delete_journal_entry_spec" name="DeleteJournalEntry can only be deleted by a user user with sufficient rights" file="./spec/requests/journal/delete_journal_entry_spec.rb" time="0.112901"></testcase>
<testcase classname="spec.requests.journal.delete_journal_entry_spec" name="DeleteJournalEntry can only be deleted by the user who created the entry" file="./spec/requests/journal/delete_journal_entry_spec.rb" time="0.107499"></testcase>
<testcase classname="spec.requests.journal.delete_journal_entry_spec" name="DeleteJournalEntry can only be deleted within within a specific timeframe" file="./spec/requests/journal/delete_journal_entry_spec.rb" time="0.090974"></testcase>
<testcase classname="spec.requests.journal.delete_journal_entry_spec" name="DeleteJournalEntry deletes a journal entry" file="./spec/requests/journal/delete_journal_entry_spec.rb" time="0.097097"></testcase>
<testcase classname="spec.requests.patients.diagnoses.get_patient_diagnoses_spec" name="Patients::PatientDiagnosis returns forbidden (404) if the patient is not found" file="./spec/requests/patients/diagnoses/get_patient_diagnoses_spec.rb" time="0.027591"></testcase>
<testcase classname="spec.requests.patients.diagnoses.get_patient_diagnoses_spec" name="Patients::PatientDiagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/diagnoses/get_patient_diagnoses_spec.rb" time="0.051235"></testcase>
<testcase classname="spec.requests.patients.diagnoses.get_patient_diagnoses_spec" name="Patients::PatientDiagnosis returns success (200) and by row_order sorted patient diagnoses" file="./spec/requests/patients/diagnoses/get_patient_diagnoses_spec.rb" time="0.105458"></testcase>
<testcase classname="spec.requests.devise.passwords.update_password_spec" name="Reset password when the token is valid returns success (200) and resets the password when the token is not expired" file="./spec/requests/devise/passwords/update_password_spec.rb" time="0.185770"></testcase>
<testcase classname="spec.requests.devise.passwords.update_password_spec" name="Reset password when the token is valid returns unprocessable entity (422) when the password confirmation does not equal the password" file="./spec/requests/devise/passwords/update_password_spec.rb" time="0.060034"></testcase>
<testcase classname="spec.requests.devise.passwords.update_password_spec" name="Reset password when the token is valid returns unprocessable entity (422) when the token is expired" file="./spec/requests/devise/passwords/update_password_spec.rb" time="0.039430"></testcase>
<testcase classname="spec.requests.devise.passwords.update_password_spec" name="Reset password when the token is invalid returns unprocessable entity (422)" file="./spec/requests/devise/passwords/update_password_spec.rb" time="0.036650"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order archives if order is already ended" file="./spec/requests/orders/archive_order_spec.rb" time="0.069054"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order archives a recurring order" file="./spec/requests/orders/archive_order_spec.rb" time="0.064429"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order rejects archiving if order is already archived" file="./spec/requests/orders/archive_order_spec.rb" time="0.061507"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order archives one-off orders in the future" file="./spec/requests/orders/archive_order_spec.rb" time="0.062387"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order archives a recurring order in the future" file="./spec/requests/orders/archive_order_spec.rb" time="0.059272"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order rejects stopping if not granted" file="./spec/requests/orders/archive_order_spec.rb" time="0.060429"></testcase>
<testcase classname="spec.requests.orders.archive_order_spec" name="Archive order fails stopping if order not found" file="./spec/requests/orders/archive_order_spec.rb" time="0.027881"></testcase>
<testcase classname="spec.requests.sessions.get_session_task_groups_spec" name="GetSessionTaskGroups returns a list of task groups" file="./spec/requests/sessions/get_session_task_groups_spec.rb" time="0.131055"></testcase>
<testcase classname="spec.requests.sessions.get_session_task_groups_spec" name="GetSessionTaskGroups returns 403 forbidden if the user is unauthorized" file="./spec/requests/sessions/get_session_task_groups_spec.rb" time="0.125720"></testcase>
<testcase classname="spec.requests.patients.get_insurance_spec" name="GetPatientInsurance requires write rights" file="./spec/requests/patients/get_insurance_spec.rb" time="0.087075"></testcase>
<testcase classname="spec.requests.patients.get_insurance_spec" name="GetPatientInsurance fails if patient does not exist" file="./spec/requests/patients/get_insurance_spec.rb" time="0.028664"></testcase>
<testcase classname="spec.requests.patients.get_insurance_spec" name="GetPatientInsurance returns patient&apos;s transport preferences" file="./spec/requests/patients/get_insurance_spec.rb" time="0.108265"></testcase>
<testcase classname="spec.requests.health.get_workers_health_spec" name="Get workers health status with healthy statuses returns success (200)" file="./spec/requests/health/get_workers_health_spec.rb" time="0.014599"></testcase>
<testcase classname="spec.requests.health.get_workers_health_spec" name="Get workers health status with an unhealthy status returns internal server error (500)" file="./spec/requests/health/get_workers_health_spec.rb" time="0.010550"></testcase>
<testcase classname="spec.requests.executions.medications.create_query_spec" name="Create medications query execution returns created (201) and the execution transitioned to `enqueued`" file="./spec/requests/executions/medications/create_query_spec.rb" time="0.053307"></testcase>
<testcase classname="spec.requests.executions.medications.create_query_spec" name="Create medications query execution enqueues a publish job" file="./spec/requests/executions/medications/create_query_spec.rb" time="0.052084"></testcase>
<testcase classname="spec.requests.executions.medications.create_query_spec" name="Create medications query execution returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/medications/create_query_spec.rb" time="0.023451"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to have many images" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.001991"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :edge is either ‹&quot;normal&quot;›, ‹&quot;sharp&quot;›, or ‹&quot;undermined&quot;›" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.017237"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :moisture cannot be empty/falsy" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.012332"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to belong to wound required: true" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.006619"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :size cannot be empty/falsy" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.012021"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :moisture is either ‹&quot;dry&quot;›, ‹&quot;moist&quot;›, or ‹&quot;exudate&quot;›" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.017791"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :edge cannot be empty/falsy" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.011832"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :bed is either ‹&quot;granulation&quot;›, ‹&quot;fibrin&quot;›, ‹&quot;necrotic&quot;›, ‹&quot;pus&quot;›, or ‹&quot;mixed&quot;›" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.023966"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to validate that :bed cannot be empty/falsy" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.011996"></testcase>
<testcase classname="spec.models.wounds.wound_evaluation_spec" name="Wounds::WoundEvaluation is expected to belong to user required: true" file="./spec/models/wounds/wound_evaluation_spec.rb" time="0.006605"></testcase>
<testcase classname="spec.requests.vascular_access.get_interventions_spec" name="GetInterventions returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_interventions_spec.rb" time="0.098887"></testcase>
<testcase classname="spec.requests.vascular_access.get_interventions_spec" name="GetInterventions fails if the access site does not exist" file="./spec/requests/vascular_access/get_interventions_spec.rb" time="0.025288"></testcase>
<testcase classname="spec.requests.vascular_access.get_interventions_spec" name="GetInterventions returns the list of available interventions" file="./spec/requests/vascular_access/get_interventions_spec.rb" time="0.330909"></testcase>
<testcase classname="spec.models.executions.reports.session_sign_off_spec" name="Executions::Reports::SessionSignOff is expected to be thin" file="./spec/models/executions/reports/session_sign_off_spec.rb" time="0.012370"></testcase>
<testcase classname="spec.models.executions.reports.session_sign_off_spec" name="Executions::Reports::SessionSignOff#sanitize_payload sanitizes payload" file="./spec/models/executions/reports/session_sign_off_spec.rb" time="0.021016"></testcase>
<testcase classname="spec.integrations.executions.maestro.backup_spec" name="Asynchronous backup reports downloads the backup reports" file="./spec/integrations/executions/maestro/backup_spec.rb" time="0.216805"></testcase>
<testcase classname="spec.integrations.executions.maestro.backup_spec" name="Asynchronous backup reports adds an execution to the queue" file="./spec/integrations/executions/maestro/backup_spec.rb" time="0.086752"></testcase>
<testcase classname="spec.models.episodes.services.discharge_spec" name="Episodes::Services::Discharge only ends episodes with same id" file="./spec/models/episodes/services/discharge_spec.rb" time="0.126970"></testcase>
<testcase classname="spec.models.episodes.services.discharge_spec" name="Episodes::Services::Discharge ends an episode" file="./spec/models/episodes/services/discharge_spec.rb" time="0.100196"></testcase>
<testcase classname="spec.requests.patients.update_patient_medical_information_spec" name="Update patient updating a patient&apos;s medical information fails with not_found when the patient does not exist" file="./spec/requests/patients/update_patient_medical_information_spec.rb" time="0.028952"></testcase>
<testcase classname="spec.requests.patients.update_patient_medical_information_spec" name="Update patient updating a patient&apos;s medical information succeeds when authorized and with a valid payload" file="./spec/requests/patients/update_patient_medical_information_spec.rb" time="0.080352"></testcase>
<testcase classname="spec.requests.patients.update_patient_medical_information_spec" name="Update patient updating a patient&apos;s medical information is forbidden when unauthorized" file="./spec/requests/patients/update_patient_medical_information_spec.rb" time="0.054008"></testcase>
<testcase classname="spec.models.sessions.session_progress_spec" name="Sessions::SessionProgress#call when treatment is HDF aggregates progress parameters by time window for ongoing sessions" file="./spec/models/sessions/session_progress_spec.rb" time="0.913177"></testcase>
<testcase classname="spec.models.sessions.session_progress_spec" name="Sessions::SessionProgress#call when treatment is HDF aggregates session parameters by time window for ended session" file="./spec/models/sessions/session_progress_spec.rb" time="0.898537"></testcase>
<testcase classname="spec.models.sessions.session_progress_spec" name="Sessions::SessionProgress#call when treatment is HDF returns session progress parameters in tabular form sorted by blood pressure" file="./spec/models/sessions/session_progress_spec.rb" time="0.724819"></testcase>
<testcase classname="spec.models.sessions.session_progress_spec" name="Sessions::SessionProgress#call when treatment is HD returns 11 session progress parameters in tabular form" file="./spec/models/sessions/session_progress_spec.rb" time="0.355334"></testcase>
<testcase classname="spec.models.sessions.session_progress_spec" name="Sessions::SessionProgress#call when treatment hasn&apos;t started yet returns no session progress rows" file="./spec/models/sessions/session_progress_spec.rb" time="0.226659"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on regular days that are planned" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001837"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a thursday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001810"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is not scheduled when there is nothing planned" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001775"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is not scheduled on days that are not planned" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001877"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a wednesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001727"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a saturday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001672"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a friday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002153"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a tuesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001803"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a sunday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001853"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays is scheduled on a monday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002094"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the first day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002074"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the first day is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001968"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the first day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002471"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday no completed sessions is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003827"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday no completed sessions is scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003418"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday no completed sessions is scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003365"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the second day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001973"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the second day is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001844"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays friday or saturday completed session on the second day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001940"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the second day is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002078"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the second day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001769"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the second day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001963"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the first day is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002079"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the first day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001773"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday completed session on the first day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001926"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday no completed sessions is scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003068"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday no completed sessions is scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003201"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays monday or tuesday no completed sessions is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003976"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001887"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday completed session on the first day is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002047"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday completed session on the first day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001837"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday completed session on the first day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001893"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday completed session on the second day is not scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002347"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday completed session on the second day is not scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002008"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday no completed sessions is not scheduled on the second day when there is a session planned on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003469"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday no completed sessions is scheduled on the second day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.007228"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays wednesday or thursday no completed sessions is scheduled on the first day" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.003554"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on complete weeks starting on monday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002113"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on complete weeks starting on tuesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002262"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on complete weeks starting on wednesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001858"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on incomplete weeks starting on monday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002123"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on incomplete weeks starting on tuesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.002051"></testcase>
<testcase classname="spec.models.planning.decorators.on_days_spec" name="Planning::Decorators::OnDays#cwday_to_date on incomplete weeks starting on wednesday" file="./spec/models/planning/decorators/on_days_spec.rb" time="0.001977"></testcase>
<testcase classname="spec.requests.laboratory.delete_lab_system_spec" name="Lab System DeleteLabSystem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/delete_lab_system_spec.rb" time="0.034798"></testcase>
<testcase classname="spec.requests.laboratory.delete_lab_system_spec" name="Lab System DeleteLabSystem deletes the lab system" file="./spec/requests/laboratory/delete_lab_system_spec.rb" time="0.036265"></testcase>
<testcase classname="spec.requests.laboratory.delete_lab_system_spec" name="Lab System DeleteLabSystem returns not found (404) if the lab system doesn&apos;t exist" file="./spec/requests/laboratory/delete_lab_system_spec.rb" time="0.028396"></testcase>
<testcase classname="spec.models.sessions.services.ktv_calculator_spec" name="Sessions::Services::KtvCalculator Kt/V calculations for session return correct Kt/V calculations for a session duration of 277 minutes " file="./spec/models/sessions/services/ktv_calculator_spec.rb" time="0.159171"></testcase>
<testcase classname="spec.models.sessions.services.ktv_calculator_spec" name="Sessions::Services::KtvCalculator Kt/V calculations for session returns Kt/V calculations" file="./spec/models/sessions/services/ktv_calculator_spec.rb" time="0.117811"></testcase>
<testcase classname="spec.models.sessions.services.ktv_calculator_spec" name="Sessions::Services::KtvCalculator Kt/V calculations for session when lab observations don&apos;t include time information calculates Kt/V correctly" file="./spec/models/sessions/services/ktv_calculator_spec.rb" time="0.131104"></testcase>
<testcase classname="spec.models.configurations.base_spec" name="Configurations::Base is expected to validate that :key cannot be empty/falsy" file="./spec/models/configurations/base_spec.rb" time="0.012345"></testcase>
<testcase classname="spec.models.configurations.base_spec" name="Configurations::Base is expected to validate that :key is case-sensitively unique" file="./spec/models/configurations/base_spec.rb" time="0.011167"></testcase>
<testcase classname="spec.models.configurations.base_spec" name="Configurations::Base#revert! reverts the configuration to original values" file="./spec/models/configurations/base_spec.rb" time="0.011377"></testcase>
<testcase classname="spec.models.configurations.base_spec" name="Configurations::Base#apply! calls the service after save" file="./spec/models/configurations/base_spec.rb" time="0.005354"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription updates without archiving if only changing end date" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.148850"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription rejects updates if variant form does not exist for the product" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.126778"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription keeps track of previous medications" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.154724"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription rejects updating past start date" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.116880"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription edits a magistral preparation" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.145370"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription denies prescribing if not granted" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.105545"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription rejects updates if trying to edit home medication" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.130944"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription succeeds if prescription dates are not between start_date and end_date" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.136421"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription updates without archiving if prescription is not started" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.137749"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription rejects past entries updates" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.159524"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription updates the given medication" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.166048"></testcase>
<testcase classname="spec.requests.medications.edit_intradialytic_medication_prescription_spec" name="Edit Intradialytic Medication Prescription fails if medication does not exist" file="./spec/requests/medications/edit_intradialytic_medication_prescription_spec.rb" time="0.080699"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_parameters_spec" name="Lab parameters requires an authorized user" file="./spec/requests/laboratory/update_lab_parameters_spec.rb" time="0.024894"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_parameters_spec" name="Lab parameters updates lab parameters" file="./spec/requests/laboratory/update_lab_parameters_spec.rb" time="0.054859"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_parameters_spec" name="Lab parameters returns errors when a unit is invalid" file="./spec/requests/laboratory/update_lab_parameters_spec.rb" time="0.085084"></testcase>
<testcase classname="spec.requests.laboratory.update_lab_parameters_spec" name="Lab parameters passing a display unit for a unitless parameter should result in error" file="./spec/requests/laboratory/update_lab_parameters_spec.rb" time="0.032671"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record validates" file="./spec/models/concerns/codable_spec.rb" time="0.005801"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #ensure_code_link adds to the code to the codable" file="./spec/models/concerns/codable_spec.rb" time="0.024255"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #ensure_code_link adds to the code to the codesystem" file="./spec/models/concerns/codable_spec.rb" time="0.025153"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #sync_code_list doesn&apos;t link empty values" file="./spec/models/concerns/codable_spec.rb" time="0.010540"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #sync_code_list removes existing items" file="./spec/models/concerns/codable_spec.rb" time="0.024386"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #sync_code_list adds the list of code systems" file="./spec/models/concerns/codable_spec.rb" time="0.041564"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #add_code_list adds the list of code systems" file="./spec/models/concerns/codable_spec.rb" time="0.042034"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #add_code_list doesn&apos;t link empty values" file="./spec/models/concerns/codable_spec.rb" time="0.029748"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #add_code_list fails when the code system does not exist" file="./spec/models/concerns/codable_spec.rb" time="0.011280"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #code_in_system returns nil if no code is found" file="./spec/models/concerns/codable_spec.rb" time="0.006666"></testcase>
<testcase classname="spec.models.concerns.codable_spec" name="Codable an codable record #code_in_system returns the code for a given code system" file="./spec/models/concerns/codable_spec.rb" time="0.022519"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns nil of no admission id is present" file="./spec/models/episodes/episode_spec.rb" time="0.063871"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode is expected to belong to patient required: true" file="./spec/models/episodes/episode_spec.rb" time="0.005244"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode does not return case ids as admission id" file="./spec/models/episodes/episode_spec.rb" time="0.060639"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns active case id on specific date" file="./spec/models/episodes/episode_spec.rb" time="0.061796"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns active admission id on specific date" file="./spec/models/episodes/episode_spec.rb" time="0.062843"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode does not return case id of episodes started after passed date" file="./spec/models/episodes/episode_spec.rb" time="0.064312"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode is expected to have many adt_events class_name =&gt; Episodes::AdtEvent" file="./spec/models/episodes/episode_spec.rb" time="0.001972"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode is expected to validate that :patient_type is either ‹&quot;in&quot;› or ‹&quot;out&quot;›" file="./spec/models/episodes/episode_spec.rb" time="0.005104"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns case id of episode with latest start date when multiple are active" file="./spec/models/episodes/episode_spec.rb" time="0.065198"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode does not return admission id of episodes started after passed date" file="./spec/models/episodes/episode_spec.rb" time="0.064094"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns nil when case id is present" file="./spec/models/episodes/episode_spec.rb" time="0.058202"></testcase>
<testcase classname="spec.models.episodes.episode_spec" name="Episodes::Episode returns admission id of episode with latest start date when multiple are active" file="./spec/models/episodes/episode_spec.rb" time="0.066506"></testcase>
<testcase classname="spec.requests.patients.get_contacts_for_patient_spec" name="GetContactsForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_contacts_for_patient_spec.rb" time="0.076748"></testcase>
<testcase classname="spec.requests.patients.get_contacts_for_patient_spec" name="GetContactsForPatient returns all contacts for a patient" file="./spec/requests/patients/get_contacts_for_patient_spec.rb" time="0.102772"></testcase>
<testcase classname="spec.models.executions.reports.billing_spec" name="Executions::Reports::Billing is expected to be thin" file="./spec/models/executions/reports/billing_spec.rb" time="0.002138"></testcase>
<testcase classname="spec.models.executions.reports.billing_spec" name="Executions::Reports::Billing#sanitize_payload sanitizes payload" file="./spec/models/executions/reports/billing_spec.rb" time="0.021094"></testcase>
<testcase classname="spec.models.medications.product_route_spec" name="Medications::ProductRoute is expected to belong to product required: true" file="./spec/models/medications/product_route_spec.rb" time="0.014728"></testcase>
<testcase classname="spec.models.medications.product_route_spec" name="Medications::ProductRoute is expected to belong to route required: true" file="./spec/models/medications/product_route_spec.rb" time="0.009948"></testcase>
<testcase classname="spec.requests.medications.get_magistral_preparations_spec" name="GetMagistralPreparations returns 403 if the user isn&apos;t authorized" file="./spec/requests/medications/get_magistral_preparations_spec.rb" time="0.045029"></testcase>
<testcase classname="spec.requests.medications.get_magistral_preparations_spec" name="GetMagistralPreparations returns magistral preparations sorted on formula &lt;-&gt; form &lt;-&gt; dose" file="./spec/requests/medications/get_magistral_preparations_spec.rb" time="0.049202"></testcase>
<testcase classname="spec.requests.medications.get_magistral_preparations_spec" name="GetMagistralPreparations returns magistral preparations" file="./spec/requests/medications/get_magistral_preparations_spec.rb" time="0.048875"></testcase>
<testcase classname="spec.requests.consumables.consumable_items_spec" name="Consumable Items API updates an existing consumable item" file="./spec/requests/consumables/consumable_items_spec.rb" time="0.052461"></testcase>
<testcase classname="spec.requests.consumables.consumable_items_spec" name="Consumable Items API returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/consumables/consumable_items_spec.rb" time="0.034529"></testcase>
<testcase classname="spec.requests.consumables.consumable_items_spec" name="Consumable Items API does not update the title of an existing consumable item" file="./spec/requests/consumables/consumable_items_spec.rb" time="0.044275"></testcase>
<testcase classname="spec.requests.consumables.consumable_items_spec" name="Consumable Items API create a new consumable item" file="./spec/requests/consumables/consumable_items_spec.rb" time="0.044335"></testcase>
<testcase classname="spec.requests.consumables.consumable_items_spec" name="Consumable Items API disables an existing consumable item" file="./spec/requests/consumables/consumable_items_spec.rb" time="0.055293"></testcase>
<testcase classname="spec.requests.report_templates.get_report_templates_spec" name="GetReportTemplates returns all the report_templates" file="./spec/requests/report_templates/get_report_templates_spec.rb" time="0.042405"></testcase>
<testcase classname="spec.requests.report_templates.get_report_templates_spec" name="GetReportTemplates returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/report_templates/get_report_templates_spec.rb" time="0.025892"></testcase>
<testcase classname="spec.lib.validators.list_validator_spec" name="Validators::ListValidator does not fail if value is nil" file="./spec/lib/validators/list_validator_spec.rb" time="0.002378"></testcase>
<testcase classname="spec.lib.validators.list_validator_spec" name="Validators::ListValidator accepts valid values in the list of values" file="./spec/lib/validators/list_validator_spec.rb" time="0.001757"></testcase>
<testcase classname="spec.lib.validators.list_validator_spec" name="Validators::ListValidator also rejects nil values" file="./spec/lib/validators/list_validator_spec.rb" time="0.001804"></testcase>
<testcase classname="spec.requests.users.get_user_spec" name="UsersController .show returns the given user" file="./spec/requests/users/get_user_spec.rb" time="0.052443"></testcase>
<testcase classname="spec.requests.users.get_user_spec" name="UsersController .show fails when given user does not exist" file="./spec/requests/users/get_user_spec.rb" time="0.024088"></testcase>
<testcase classname="spec.requests.users.get_user_spec" name="UsersController .show requires authorization" file="./spec/requests/users/get_user_spec.rb" time="0.023541"></testcase>
<testcase classname="spec.requests.infrastructure.swap_positions_spec" name="Position requires the correct rights" file="./spec/requests/infrastructure/swap_positions_spec.rb" time="0.061170"></testcase>
<testcase classname="spec.requests.infrastructure.swap_positions_spec" name="Position swaps two positions" file="./spec/requests/infrastructure/swap_positions_spec.rb" time="0.075033"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to belong to recorder required: true" file="./spec/models/requests/base_spec.rb" time="0.049728"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to belong to requester optional: true" file="./spec/models/requests/base_spec.rb" time="0.024438"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to belong to requestable required: true" file="./spec/models/requests/base_spec.rb" time="0.025970"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to belong to patient required: true" file="./spec/models/requests/base_spec.rb" time="0.026742"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to belong to template optional: true" file="./spec/models/requests/base_spec.rb" time="0.026338"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to validate that :status is either ‹&quot;active&quot;›, ‹&quot;cancelled&quot;›, ‹&quot;completed&quot;›, or ‹&quot;stopped&quot;›" file="./spec/models/requests/base_spec.rb" time="0.028837"></testcase>
<testcase classname="spec.models.requests.base_spec" name="Requests::Base is expected to validate that :status cannot be empty/falsy" file="./spec/models/requests/base_spec.rb" time="0.031325"></testcase>
<testcase classname="spec.models.medications.providers.handlers.error_spec" name="Medications::Providers::Handler attaches errors to the execution" file="./spec/models/medications/providers/handlers/error_spec.rb" time="0.140889"></testcase>
<testcase classname="spec.models.medications.providers.handlers.error_spec" name="Medications::Providers::Handler transitions the execution to `errored`" file="./spec/models/medications/providers/handlers/error_spec.rb" time="0.088936"></testcase>
<testcase classname="spec.models.medications.providers.handlers.error_spec" name="Medications::Providers::Handler drops the message when the execution was not found" file="./spec/models/medications/providers/handlers/error_spec.rb" time="0.005547"></testcase>
<testcase classname="spec.models.configurations.integer_spec" name="Configurations::Integer casts to integer" file="./spec/models/configurations/integer_spec.rb" time="0.005936"></testcase>
<testcase classname="spec.requests.delete_codable_code_spec" name="Delete Codable Code returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/delete_codable_code_spec.rb" time="0.059901"></testcase>
<testcase classname="spec.requests.delete_codable_code_spec" name="Delete Codable Code returns success (200) and removes the code from the codable" file="./spec/requests/delete_codable_code_spec.rb" time="0.060788"></testcase>
<testcase classname="spec.models.charts.weight_history_spec" name="Charts::WeightHistory#call returns the patient&apos;s weigth for the last five sessions" file="./spec/models/charts/weight_history_spec.rb" time="0.053015"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.025703"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates creates a specific template if there are no default templates present" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.035627"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates creates the landscape templates if there are no default templates present" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.050076"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates creates the portrait templates if there are no default templates present" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.047372"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present returns unprocessable (422) if the name is invalid" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.061698"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present returns unprocessable (422) if the file is invalid" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.049025"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present creates the landscape report_templates" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.070543"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present creates a specific report_template" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.057566"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present returns unprocessable (422) if the file is invalid" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.068614"></testcase>
<testcase classname="spec.requests.report_templates.create_report_template_spec" name="CreateReportTemplates Default templates present creates the portrait report_templates" file="./spec/requests/report_templates/create_report_template_spec.rb" time="0.060985"></testcase>
<testcase classname="spec.models.infrastructure.center_acl_spec" name="Infrastructure::CenterAcl is expected to belong to user required: true" file="./spec/models/infrastructure/center_acl_spec.rb" time="0.003476"></testcase>
<testcase classname="spec.models.infrastructure.center_acl_spec" name="Infrastructure::CenterAcl is expected to belong to center required: true" file="./spec/models/infrastructure/center_acl_spec.rb" time="0.003665"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier is expected to validate that :identifier_type cannot be empty/falsy" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.017824"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.013353"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier is expected to validate that :identifier_type is either ‹&quot;pharmacy&quot;› or ‹&quot;cnk&quot;›" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.020039"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier is expected to belong to item class_name =&gt; Medications::Formulary::Item required: true" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.015885"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier when the identifier_type is considered to be unique #validate_identifier validates that identifier is unique over identifier_type" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.026467"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier when the identifier_type is considered to be unique #validate_identifier_type_item validates that identifier_type is unique over item" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.015720"></testcase>
<testcase classname="spec.models.medications.formulary.identifier_spec" name="Medications::Formulary::Identifier#validate_identifier_identifier_type_item validates that identifier and (identifier_type, item) combinations are unique" file="./spec/models/medications/formulary/identifier_spec.rb" time="0.011247"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_product_packages_spec" name="Medications GetHomeMedicationProductPackages fails get if home medication is not found" file="./spec/requests/medications/get_home_medication_product_packages_spec.rb" time="0.104461"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_product_packages_spec" name="Medications GetHomeMedicationProductPackages returns an empty list of packages when magistral preparation" file="./spec/requests/medications/get_home_medication_product_packages_spec.rb" time="0.117882"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_product_packages_spec" name="Medications GetHomeMedicationProductPackages requires read rights" file="./spec/requests/medications/get_home_medication_product_packages_spec.rb" time="0.123684"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_product_packages_spec" name="Medications GetHomeMedicationProductPackages returns a list of packages" file="./spec/requests/medications/get_home_medication_product_packages_spec.rb" time="0.120342"></testcase>
<testcase classname="spec.models.reports.journal_printout_spec" name="Get journal printout returns a PDF of the journal entries" file="./spec/models/reports/journal_printout_spec.rb" time="0.101851"></testcase>
<testcase classname="spec.requests.sessions.get_session_prescription_spec" name="GetSessionPrescription returns not found (404) if the session prescription cannot be found" file="./spec/requests/sessions/get_session_prescription_spec.rb" time="0.042373"></testcase>
<testcase classname="spec.requests.sessions.get_session_prescription_spec" name="GetSessionPrescription returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/get_session_prescription_spec.rb" time="0.146425"></testcase>
<testcase classname="spec.requests.sessions.get_session_prescription_spec" name="GetSessionPrescription returns the requested session prescription" file="./spec/requests/sessions/get_session_prescription_spec.rb" time="0.152291"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients isn&apos;t allowed to import a patient twice" file="./spec/requests/patients/import_patients_spec.rb" time="0.141017"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients status should be &apos;processing&apos; when an import is busy, and &apos;available&apos; otherwise" file="./spec/requests/patients/import_patients_spec.rb" time="0.069883"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients fails when not birthdate is invalid" file="./spec/requests/patients/import_patients_spec.rb" time="0.095239"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients insert patient" file="./spec/requests/patients/import_patients_spec.rb" time="0.064869"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients fails when header invalid" file="./spec/requests/patients/import_patients_spec.rb" time="0.095452"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients returns forbidden when not authorised" file="./spec/requests/patients/import_patients_spec.rb" time="0.025494"></testcase>
<testcase classname="spec.requests.patients.import_patients_spec" name="ImportPatients fails when not enough fields" file="./spec/requests/patients/import_patients_spec.rb" time="0.089995"></testcase>
<testcase classname="spec.requests.configurations.get_configurations_spec" name="Get configurations returns success (200) and all configurations" file="./spec/requests/configurations/get_configurations_spec.rb" time="0.065211"></testcase>
<testcase classname="spec.requests.configurations.get_configurations_spec" name="Get configurations returns success (200) and configurations without `protected` level if the user isn&apos;t authorized" file="./spec/requests/configurations/get_configurations_spec.rb" time="0.030447"></testcase>
<testcase classname="spec.requests.exports.get_exportable_spec" name="Get exportable returns not found (404) if the exportable is not found" file="./spec/requests/exports/get_exportable_spec.rb" time="0.032785"></testcase>
<testcase classname="spec.requests.exports.get_exportable_spec" name="Get exportable returns success (200) and the billing exportable" file="./spec/requests/exports/get_exportable_spec.rb" time="0.514840"></testcase>
<testcase classname="spec.requests.exports.get_exportable_spec" name="Get exportable returns success (200) and the medication exportable" file="./spec/requests/exports/get_exportable_spec.rb" time="0.399097"></testcase>
<testcase classname="spec.requests.exports.get_exportable_spec" name="Get exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/get_exportable_spec.rb" time="0.034520"></testcase>
<testcase classname="spec.models.patients.patient_search_query_spec" name="Patients::PatientSearchQuery searches for patients with supported treatments" file="./spec/models/patients/patient_search_query_spec.rb" time="0.114540"></testcase>
<testcase classname="spec.requests.infrastructure.create_transport_type_spec" name="Create transport type return unprocessable entity (422) when reusing a name" file="./spec/requests/infrastructure/create_transport_type_spec.rb" time="0.040481"></testcase>
<testcase classname="spec.requests.infrastructure.create_transport_type_spec" name="Create transport type allows to reuse the name of deleted transport type" file="./spec/requests/infrastructure/create_transport_type_spec.rb" time="0.036136"></testcase>
<testcase classname="spec.requests.infrastructure.create_transport_type_spec" name="Create transport type returns created (200) and the transport type" file="./spec/requests/infrastructure/create_transport_type_spec.rb" time="0.034668"></testcase>
<testcase classname="spec.requests.infrastructure.create_transport_type_spec" name="Create transport type returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_transport_type_spec.rb" time="0.031115"></testcase>
<testcase classname="spec.requests.patients.get_allergies_for_patient_spec" name="Patient&apos;s allergies returns all allergies for a patient" file="./spec/requests/patients/get_allergies_for_patient_spec.rb" time="0.106851"></testcase>
<testcase classname="spec.requests.patients.get_allergies_for_patient_spec" name="Patient&apos;s allergies returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_allergies_for_patient_spec.rb" time="0.072918"></testcase>
<testcase classname="spec.requests.patients.get_allergies_for_patient_spec" name="Patient&apos;s allergies returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/get_allergies_for_patient_spec.rb" time="0.025428"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is expected to have many attachments" file="./spec/models/devices/device_spec.rb" time="0.002072"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is expected to have one connector_device" file="./spec/models/devices/device_spec.rb" time="0.002213"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is expected to belong to center required: true" file="./spec/models/devices/device_spec.rb" time="0.005258"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is only allowed to create dialysis and ro devices" file="./spec/models/devices/device_spec.rb" time="0.006502"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is expected to validate that :serial_number cannot be empty/falsy" file="./spec/models/devices/device_spec.rb" time="0.009441"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is possible to create an ro device based on the system design parameter" file="./spec/models/devices/device_spec.rb" time="0.005808"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device adds methods for all meta data fields defined" file="./spec/models/devices/device_spec.rb" time="0.028332"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device is expected to validate that :name cannot be empty/falsy" file="./spec/models/devices/device_spec.rb" time="0.009526"></testcase>
<testcase classname="spec.models.devices.device_spec" name="Devices::Device validate uniqueness of name" file="./spec/models/devices/device_spec.rb" time="0.021948"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id returns success (200) and creates a connector_device" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.050633"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.027710"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id returns unprocessable entity (422) for invalid data" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.043901"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id creates audit for create action" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.060818"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id returns unprocessable entity (422) for an invalid address" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.038280"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id returns unprocessable_entity (422) if the configuration between device and connector is not unique" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.041364"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_device_spec" name="POST /api/connectors/:id/device/:id creates no audit for invalid create action" file="./spec/requests/infrastructure/create_connector_device_spec.rb" time="0.042315"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update does not create objects twice" file="./spec/models/medications/providers/vidal_spec.rb" time="0.795564"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update forms creates solution injectable en seringue" file="./spec/models/medications/providers/vidal_spec.rb" time="0.343666"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update forms creates solution injectable" file="./spec/models/medications/providers/vidal_spec.rb" time="0.359246"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update stocks creates central stock" file="./spec/models/medications/providers/vidal_spec.rb" time="0.369436"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update stocks creates dialysis stock" file="./spec/models/medications/providers/vidal_spec.rb" time="0.364900"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update routes creates sous-cutanée" file="./spec/models/medications/providers/vidal_spec.rb" time="0.364371"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update routes creates intraveineuse" file="./spec/models/medications/providers/vidal_spec.rb" time="0.345170"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates sodium chlorure" file="./spec/models/medications/providers/vidal_spec.rb" time="0.357290"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates protéines de hamster" file="./spec/models/medications/providers/vidal_spec.rb" time="0.355518"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates darbépoétine alfa" file="./spec/models/medications/providers/vidal_spec.rb" time="0.382439"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates caoutchouc naturel" file="./spec/models/medications/providers/vidal_spec.rb" time="0.358030"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates phosphate disodique anhydre" file="./spec/models/medications/providers/vidal_spec.rb" time="0.337811"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates phosphate monosodique anhydre" file="./spec/models/medications/providers/vidal_spec.rb" time="0.357481"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates eau ppi" file="./spec/models/medications/providers/vidal_spec.rb" time="0.366418"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update ingredients creates polysorbate 80" file="./spec/models/medications/providers/vidal_spec.rb" time="0.341443"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update companies creates amgen" file="./spec/models/medications/providers/vidal_spec.rb" time="0.351316"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update codes allows for description setting" file="./spec/models/medications/providers/vidal_spec.rb" time="0.387780"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has codes" file="./spec/models/medications/providers/vidal_spec.rb" time="0.352524"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has forms" file="./spec/models/medications/providers/vidal_spec.rb" time="0.378273"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product is expected to be active" file="./spec/models/medications/providers/vidal_spec.rb" time="0.365581"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has routes" file="./spec/models/medications/providers/vidal_spec.rb" time="0.366976"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has stocks" file="./spec/models/medications/providers/vidal_spec.rb" time="0.344142"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product is expected not to be virtual" file="./spec/models/medications/providers/vidal_spec.rb" time="0.397181"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has packages" file="./spec/models/medications/providers/vidal_spec.rb" time="0.375439"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has a company" file="./spec/models/medications/providers/vidal_spec.rb" time="0.371356"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has ingredients" file="./spec/models/medications/providers/vidal_spec.rb" time="0.352178"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product has units" file="./spec/models/medications/providers/vidal_spec.rb" time="0.380486"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update actual product is expected to have attributes {:name =&gt; &quot;ARANESP 10 µg sol inj en seringue préremplie&quot;, :started_at =&gt; Thu, 02 Jun 2005}" file="./spec/models/medications/providers/vidal_spec.rb" time="0.344003"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update packages creates 1xARANESP" file="./spec/models/medications/providers/vidal_spec.rb" time="0.355528"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product has forms" file="./spec/models/medications/providers/vidal_spec.rb" time="0.337776"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product has ingredients" file="./spec/models/medications/providers/vidal_spec.rb" time="0.347194"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product has routes" file="./spec/models/medications/providers/vidal_spec.rb" time="0.424028"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product is expected to be virtual" file="./spec/models/medications/providers/vidal_spec.rb" time="0.355742"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product is expected to have attributes {:name =&gt; &quot;DARBEPOETINE ALFA 10 µg sol inj ser préremplie&quot;}" file="./spec/models/medications/providers/vidal_spec.rb" time="0.348570"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product has codes" file="./spec/models/medications/providers/vidal_spec.rb" time="0.413627"></testcase>
<testcase classname="spec.models.medications.providers.vidal_spec" name="Medications::Providers::Update virtual product is expected to be active" file="./spec/models/medications/providers/vidal_spec.rb" time="0.366793"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_patient_spec.rb" time="0.089858"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns no diet if not set" file="./spec/requests/patients/get_patient_spec.rb" time="0.124220"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s allergy" file="./spec/requests/patients/get_patient_spec.rb" time="0.130476"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s diet" file="./spec/requests/patients/get_patient_spec.rb" time="0.148202"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s addresses" file="./spec/requests/patients/get_patient_spec.rb" time="0.121981"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s remarks" file="./spec/requests/patients/get_patient_spec.rb" time="0.133928"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s infections" file="./spec/requests/patients/get_patient_spec.rb" time="0.134544"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient" file="./spec/requests/patients/get_patient_spec.rb" time="0.116363"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns the patient&apos;s transplant eligibility status" file="./spec/requests/patients/get_patient_spec.rb" time="0.126793"></testcase>
<testcase classname="spec.requests.patients.get_patient_spec" name="GetPatient returns &apos;unknown&apos; as transplant eligibility if not set" file="./spec/requests/patients/get_patient_spec.rb" time="0.134964"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_validation_spec" name="Medications GetHomeMedicationScheduleValidation home medication schedule should indicate if invalid" file="./spec/requests/medications/get_home_medication_schedule_validation_spec.rb" time="0.228928"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_validation_spec" name="Medications GetHomeMedicationScheduleValidation home medication schedule should indicate if valid" file="./spec/requests/medications/get_home_medication_schedule_validation_spec.rb" time="0.213270"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_validation_spec" name="Medications GetHomeMedicationScheduleValidation requires read rights" file="./spec/requests/medications/get_home_medication_schedule_validation_spec.rb" time="0.236010"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_validation_spec" name="Medications GetHomeMedicationScheduleValidation home medication schedule validness should update when made valid" file="./spec/requests/medications/get_home_medication_schedule_validation_spec.rb" time="0.470193"></testcase>
<testcase classname="spec.requests.infrastructure.get_stocks_spec" name="Get stocks returns success (200) and stocks sorted by external_identifier" file="./spec/requests/infrastructure/get_stocks_spec.rb" time="0.068177"></testcase>
<testcase classname="spec.integrations.executions.exports.transport_prognosis_spec" name="Asynchronous exports: transport_prognosis generates the report" file="./spec/integrations/executions/exports/transport_prognosis_spec.rb" time="0.553393"></testcase>
<testcase classname="spec.requests.wounds.get_wound_prescription_spec" name="GetWoundPrescription returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/get_wound_prescription_spec.rb" time="0.095694"></testcase>
<testcase classname="spec.requests.wounds.get_wound_prescription_spec" name="GetWoundPrescription returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wound_prescription_spec.rb" time="0.116589"></testcase>
<testcase classname="spec.requests.wounds.get_wound_prescription_spec" name="GetWoundPrescription returns the serialized form definition" file="./spec/requests/wounds/get_wound_prescription_spec.rb" time="0.147135"></testcase>
<testcase classname="spec.requests.patients.get_remarks_for_patient_spec" name="Patient remarks returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_remarks_for_patient_spec.rb" time="0.086827"></testcase>
<testcase classname="spec.requests.patients.get_remarks_for_patient_spec" name="Patient remarks returns all remarks for a patient" file="./spec/requests/patients/get_remarks_for_patient_spec.rb" time="0.108712"></testcase>
<testcase classname="spec.models.sessions.services.cancel_service_spec" name="Sessions::Services::Cancel does not re-cancel a session" file="./spec/models/sessions/services/cancel_service_spec.rb" time="0.175989"></testcase>
<testcase classname="spec.models.sessions.services.cancel_service_spec" name="Sessions::Services::Cancel cancels the session if its current phase is beyond &apos;preparation&apos;" file="./spec/models/sessions/services/cancel_service_spec.rb" time="0.119643"></testcase>
<testcase classname="spec.models.sessions.services.cancel_service_spec" name="Sessions::Services::Cancel deletes a session in &apos;preparation&apos; phase" file="./spec/models/sessions/services/cancel_service_spec.rb" time="0.144496"></testcase>
<testcase classname="spec.models.sessions.services.cancel_service_spec" name="Sessions::Services::Cancel deletes an unstarted session" file="./spec/models/sessions/services/cancel_service_spec.rb" time="0.128796"></testcase>
<testcase classname="spec.models.integration.water_treatment_data_ingestion_service_spec" name="create_data accepts machine data with a nested device" file="./spec/models/integration/water_treatment_data_ingestion_service_spec.rb" time="0.078450"></testcase>
<testcase classname="spec.models.integration.water_treatment_data_ingestion_service_spec" name="create_data fails when not authorized" file="./spec/models/integration/water_treatment_data_ingestion_service_spec.rb" time="0.025927"></testcase>
<testcase classname="spec.models.integration.water_treatment_data_ingestion_service_spec" name="create_data succeeds when authorized" file="./spec/models/integration/water_treatment_data_ingestion_service_spec.rb" time="0.049726"></testcase>
<testcase classname="spec.models.reports.billing_pdf_spec" name="Billing report when session data available expect a report with the billing report" file="./spec/models/reports/billing_pdf_spec.rb" time="0.033879"></testcase>
<testcase classname="spec.requests.health.get_database_health_spec" name="Get database health status returns success (200) and a JSON response" file="./spec/requests/health/get_database_health_spec.rb" time="0.015689"></testcase>
<testcase classname="spec.requests.health.get_database_health_spec" name="Get database health status returns internal server error (500) if the database is unhealthy" file="./spec/requests/health/get_database_health_spec.rb" time="0.012471"></testcase>
<testcase classname="spec.requests.integration.cancel_discharge_spec" name="Integration Cancel discharge succeeds if patient doesn&apos;t exist" file="./spec/requests/integration/cancel_discharge_spec.rb" time="0.032496"></testcase>
<testcase classname="spec.requests.integration.cancel_discharge_spec" name="Integration Cancel discharge leaves untouched if no corresponding discharge event can be found" file="./spec/requests/integration/cancel_discharge_spec.rb" time="0.137236"></testcase>
<testcase classname="spec.requests.integration.cancel_discharge_spec" name="Integration Cancel discharge removes discharge event and sets admitted" file="./spec/requests/integration/cancel_discharge_spec.rb" time="0.173818"></testcase>
<testcase classname="spec.requests.integration.cancel_discharge_spec" name="Integration Cancel discharge Uses date of latest discharge event if no date is present" file="./spec/requests/integration/cancel_discharge_spec.rb" time="0.174063"></testcase>
<testcase classname="spec.requests.get_codes_by_codable_spec" name="Get codes by codable returns an list of codes by for a codable" file="./spec/requests/get_codes_by_codable_spec.rb" time="0.106166"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient creates admission event, sets admitted for not enrolled patient if dialysis admission" file="./spec/requests/integration/admit_patient_spec.rb" time="0.105937"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient creates admission event and sets admitted for enrolled patient" file="./spec/requests/integration/admit_patient_spec.rb" time="0.112730"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient creates the address when admitting the patient if he has none" file="./spec/requests/integration/admit_patient_spec.rb" time="0.072505"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient creates patient and admission event if patient doesn&apos;t exist and dialysis admission" file="./spec/requests/integration/admit_patient_spec.rb" time="0.077815"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient updates national number" file="./spec/requests/integration/admit_patient_spec.rb" time="0.109642"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient silently fails if admission_id or admission_date are nil" file="./spec/requests/integration/admit_patient_spec.rb" time="0.057841"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient returns unprocessable with an error if the patient details are invalid" file="./spec/requests/integration/admit_patient_spec.rb" time="0.037245"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient takes patient birthdate if it is missing in admission event" file="./spec/requests/integration/admit_patient_spec.rb" time="0.098752"></testcase>
<testcase classname="spec.requests.integration.admit_patient_spec" name="Integration Admit Patient admits a patient with the given insurance details" file="./spec/requests/integration/admit_patient_spec.rb" time="0.069147"></testcase>
<testcase classname="spec.models.reports.report_template_spec" name="Reports::ReportTemplate is expected to validate that :name is either ‹&quot;billing_report&quot;›, ‹&quot;transport_overview_report&quot;›, ‹&quot;journal_printout&quot;›, ‹&quot;session_sign_off_report&quot;›, or ‹&quot;home_medication_schedule&quot;›" file="./spec/models/reports/report_template_spec.rb" time="0.009375"></testcase>
<testcase classname="spec.models.reports.report_template_spec" name="Reports::ReportTemplate is expected to validate that :template cannot be empty/falsy" file="./spec/models/reports/report_template_spec.rb" time="0.009224"></testcase>
<testcase classname="spec.models.reports.report_template_spec" name="Reports::ReportTemplate is expected to validate that :name cannot be empty/falsy" file="./spec/models/reports/report_template_spec.rb" time="0.006549"></testcase>
<testcase classname="spec.models.reports.report_template_spec" name="Reports::ReportTemplate.generated_temp_file returns a temporary file" file="./spec/models/reports/report_template_spec.rb" time="0.005161"></testcase>
<testcase classname="spec.requests.logbook.get_logbook_categories_spec" name="GetLogbookCategories returns a list of categories" file="./spec/requests/logbook/get_logbook_categories_spec.rb" time="0.036492"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to validate that :name is case-sensitively unique" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.011109"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to validate that :type cannot be empty/falsy" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.008360"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to define :type as an enum backed by an integer with values ‹[&quot;graft&quot;, &quot;fistula&quot;, &quot;catheter&quot;]›" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.005865"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to validate that :name cannot be empty/falsy" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.010812"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to define :type_flag as an enum backed by an integer with values ‹[&quot;no_type_flag&quot;, &quot;single_lumen_catheter&quot;, &quot;double_lumen_catheter&quot;]›" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.004961"></testcase>
<testcase classname="spec.models.vascular_access.site_technique_spec" name="VascularAccess::SiteTechnique site technique validations are present is expected to validate that :type_flag cannot be empty/falsy" file="./spec/models/vascular_access/site_technique_spec.rb" time="0.007611"></testcase>
<testcase classname="spec.requests.infrastructure.get_position_spec" name="Positions Get Position returns the positions" file="./spec/requests/infrastructure/get_position_spec.rb" time="0.050863"></testcase>
<testcase classname="spec.requests.infrastructure.get_position_spec" name="Positions Get Position returns not found if position does not exist" file="./spec/requests/infrastructure/get_position_spec.rb" time="0.025765"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to validate that :billed_item_type cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.013130"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to belong to patient required: true" file="./spec/models/billing/item_spec.rb" time="0.006528"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to belong to session required: true" file="./spec/models/billing/item_spec.rb" time="0.007119"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to belong to administrator optional: true" file="./spec/models/billing/item_spec.rb" time="0.006293"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to validate that :billed_item_type is either ‹&quot;Orders::Order&quot;›, ‹&quot;Sessions::Session&quot;›, or ‹&quot;Medications::MedicationAdministration&quot;›" file="./spec/models/billing/item_spec.rb" time="0.038904"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to belong to billed_item required: true" file="./spec/models/billing/item_spec.rb" time="0.009229"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to have many exportable_billing_items class_name =&gt; Exports::ExportableBillingItem" file="./spec/models/billing/item_spec.rb" time="0.002121"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to have one shift" file="./spec/models/billing/item_spec.rb" time="0.001706"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to validate that :billed_item_id cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.008096"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to belong to billing_code optional: true" file="./spec/models/billing/item_spec.rb" time="0.006135"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to have many exportables class_name =&gt; Exports::Exportable through exportable_billing_items" file="./spec/models/billing/item_spec.rb" time="0.001710"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to validate that :batch_id cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.008207"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item is expected to have carbon :id, :patient_admission_id, :patient_case_id, :administered_at, :patient, :session, :administrator, :billing_code, and :billed_item" file="./spec/models/billing/item_spec.rb" time="0.005061"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#validate_not_magistral_preparation validates that the billed item is not a magistral preparation" file="./spec/models/billing/item_spec.rb" time="0.030487"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type order is expected to validate that :billing_code_type cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.075847"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type order is expected not to validate that :billing_code_type is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.086458"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type order is expected to validate that :billing_code_type is either ‹&quot;fee&quot;› or ‹&quot;forfait&quot;›" file="./spec/models/billing/item_spec.rb" time="0.060902"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type session is expected to validate that :billing_code_type is either ‹&quot;fee&quot;› or ‹&quot;forfait&quot;›" file="./spec/models/billing/item_spec.rb" time="0.136037"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type session is expected to validate that :billing_code_type cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.130491"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type session is expected not to validate that :billing_code_type is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.125292"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type medication is expected not to validate that :billing_code_type is either ‹&quot;fee&quot;› or ‹&quot;forfait&quot;›" file="./spec/models/billing/item_spec.rb" time="0.192964"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type medication is expected not to validate that :billing_code_type cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.188921"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code_type billing item with type medication is expected to validate that :billing_code_type is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.200066"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item.between returns records with administered_at between the given dates" file="./spec/models/billing/item_spec.rb" time="0.680473"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#patient_case_id returns the patient case id" file="./spec/models/billing/item_spec.rb" time="0.248880"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item.with_sessions returns only billing items with type sessions" file="./spec/models/billing/item_spec.rb" time="0.655889"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#patient_admission_id returns the patient admission id" file="./spec/models/billing/item_spec.rb" time="0.237691"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type session is expected not to validate that :billing_code is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.131437"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type session is expected to validate that :billing_code cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.133024"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type medication is expected to validate that :billing_code is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.193663"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type medication is expected not to validate that :billing_code cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.182544"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type order is expected not to validate that :billing_code is empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.056308"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item presence/absence of billing_code billing item with type order is expected to validate that :billing_code cannot be empty/falsy" file="./spec/models/billing/item_spec.rb" time="0.061580"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#between? returns true if administered_at is between the given dates" file="./spec/models/billing/item_spec.rb" time="0.134421"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#validate_billed_item_patient validates the billed item&apos;s patient" file="./spec/models/billing/item_spec.rb" time="0.172335"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item.with_orders returns only billing items with type orders" file="./spec/models/billing/item_spec.rb" time="0.646503"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#counterpart return nil if no counterpart" file="./spec/models/billing/item_spec.rb" time="0.210628"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#counterpart returns the billing item with type `fee` if type is `forfait`" file="./spec/models/billing/item_spec.rb" time="0.423776"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item#counterpart returns the billing item with type `forfait` if type is `fee`" file="./spec/models/billing/item_spec.rb" time="0.416357"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations validates the carbon copy" file="./spec/models/billing/item_spec.rb" time="0.285348"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_service_code is valid when the formulary item is not billable" file="./spec/models/billing/item_spec.rb" time="0.231256"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_service_code is valid when the patient is billed" file="./spec/models/billing/item_spec.rb" time="0.323393"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_service_code is valid when the service is billed and there is a service code" file="./spec/models/billing/item_spec.rb" time="0.245214"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_service_code is invalid when the service is billed and there is no service code" file="./spec/models/billing/item_spec.rb" time="0.215971"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_admission_case_id is invalid when there is no admission/case id for the patient" file="./spec/models/billing/item_spec.rb" time="0.245500"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_admission_case_id is valid when there is an admission/case id for the patient" file="./spec/models/billing/item_spec.rb" time="0.262089"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_practitioner is valid when the administrator has a practitioner identifier" file="./spec/models/billing/item_spec.rb" time="0.292430"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_practitioner is invalid when the administrator does not have a practitioner identifier" file="./spec/models/billing/item_spec.rb" time="0.260831"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_practitioner is invalid when there is no administrator" file="./spec/models/billing/item_spec.rb" time="0.259372"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_carbon_data is invalid when there is no carbon data" file="./spec/models/billing/item_spec.rb" time="0.339415"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_carbon_data is valid when there is carbon data" file="./spec/models/billing/item_spec.rb" time="0.358901"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_formulary_item does not validate billing items" file="./spec/models/billing/item_spec.rb" time="0.172317"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_formulary_item is invalid when there is no matching formulary item" file="./spec/models/billing/item_spec.rb" time="0.329634"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_formulary_item is valid when there is a matching formulary item" file="./spec/models/billing/item_spec.rb" time="0.328206"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item export validations #validate_not_magistral_preparation validates that the billed item is not a magistral preparation" file="./spec/models/billing/item_spec.rb" time="0.038481"></testcase>
<testcase classname="spec.models.billing.item_spec" name="Billing::Item.with_medications returns only billing items with type medications" file="./spec/models/billing/item_spec.rb" time="0.681713"></testcase>
<testcase classname="spec.requests.sessions.get_session_medication_administrations_spec" name="GetSessionMedicationAdministrations returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/get_session_medication_administrations_spec.rb" time="0.125913"></testcase>
<testcase classname="spec.requests.sessions.get_session_medication_administrations_spec" name="GetSessionMedicationAdministrations returns an empty list when there are no medication_administrations" file="./spec/requests/sessions/get_session_medication_administrations_spec.rb" time="0.118591"></testcase>
<testcase classname="spec.requests.sessions.get_session_medication_administrations_spec" name="GetSessionMedicationAdministrations returns complications that belong to the session" file="./spec/requests/sessions/get_session_medication_administrations_spec.rb" time="0.479373"></testcase>
<testcase classname="spec.requests.sessions.get_session_medication_administrations_spec" name="GetSessionMedicationAdministrations returns the list of session medication administrations" file="./spec/requests/sessions/get_session_medication_administrations_spec.rb" time="0.212791"></testcase>
<testcase classname="spec.requests.patients.create_patient_attachment_spec" name="PatientAttachments when creating an attachment creates an attachment" file="./spec/requests/patients/create_patient_attachment_spec.rb" time="0.063338"></testcase>
<testcase classname="spec.requests.patients.create_patient_attachment_spec" name="PatientAttachments when creating an attachment requires authorization" file="./spec/requests/patients/create_patient_attachment_spec.rb" time="0.067647"></testcase>
<testcase classname="spec.requests.patients.create_patient_attachment_spec" name="PatientAttachments when creating an attachment returns not found if patient doesn&apos;t exist" file="./spec/requests/patients/create_patient_attachment_spec.rb" time="0.031009"></testcase>
<testcase classname="spec.models.executions.exports.medication_administration_prognosis_spec" name="Executions::Exports::MedicationAdministrationPrognosis#sanitize_payload sanitizes payload" file="./spec/models/executions/exports/medication_administration_prognosis_spec.rb" time="0.020646"></testcase>
<testcase classname="spec.models.patients.weight_spec" name="Patients::Weight is expected to validate that :name cannot be empty/falsy" file="./spec/models/patients/weight_spec.rb" time="0.021353"></testcase>
<testcase classname="spec.models.patients.weight_spec" name="Patients::Weight is expected to validate that :grams cannot be empty/falsy" file="./spec/models/patients/weight_spec.rb" time="0.006008"></testcase>
<testcase classname="spec.models.patients.weight_spec" name="Patients::Weight is expected to validate that :grams looks like an integer greater than 0" file="./spec/models/patients/weight_spec.rb" time="0.015014"></testcase>
<testcase classname="spec.models.patients.weight_spec" name="Patients::Weight is expected to belong to patient required: true" file="./spec/models/patients/weight_spec.rb" time="0.004957"></testcase>
<testcase classname="spec.models.patients.weight_spec" name="Patients::Weight is expected to validate uniqueness of name" file="./spec/models/patients/weight_spec.rb" time="0.042054"></testcase>
<testcase classname="spec.requests.get_codes_by_system_slug_spec" name="Get codes by system slug returns an list of codes by for a codesystem" file="./spec/requests/get_codes_by_system_slug_spec.rb" time="0.049870"></testcase>
<testcase classname="spec.requests.get_codes_by_system_slug_spec" name="Get codes by system slug returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/get_codes_by_system_slug_spec.rb" time="0.027630"></testcase>
<testcase classname="spec.requests.patients.add_diet_spec" name="AddDiet returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_diet_spec.rb" time="0.024699"></testcase>
<testcase classname="spec.requests.patients.add_diet_spec" name="AddDiet create a new diet" file="./spec/requests/patients/add_diet_spec.rb" time="0.028249"></testcase>
<testcase classname="spec.requests.users.delete_role_spec" name="DeleteContact cannot delete the role if the role is in use" file="./spec/requests/users/delete_role_spec.rb" time="0.041634"></testcase>
<testcase classname="spec.requests.users.delete_role_spec" name="DeleteContact deletes the role" file="./spec/requests/users/delete_role_spec.rb" time="0.044667"></testcase>
<testcase classname="spec.requests.users.delete_role_spec" name="DeleteContact returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/users/delete_role_spec.rb" time="0.031846"></testcase>
<testcase classname="spec.requests.users.delete_role_spec" name="DeleteContact audits the action" file="./spec/requests/users/delete_role_spec.rb" time="0.042945"></testcase>
<testcase classname="spec.requests.users.delete_role_spec" name="DeleteContact returns not_found (404) if the role cannot be found" file="./spec/requests/users/delete_role_spec.rb" time="0.028798"></testcase>
<testcase classname="spec.requests.auth.avatar_for_login_spec" name="GetUserAvatarByLogin returns user&apos;s avatar for a given email" file="./spec/requests/auth/avatar_for_login_spec.rb" time="0.045222"></testcase>
<testcase classname="spec.requests.auth.avatar_for_login_spec" name="GetUserAvatarByLogin fails when invalid email or username is provided" file="./spec/requests/auth/avatar_for_login_spec.rb" time="0.009646"></testcase>
<testcase classname="spec.requests.auth.avatar_for_login_spec" name="GetUserAvatarByLogin returns user&apos;s avatar for a given username" file="./spec/requests/auth/avatar_for_login_spec.rb" time="0.023157"></testcase>
<testcase classname="spec.requests.auth.avatar_for_login_spec" name="GetUserAvatarByLogin returns user&apos;s avatar with the given case insensitive username" file="./spec/requests/auth/avatar_for_login_spec.rb" time="0.026862"></testcase>
<testcase classname="spec.requests.auth.avatar_for_login_spec" name="GetUserAvatarByLogin requires no authentication" file="./spec/requests/auth/avatar_for_login_spec.rb" time="0.026832"></testcase>
<testcase classname="spec.models.executions.exports.medication_administration_spec" name="Executions::Exports::MedicationAdministration#sanitize_payload sanitizes payload" file="./spec/models/executions/exports/medication_administration_spec.rb" time="0.022516"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to medicinal_variant class_name =&gt; Medications::MedicinalVariant optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.012813"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to created_by class_name =&gt; Users::User optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002928"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to have one billing_item class_name =&gt; Billing::Item dependent =&gt; destroy" file="./spec/models/medications/medication_administration_spec.rb" time="0.001998"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to prescription class_name =&gt; Medications::IntradialyticMedicationPrescription optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002925"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to formulary_item class_name =&gt; Formulary::Item optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002826"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to patient class_name =&gt; Patients::Patient required: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002998"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to validate that :quantity looks like a number greater than or equal to 0 and less than 100000 as long as it is not nil" file="./spec/models/medications/medication_administration_spec.rb" time="0.011299"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to prescribed_by class_name =&gt; Users::User optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002766"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to stock class_name =&gt; Infrastructure::Stock optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002507"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to have carbon :id, :quantity, :form, :formula, :posology, :medicinal_variant, :formulary_item, :stock, and :service" file="./spec/models/medications/medication_administration_spec.rb" time="0.002401"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration is expected to belong to session class_name =&gt; Sessions::Session optional: true" file="./spec/models/medications/medication_administration_spec.rb" time="0.002418"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration cascades destroy to billing items" file="./spec/models/medications/medication_administration_spec.rb" time="0.170206"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration filters filters on room" file="./spec/models/medications/medication_administration_spec.rb" time="0.494976"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration filters filters on shift" file="./spec/models/medications/medication_administration_spec.rb" time="0.457216"></testcase>
<testcase classname="spec.models.medications.medication_administration_spec" name="Medications::MedicationAdministration filters filters on center" file="./spec/models/medications/medication_administration_spec.rb" time="0.484431"></testcase>
<testcase classname="spec.models.patients.remark_spec" name="Patients::Remark is expected to validate that :remark_type is either ‹&quot;general&quot;›, ‹&quot;diabetes&quot;›, ‹&quot;esrd&quot;›, ‹&quot;dnr_code_0&quot;›, ‹&quot;dnr_code_1&quot;›, ‹&quot;dnr_code_2&quot;›, ‹&quot;dnr_code_3&quot;›, or ‹&quot;ultrafiltration&quot;›" file="./spec/models/patients/remark_spec.rb" time="0.014713"></testcase>
<testcase classname="spec.models.patients.remark_spec" name="Patients::Remark is expected to belong to patient required: true" file="./spec/models/patients/remark_spec.rb" time="0.003903"></testcase>
<testcase classname="spec.models.patients.remark_spec" name="Patients::Remark is expected to validate that :category is either ‹&quot;general&quot;›, ‹&quot;care_trajectory&quot;›, ‹&quot;dnr&quot;›, or ‹&quot;fluid_balance&quot;›" file="./spec/models/patients/remark_spec.rb" time="0.008253"></testcase>
<testcase classname="spec.models.patients.remark_spec" name="Patients::Remark is expected to validate inclusion of type in category" file="./spec/models/patients/remark_spec.rb" time="0.010210"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient updates an existing address" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.070002"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient accepts changing the address type" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.066956"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient updates note for an existing address" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.066644"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.058991"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient updating a patient&apos;s legal domicile succeeds" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.067747"></testcase>
<testcase classname="spec.requests.patients.update_address_for_patient_spec" name="UpdateAddressForPatient updating a patient&apos;s legal domicile when manual patient management is disabled fails" file="./spec/requests/patients/update_address_for_patient_spec.rb" time="0.065313"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes common fields correctly" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.179920"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes stock correctly on dialysis stock" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.198780"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes service correctly on service billing" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.194438"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes service correctly on patient billing" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.208147"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes stock correctly on central stock" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.194322"></testcase>
<testcase classname="spec.adapters.medications.medication_administration_adapter_spec" name="Medications::MedicationAdministrationAdapter serializes stock correctly on no stock" file="./spec/adapters/medications/medication_administration_adapter_spec.rb" time="0.181833"></testcase>
<testcase classname="spec.models.concerns.indestructible_spec" name="Indestructible an indestructible record #destroy! prevents destroying the record" file="./spec/models/concerns/indestructible_spec.rb" time="0.028722"></testcase>
<testcase classname="spec.models.concerns.indestructible_spec" name="Indestructible an indestructible record #destroy prevents destroying the record" file="./spec/models/concerns/indestructible_spec.rb" time="0.002540"></testcase>
<testcase classname="spec.models.medications.product_prescribable_unit_spec" name="Medications::ProductPrescribableUnit is expected to belong to product required: true" file="./spec/models/medications/product_prescribable_unit_spec.rb" time="0.006883"></testcase>
<testcase classname="spec.models.medications.product_prescribable_unit_spec" name="Medications::ProductPrescribableUnit is expected to belong to unit required: true" file="./spec/models/medications/product_prescribable_unit_spec.rb" time="0.005720"></testcase>
<testcase classname="spec.requests.patients.update_weight_spec" name="UpdateWeight returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_weight_spec.rb" time="0.054710"></testcase>
<testcase classname="spec.requests.patients.update_weight_spec" name="UpdateWeight returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/update_weight_spec.rb" time="0.031422"></testcase>
<testcase classname="spec.requests.patients.update_weight_spec" name="UpdateWeight updates an existing weight" file="./spec/requests/patients/update_weight_spec.rb" time="0.065970"></testcase>
<testcase classname="spec.requests.infrastructure.get_room_status_spec" name="Rooms GetRoomStatus return not found if room doesn&apos;t exist" file="./spec/requests/infrastructure/get_room_status_spec.rb" time="0.030803"></testcase>
<testcase classname="spec.requests.infrastructure.get_room_status_spec" name="Rooms GetRoomStatus returns the room status" file="./spec/requests/infrastructure/get_room_status_spec.rb" time="2.050061"></testcase>
<testcase classname="spec.requests.infrastructure.get_room_status_spec" name="Rooms GetRoomStatus requires authorization" file="./spec/requests/infrastructure/get_room_status_spec.rb" time="0.028465"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results requires an authorized user" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.082940"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results returns lab results ordered newest first" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.136908"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results returns lab results" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.126452"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results returns lab results for a specific period" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.148910"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results returns no results when patient has no lab results" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.104365"></testcase>
<testcase classname="spec.requests.laboratory.get_lab_results_for_patient_spec" name="Laboratory results returns no results when subset query parameter is invalid" file="./spec/requests/laboratory/get_lab_results_for_patient_spec.rb" time="0.090938"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.027361"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when showing a unit dialect returns the requested unit dialect" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.042436"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when deleting an unit dialect the dialect unit should be hard removed" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.035601"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when updating a unit dialect returns not found (404) if the unit dialect doesn&apos;t exist" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.024492"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when updating a unit dialect returns the updated unit dialect" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.036778"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when creating an unit dialect returns a fault when the internal unit is not known in the system" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.060533"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when creating an unit dialect returns the created unit dialect" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.031137"></testcase>
<testcase classname="spec.requests.laboratory.unit_dialect_spec" name="Unit dialect GetLabSystems when fetching all unit dialects returns all unit dialects" file="./spec/requests/laboratory/unit_dialect_spec.rb" time="0.028856"></testcase>
<testcase classname="spec.integrations.executions.reports.autodialysis_spec" name="Asynchronous reports: autodialysis generates the report" file="./spec/integrations/executions/reports/autodialysis_spec.rb" time="0.556926"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/package_spec.rb" time="0.009615"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to belong to form optional: true" file="./spec/models/medications/package_spec.rb" time="0.005239"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to validate that :quantity looks like an integer" file="./spec/models/medications/package_spec.rb" time="0.007500"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to validate that :state cannot be empty/falsy" file="./spec/models/medications/package_spec.rb" time="0.009356"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to belong to source required: true" file="./spec/models/medications/package_spec.rb" time="0.005773"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/package_spec.rb" time="0.008390"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to have many prices dependent =&gt; destroy" file="./spec/models/medications/package_spec.rb" time="0.004356"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to validate that :quantity cannot be empty/falsy" file="./spec/models/medications/package_spec.rb" time="0.007496"></testcase>
<testcase classname="spec.models.medications.package_spec" name="Medications::Package is expected to belong to product required: true" file="./spec/models/medications/package_spec.rb" time="0.006445"></testcase>
<testcase classname="spec.migrations.20191203103015_add_billing_code_type_to_billing_item_spec" name="AddBillingCodeTypeToBillingItem splits billing items with fee and forfait code" file="./spec/migrations/20191203103015_add_billing_code_type_to_billing_item_spec.rb" time="0.255741"></testcase>
<testcase classname="spec.migrations.20191203103015_add_billing_code_type_to_billing_item_spec" name="AddBillingCodeTypeToBillingItem assigns the newly created billing items to existing exportables" file="./spec/migrations/20191203103015_add_billing_code_type_to_billing_item_spec.rb" time="0.402914"></testcase>
<testcase classname="spec.migrations.20191203103015_add_billing_code_type_to_billing_item_spec" name="AddBillingCodeTypeToBillingItem does not split billing items with only fee code" file="./spec/migrations/20191203103015_add_billing_code_type_to_billing_item_spec.rb" time="0.164050"></testcase>
<testcase classname="spec.migrations.20191203103015_add_billing_code_type_to_billing_item_spec" name="AddBillingCodeTypeToBillingItem does not split billing items without billing code" file="./spec/migrations/20191203103015_add_billing_code_type_to_billing_item_spec.rb" time="0.385237"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes UTC time zone correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.179333"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes time without time zone correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.163404"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes medication type correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.320539"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes billing_code/billing_code_type field correctly on fee billing item" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.171074"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes billing_code/billing_code_type field correctly on medication billing item" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.325650"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes non-UTC time zone correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.177820"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes common fields correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.166814"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes order type correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.188917"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes billing_code/billing_code_type field correctly on forfait billing item" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.167336"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes case_id/admission_id fields correctly on out patient" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.175967"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes case_id/admission_id fields correctly on in patient" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.162887"></testcase>
<testcase classname="spec.adapters.billing.item_adapter_spec" name="Billing::ItemAdapter serializes session type correctly" file="./spec/adapters/billing/item_adapter_spec.rb" time="0.224155"></testcase>
<testcase classname="spec.models.requests.schedule_spec" name="Requests::Schedule is expected to validate that :started_at cannot be empty/falsy" file="./spec/models/requests/schedule_spec.rb" time="0.007875"></testcase>
<testcase classname="spec.requests.exports.create_exportable_spec" name="Create exportable returns unprocessable entity (422) when using invalid parameters" file="./spec/requests/exports/create_exportable_spec.rb" time="0.031073"></testcase>
<testcase classname="spec.requests.exports.create_exportable_spec" name="Create exportable returns created (201) and the exportable" file="./spec/requests/exports/create_exportable_spec.rb" time="0.035699"></testcase>
<testcase classname="spec.requests.exports.create_exportable_spec" name="Create exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/create_exportable_spec.rb" time="0.024621"></testcase>
<testcase classname="spec.requests.exports.create_exportable_spec" name="Create exportable returns created (201) and a draft record when trying to create a ready record" file="./spec/requests/exports/create_exportable_spec.rb" time="0.029180"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals update fails when scope is not valid" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.092544"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals updates an existing journal entry&apos;s scope" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.096702"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals return forbidden (403) if the user only has manage rights for other journals" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.089921"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals update fails when no scope is specified" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.128556"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals return forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.103301"></testcase>
<testcase classname="spec.requests.journal.update_journal_scope_spec" name="UpdateJournalJournals return forbidden (403) if the user only has read rights" file="./spec/requests/journal/update_journal_scope_spec.rb" time="0.088357"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_history_spec" name="Medications GetMedicationHistory returns an ordered list of product medications" file="./spec/requests/medications/get_intradialytic_medication_history_spec.rb" time="0.293423"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_history_spec" name="Medications GetMedicationHistory denies getting history if not granted" file="./spec/requests/medications/get_intradialytic_medication_history_spec.rb" time="0.091060"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_history_spec" name="Medications GetMedicationHistory returns a list of magistral preparationss" file="./spec/requests/medications/get_intradialytic_medication_history_spec.rb" time="0.104875"></testcase>
<testcase classname="spec.models.charts.blood_pressure_evolution_spec" name="Charts::BloodPressureEvolution#call returns systolic and diastolic blood pressure data points" file="./spec/models/charts/blood_pressure_evolution_spec.rb" time="0.101549"></testcase>
<testcase classname="spec.requests.report_templates.get_report_template_spec" name="Get record template gets a tlf file of report" file="./spec/requests/report_templates/get_report_template_spec.rb" time="0.032436"></testcase>
<testcase classname="spec.requests.report_templates.get_report_template_spec" name="Get record template returns an error when unauthorized" file="./spec/requests/report_templates/get_report_template_spec.rb" time="0.025722"></testcase>
<testcase classname="spec.requests.report_templates.get_report_template_spec" name="Get record template returns 404 when the record isn&apos;t present" file="./spec/requests/report_templates/get_report_template_spec.rb" time="0.026632"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns unprocessable entity (422) when trying to modify a ready record" file="./spec/requests/exports/update_exportable_spec.rb" time="0.034170"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/update_exportable_spec.rb" time="0.030100"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns unprocessable entity (422) when trying to modify an exported record" file="./spec/requests/exports/update_exportable_spec.rb" time="0.031395"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns success (200) and the exportable" file="./spec/requests/exports/update_exportable_spec.rb" time="0.043154"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns not found (404) if the exportable is not found" file="./spec/requests/exports/update_exportable_spec.rb" time="0.029050"></testcase>
<testcase classname="spec.requests.exports.update_exportable_spec" name="Update exportable returns unprocessable entity (422) when using invalid parameters" file="./spec/requests/exports/update_exportable_spec.rb" time="0.082114"></testcase>
<testcase classname="spec.requests.sessions.update_session_prescription_spec" name="UpdateSessionPrescription returns success (200) if thesession prescription is updated" file="./spec/requests/sessions/update_session_prescription_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.requests.sessions.update_session_prescription_spec" name="UpdateSessionPrescription returns errors if update failed" file="./spec/requests/sessions/update_session_prescription_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.requests.sessions.update_session_prescription_spec" name="UpdateSessionPrescription returns not found (404) if the session prescription cannot be found" file="./spec/requests/sessions/update_session_prescription_spec.rb" time="0.000004"><skipped/></testcase>
<testcase classname="spec.requests.sessions.update_session_prescription_spec" name="UpdateSessionPrescription returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/update_session_prescription_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord is expected to belong to patient required: true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.004155"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_exact returns matching patient_ids based on attending_doctor_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.152464"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_exact returns matching patient_ids based on sex" file="./spec/models/patients/patient_master_record_spec.rb" time="0.173194"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_exact freturns matching patient_ids based on transport_back_type" file="./spec/models/patients/patient_master_record_spec.rb" time="0.180643"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_exact returns matching patient_ids based on transport_forth_type" file="./spec/models/patients/patient_master_record_spec.rb" time="0.216308"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_wounds returns matching patient_ids when has_wounds param is given and is false" file="./spec/models/patients/patient_master_record_spec.rb" time="0.183014"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_wounds returns matching patient_ids when has_wounds param is given and is true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.186297"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_active_order does not find patient_ids where the timespan of an active recuring order does not match" file="./spec/models/patients/patient_master_record_spec.rb" time="0.174719"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_active_order distincts records on patient_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.204596"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_active_order does not find patient_ids where the timespan of an active onetime order does not match" file="./spec/models/patients/patient_master_record_spec.rb" time="0.209191"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_active_order returns matching patient_ids  for a given active one time order" file="./spec/models/patients/patient_master_record_spec.rb" time="0.180515"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_active_order returns matching patient_ids for a given active recuring order" file="./spec/models/patients/patient_master_record_spec.rb" time="0.168532"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_allergies returns matching patient_ids when has_allergies param is given and is false" file="./spec/models/patients/patient_master_record_spec.rb" time="0.173951"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_allergies returns matching patient_ids when has_allergies param is given and is true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.168739"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_diets returns matching patient_ids when has_diets param is give and is true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.180198"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_diets returns matching patient_ids when has_diets param is give and is false" file="./spec/models/patients/patient_master_record_spec.rb" time="0.185384"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when to birthdate param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.182809"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns all patient_ids when no birthdate params are given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.183153"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when from and to birthdate param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.178362"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns a MismatchDatesError when from date &gt; to date" file="./spec/models/patients/patient_master_record_spec.rb" time="0.055806"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when from birthdate param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.200889"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns all patient_ids when no dialysis_since params are given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.169358"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when to dialysis_since param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.171836"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when from dialysis_since param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.184259"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_patient_range returns matching patient_ids when from and to dialysis_since param is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.192771"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_room_id returns matching patient_ids for a given planning_room_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.214407"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_room_id distincts records on patient_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.275005"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_hdf_treatment returns matching patient_ids with hdf treatment" file="./spec/models/patients/patient_master_record_spec.rb" time="0.194545"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_shift_id distincts records on patient_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.266871"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_shift_id returns matching patient_ids for a given planning_shift_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.249129"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_enrolled returns matching patient_ids when has_wounds param is given and is false" file="./spec/models/patients/patient_master_record_spec.rb" time="0.144511"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_enrolled returns matching patient_ids when is_enrolled param is given and is true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.168025"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_day distincts records on patient_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.289140"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_planning_day returns matching patient_ids for a given planning_day" file="./spec/models/patients/patient_master_record_spec.rb" time="0.225047"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_infections returns matching patient_ids when has_infections param is given and is false" file="./spec/models/patients/patient_master_record_spec.rb" time="0.171813"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_infections returns matching patient_ids when has_infections param is given and is true" file="./spec/models/patients/patient_master_record_spec.rb" time="0.179592"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_permanently_removed_catheter is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.266029"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_available_graft is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.276740"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_unavailable_graft is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.252784"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_available_catheter is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.257545"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_unavailable_catheter is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.253539"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_unavailable_fistula is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.245439"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_temporary_catheter is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.275442"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_permanently_removed_graft is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.237774"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_available_fistula is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.265081"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_permanent_catheter is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.246484"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_site returns matching patient_ids when site_permanently_removed_fistula is given" file="./spec/models/patients/patient_master_record_spec.rb" time="0.257612"></testcase>
<testcase classname="spec.models.patients.patient_master_record_spec" name="Patients::PatientMasterRecord.by_medicinal_product_id returns matching patient_ids for a given medicinal_product_id" file="./spec/models/patients/patient_master_record_spec.rb" time="0.327462"></testcase>
<testcase classname="spec.requests.search_codes_spec" name="Search Codes returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/search_codes_spec.rb" time="0.024921"></testcase>
<testcase classname="spec.requests.search_codes_spec" name="Search Codes can limit the result" file="./spec/requests/search_codes_spec.rb" time="0.047109"></testcase>
<testcase classname="spec.requests.search_codes_spec" name="Search Codes returns an list of codes when no query is given" file="./spec/requests/search_codes_spec.rb" time="0.043911"></testcase>
<testcase classname="spec.requests.search_codes_spec" name="Search Codes returns the list filtered by code or description" file="./spec/requests/search_codes_spec.rb" time="0.056245"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_acl_spec" name="DeleteCenterAcl returns not_found (404) if the center acl isn&apos;t found" file="./spec/requests/infrastructure/delete_center_acl_spec.rb" time="0.034670"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_acl_spec" name="DeleteCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/delete_center_acl_spec.rb" time="0.056361"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_acl_spec" name="DeleteCenterAcl deletes the user&apos;s center acl" file="./spec/requests/infrastructure/delete_center_acl_spec.rb" time="0.069872"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have an attachment named avatar" file="./spec/models/patients/patient_spec.rb" time="0.002686"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :sex cannot be empty/falsy" file="./spec/models/patients/patient_spec.rb" time="0.010085"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient has default avatar" file="./spec/models/patients/patient_spec.rb" time="0.010235"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :sex is either ‹&quot;M&quot;›, ‹&quot;F&quot;›, ‹&quot;O&quot;›, or ‹&quot;U&quot;›" file="./spec/models/patients/patient_spec.rb" time="0.016075"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient formats the national idenfication number correctly" file="./spec/models/patients/patient_spec.rb" time="0.009367"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many intradialytic_medication_prescriptions" file="./spec/models/patients/patient_spec.rb" time="0.002516"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many orders" file="./spec/models/patients/patient_spec.rb" time="0.001895"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many absences" file="./spec/models/patients/patient_spec.rb" time="0.001667"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many home_medication_prescriptions" file="./spec/models/patients/patient_spec.rb" time="0.001883"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :renal_failure_type is either ‹&quot;chronic&quot;› or ‹&quot;acute&quot;› as long as it is not nil" file="./spec/models/patients/patient_spec.rb" time="0.009394"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many deviations" file="./spec/models/patients/patient_spec.rb" time="0.002580"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many allergies" file="./spec/models/patients/patient_spec.rb" time="0.001829"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many ultrafiltration_volume_adjustments" file="./spec/models/patients/patient_spec.rb" time="0.001716"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :first_name cannot be empty/falsy" file="./spec/models/patients/patient_spec.rb" time="0.009553"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many infections" file="./spec/models/patients/patient_spec.rb" time="0.001890"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :diabetes_type is either ‹&quot;none&quot;›, ‹&quot;prediabetes&quot;›, ‹&quot;diabetes_type_1&quot;›, ‹&quot;diabetes_type_2&quot;›, or ‹&quot;other&quot;› as long as it is not nil" file="./spec/models/patients/patient_spec.rb" time="0.015849"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many patient_attachments" file="./spec/models/patients/patient_spec.rb" time="0.001804"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :last_name cannot be empty/falsy" file="./spec/models/patients/patient_spec.rb" time="0.010111"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many patient_diagnoses" file="./spec/models/patients/patient_spec.rb" time="0.001755"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many sessions" file="./spec/models/patients/patient_spec.rb" time="0.001930"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many patient_treatments" file="./spec/models/patients/patient_spec.rb" time="0.001864"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many schemas" file="./spec/models/patients/patient_spec.rb" time="0.001729"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to validate that :birthdate cannot be empty/falsy" file="./spec/models/patients/patient_spec.rb" time="0.007472"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many patient_transplant_eligibility_statuses" file="./spec/models/patients/patient_spec.rb" time="0.001558"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many weights" file="./spec/models/patients/patient_spec.rb" time="0.001779"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many addresses" file="./spec/models/patients/patient_spec.rb" time="0.001548"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have many remarks" file="./spec/models/patients/patient_spec.rb" time="0.001666"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient is expected to have carbon :id, :hospital_id, :case_id, :first_name, :last_name, :birthdate, and :sex" file="./spec/models/patients/patient_spec.rb" time="0.001752"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#avatar_url returns a fully qualified URL" file="./spec/models/patients/patient_spec.rb" time="0.014966"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#predialysis? returns `false` if the patient recieves acute care" file="./spec/models/patients/patient_spec.rb" time="0.009307"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#predialysis? returns `false` if the patient recieves chronic care and dialysis has been initiated" file="./spec/models/patients/patient_spec.rb" time="0.008105"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#predialysis? returns `true` if the patient recieves chronic care and not dialysis has been initiated" file="./spec/models/patients/patient_spec.rb" time="0.008843"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#acute? returns `true` if the patient recieves acute care" file="./spec/models/patients/patient_spec.rb" time="0.008611"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#acute? returns `false` if the patient recieves chronic care" file="./spec/models/patients/patient_spec.rb" time="0.009071"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#chronic? returns `false` if the patient recieves acute care" file="./spec/models/patients/patient_spec.rb" time="0.008507"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#chronic? returns `true` if the patient recieves chronic care" file="./spec/models/patients/patient_spec.rb" time="0.007914"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#last_n_sessions returns the patient&apos;s last n sessions" file="./spec/models/patients/patient_spec.rb" time="0.491652"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#domicile_address returns the patient&apos;s domicile" file="./spec/models/patients/patient_spec.rb" time="0.038256"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#care_type when acute isn&apos;t applicable" file="./spec/models/patients/patient_spec.rb" time="0.014848"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#care_type when chronic is applicable" file="./spec/models/patients/patient_spec.rb" time="0.020812"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient.without_ongoing_session " file="./spec/models/patients/patient_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient.not_enrolled " file="./spec/models/patients/patient_spec.rb" time="0.000006"><skipped/></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#transport_types_identical? when back_transport_type is nil is expected to be transport types identical" file="./spec/models/patients/patient_spec.rb" time="0.012362"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#transport_types_identical? when forth_transport_type and back_transport_type are equal is expected to be transport types identical" file="./spec/models/patients/patient_spec.rb" time="0.010587"></testcase>
<testcase classname="spec.models.patients.patient_spec" name="Patients::Patient#transport_types_identical? when forth_transport_type and back_transport_type are not equal is expected not to be transport types identical" file="./spec/models/patients/patient_spec.rb" time="0.014577"></testcase>
<testcase classname="spec.requests.measurements.measurement_forms_spec" name="MeasurementForms doesn&apos;t support certain types of measurements" file="./spec/requests/measurements/measurement_forms_spec.rb" time="0.027039"></testcase>
<testcase classname="spec.requests.measurements.measurement_forms_spec" name="MeasurementForms returns a measurement&apos;s form" file="./spec/requests/measurements/measurement_forms_spec.rb" time="0.045515"></testcase>
<testcase classname="spec.requests.measurements.measurement_forms_spec" name="MeasurementForms requires proper authorization" file="./spec/requests/measurements/measurement_forms_spec.rb" time="0.025649"></testcase>
<testcase classname="spec.requests.auth.krb.create_authentication_spec" name="Create authentication returns unauthorized (401) if user doesn&apos;t exist" file="./spec/requests/auth/krb/create_authentication_spec.rb" time="0.035357"></testcase>
<testcase classname="spec.requests.auth.krb.create_authentication_spec" name="Create authentication returns unauthorized (401) if there&apos;s no remote user header provided" file="./spec/requests/auth/krb/create_authentication_spec.rb" time="0.024807"></testcase>
<testcase classname="spec.requests.auth.krb.create_authentication_spec" name="Create authentication returns unauthorized (401) if the user was soft deleted" file="./spec/requests/auth/krb/create_authentication_spec.rb" time="0.050498"></testcase>
<testcase classname="spec.requests.auth.krb.create_authentication_spec" name="Create authentication returns created (201) and a JWT" file="./spec/requests/auth/krb/create_authentication_spec.rb" time="0.034202"></testcase>
<testcase classname="spec.requests.devices.get_device_summary_spec" name="device_summaries returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_device_summary_spec.rb" time="0.061566"></testcase>
<testcase classname="spec.requests.devices.get_device_summary_spec" name="device_summaries returns device summary" file="./spec/requests/devices/get_device_summary_spec.rb" time="0.063408"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustments_spec" name="GET /patients/:patient_id/ultrafiltration_volume_adjustments returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/get_ultrafiltration_volume_adjustments_spec.rb" time="0.076921"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustments_spec" name="GET /patients/:patient_id/ultrafiltration_volume_adjustments returns a list of ultrafiltration volume adjustments" file="./spec/requests/patients/get_ultrafiltration_volume_adjustments_spec.rb" time="0.098680"></testcase>
<testcase classname="spec.requests.patients.get_ultrafiltration_volume_adjustments_spec" name="GET /patients/:patient_id/ultrafiltration_volume_adjustments returns an empty list if no ultrafiltration volume adjustments exist" file="./spec/requests/patients/get_ultrafiltration_volume_adjustments_spec.rb" time="0.081086"></testcase>
<testcase classname="spec.requests.patients.delete_remark_for_patient_spec" name="DeleteRemarkForPatient deletes an existing remark" file="./spec/requests/patients/delete_remark_for_patient_spec.rb" time="0.061151"></testcase>
<testcase classname="spec.requests.patients.delete_remark_for_patient_spec" name="DeleteRemarkForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_remark_for_patient_spec.rb" time="0.082136"></testcase>
<testcase classname="spec.models.exports.exporters.patient_master_record_spec" name="Exports::Exporters::PatientMasterRecord includes patients when the relevant parameter is passed" file="./spec/models/exports/exporters/patient_master_record_spec.rb" time="0.236700"></testcase>
<testcase classname="spec.models.exports.exporters.patient_master_record_spec" name="Exports::Exporters::PatientMasterRecord excludes patients when the relevant parameter is passed" file="./spec/models/exports/exporters/patient_master_record_spec.rb" time="0.239500"></testcase>
<testcase classname="spec.models.exports.exporters.patient_master_record_spec" name="Exports::Exporters::PatientMasterRecord filters patients by is_enrolled when the relevant parameter is passed" file="./spec/models/exports/exporters/patient_master_record_spec.rb" time="0.223450"></testcase>
<testcase classname="spec.models.exports.exporters.patient_master_record_spec" name="Exports::Exporters::PatientMasterRecord contains patient master records" file="./spec/models/exports/exporters/patient_master_record_spec.rb" time="0.228029"></testcase>
<testcase classname="spec.requests.patients.create_emergency_enrollment_spec" name="EmergencyEnrollments when creating an emergency enrollment success when authorized" file="./spec/requests/patients/create_emergency_enrollment_spec.rb" time="0.086924"></testcase>
<testcase classname="spec.requests.patients.create_emergency_enrollment_spec" name="EmergencyEnrollments when creating an emergency enrollment fails when unauthorised" file="./spec/requests/patients/create_emergency_enrollment_spec.rb" time="0.042604"></testcase>
<testcase classname="spec.models.executions.services.purge_spec" name="Executions::Services::Purge purges expired executions" file="./spec/models/executions/services/purge_spec.rb" time="0.180398"></testcase>
<testcase classname="spec.requests.devices.create_device_attachment_spec" name="Devices::Device returns success (200) and the created device" file="./spec/requests/devices/create_device_attachment_spec.rb" time="0.120123"></testcase>
<testcase classname="spec.requests.devices.create_device_attachment_spec" name="Devices::Device returns unprocessable entity (422) if the attachment is not a supported type" file="./spec/requests/devices/create_device_attachment_spec.rb" time="0.248279"></testcase>
<testcase classname="spec.requests.devices.create_device_attachment_spec" name="Devices::Device audits the create action" file="./spec/requests/devices/create_device_attachment_spec.rb" time="0.109978"></testcase>
<testcase classname="spec.requests.devices.create_device_attachment_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/create_device_attachment_spec.rb" time="0.050544"></testcase>
<testcase classname="spec.requests.devices.create_device_attachment_spec" name="Devices::Device returns forbidden (404) if the attachment is not found" file="./spec/requests/devices/create_device_attachment_spec.rb" time="0.036993"></testcase>
<testcase classname="spec.models.configurations.float_spec" name="Configurations::Float casts to float" file="./spec/models/configurations/float_spec.rb" time="0.006926"></testcase>
<testcase classname="spec.requests.wounds.get_wound_spec" name="GetWound returns the wound" file="./spec/requests/wounds/get_wound_spec.rb" time="0.058901"></testcase>
<testcase classname="spec.requests.wounds.get_wound_spec" name="GetWound returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wound_spec.rb" time="0.064013"></testcase>
<testcase classname="spec.requests.wounds.get_wound_spec" name="GetWound returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/get_wound_spec.rb" time="0.026441"></testcase>
<testcase classname="spec.adapters.users.user_adapter_spec" name="Users::UserAdapter serializes correctly" file="./spec/adapters/users/user_adapter_spec.rb" time="0.012830"></testcase>
<testcase classname="spec.models.medications.magistral_preparation_spec" name="Medications::MagistralPreparation is expected to validate that :formula cannot be empty/falsy" file="./spec/models/medications/magistral_preparation_spec.rb" time="0.010354"></testcase>
<testcase classname="spec.models.medications.magistral_preparation_spec" name="Medications::MagistralPreparation is expected to validate that :form cannot be empty/falsy" file="./spec/models/medications/magistral_preparation_spec.rb" time="0.010009"></testcase>
<testcase classname="spec.models.medications.magistral_preparation_spec" name="Medications::MagistralPreparation validate uniqueness of magistral preparation" file="./spec/models/medications/magistral_preparation_spec.rb" time="0.018595"></testcase>
<testcase classname="spec.models.medications.magistral_preparation_spec" name="Medications::MagistralPreparation is expected to validate that :dose cannot be empty/falsy" file="./spec/models/medications/magistral_preparation_spec.rb" time="0.010357"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable discard callbacks runs callbacks in correct order" file="./spec/models/concerns/discardable_spec.rb" time="0.018917"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable discard callbacks before_discard can prevent discard" file="./spec/models/concerns/discardable_spec.rb" time="0.004704"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable discard callbacks before_discard can allow discard" file="./spec/models/concerns/discardable_spec.rb" time="0.006785"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable discard callbacks before_discard #discard! raises Discardable::RecordNotDiscarded" file="./spec/models/concerns/discardable_spec.rb" time="0.004677"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.discard_all! can discard all posts" file="./spec/models/concerns/discardable_spec.rb" time="0.034791"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.016112"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is kept?" file="./spec/models/concerns/discardable_spec.rb" time="0.004417"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is included in undiscarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.006172"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is not discarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.004830"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.006886"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is not included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005916"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post is undiscarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.004862"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post #discard sets deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.024308"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post #discard sets deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.009571"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post #undiscard doesn&apos;t change deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.006089"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name an undiscarded Post #undiscard doesn&apos;t change deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.008504"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is discarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.005503"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is not included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005524"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005397"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is not undiscarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.005121"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005907"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is not kept?" file="./spec/models/concerns/discardable_spec.rb" time="0.006221"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post is not included in undiscarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005983"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post #undiscard clears deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.009725"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post #undiscard clears deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.006796"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post #discard doesn&apos;t change deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.005757"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with custom column name discarded Post #discard doesn&apos;t change deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.004446"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope a discarded record is included in with_discarded.discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.025163"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope a discarded record is included in with_discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.008304"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope a discarded record is not included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.007821"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope a discarded record is not included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005551"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope a discarded record is not included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005249"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope an undiscarded record is included in with_discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.008757"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope an undiscarded record is included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.011213"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope an undiscarded record is included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.009185"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope an undiscarded record is not included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.005806"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with default scope an undiscarded record is included in undiscarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.006136"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.023080"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is not included in undiscarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.007200"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is not included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.008699"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is discarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.006838"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is not undiscarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.006231"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.007359"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post is not kept?" file="./spec/models/concerns/discardable_spec.rb" time="0.005503"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #undiscard clears deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.014560"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #undiscard clears deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.011490"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #undiscard! clears deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.015267"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #undiscard! clears deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.009948"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #discard doesn&apos;t change deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.007704"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #discard doesn&apos;t change deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.007228"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model discarded Post #discard! raises Discardable::RecordNotDiscarded" file="./spec/models/concerns/discardable_spec.rb" time="0.006985"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is expected not to be discarded" file="./spec/models/concerns/discardable_spec.rb" time="0.006613"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is included in kept scope" file="./spec/models/concerns/discardable_spec.rb" time="0.009008"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is undiscarded?" file="./spec/models/concerns/discardable_spec.rb" time="0.006542"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is included in undiscarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.013111"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is not included in discarded scope" file="./spec/models/concerns/discardable_spec.rb" time="0.004751"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is kept?" file="./spec/models/concerns/discardable_spec.rb" time="0.004871"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post is included in the default scope" file="./spec/models/concerns/discardable_spec.rb" time="0.008624"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #discard! sets deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.010628"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #discard! sets deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.011858"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #discard sets deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.010726"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #discard sets deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.017604"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #undiscard doesn&apos;t change deleted_at in DB" file="./spec/models/concerns/discardable_spec.rb" time="0.006993"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #undiscard doesn&apos;t change deleted_at" file="./spec/models/concerns/discardable_spec.rb" time="0.003632"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable with simple Post model an undiscarded Post #undiscard! raises Discardable::RecordNotUndiscarded" file="./spec/models/concerns/discardable_spec.rb" time="0.003741"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable undiscard callbacks runs callbacks in correct order" file="./spec/models/concerns/discardable_spec.rb" time="0.056762"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable undiscard callbacks before_undiscard can allow undiscard" file="./spec/models/concerns/discardable_spec.rb" time="0.008359"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable undiscard callbacks before_undiscard can prevent undiscard" file="./spec/models/concerns/discardable_spec.rb" time="0.005748"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable undiscard callbacks before_undiscard #undiscard! raises Discardable::RecordNotDiscarded" file="./spec/models/concerns/discardable_spec.rb" time="0.006456"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.discard_all can discard no records" file="./spec/models/concerns/discardable_spec.rb" time="0.025591"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.discard_all can discard a single post" file="./spec/models/concerns/discardable_spec.rb" time="0.016973"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.discard_all can discard all posts" file="./spec/models/concerns/discardable_spec.rb" time="0.022421"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.discard_all through a collection can discard all related posts" file="./spec/models/concerns/discardable_spec.rb" time="0.081102"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.undiscard_all! can undiscard all posts" file="./spec/models/concerns/discardable_spec.rb" time="0.030997"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.undiscard_all can undiscard all posts" file="./spec/models/concerns/discardable_spec.rb" time="0.026563"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.undiscard_all can undiscard a single post" file="./spec/models/concerns/discardable_spec.rb" time="0.014291"></testcase>
<testcase classname="spec.models.concerns.discardable_spec" name="Discardable.undiscard_all can undiscard no records" file="./spec/models/concerns/discardable_spec.rb" time="0.018584"></testcase>
<testcase classname="spec.lib.validators.min_value_validator_spec" name="Validators::MinValueValidator accepts values equal to min" file="./spec/lib/validators/min_value_validator_spec.rb" time="0.001609"></testcase>
<testcase classname="spec.lib.validators.min_value_validator_spec" name="Validators::MinValueValidator rejects values lower than min" file="./spec/lib/validators/min_value_validator_spec.rb" time="0.002198"></testcase>
<testcase classname="spec.lib.validators.min_value_validator_spec" name="Validators::MinValueValidator accepts values greater than min" file="./spec/lib/validators/min_value_validator_spec.rb" time="0.001599"></testcase>
<testcase classname="spec.requests.devices.delete_device_attachment_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/delete_device_attachment_spec.rb" time="0.093158"></testcase>
<testcase classname="spec.requests.devices.delete_device_attachment_spec" name="Devices::Device audits the destroy action" file="./spec/requests/devices/delete_device_attachment_spec.rb" time="0.101350"></testcase>
<testcase classname="spec.requests.devices.delete_device_attachment_spec" name="Devices::Device returns success (200)" file="./spec/requests/devices/delete_device_attachment_spec.rb" time="0.108534"></testcase>
<testcase classname="spec.requests.devices.delete_device_attachment_spec" name="Devices::Device returns not found (404) if the device attachment is not found" file="./spec/requests/devices/delete_device_attachment_spec.rb" time="0.086666"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights is not allowed to promote someone to it_admin without being one" file="./spec/requests/users/update_role_rights_spec.rb" time="0.039239"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights is allowed to remove someones it_admin rights when being one" file="./spec/requests/users/update_role_rights_spec.rb" time="0.045179"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights updates only the rights for the relevant scope" file="./spec/requests/users/update_role_rights_spec.rb" time="0.051978"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights is allowed to promote someone to it_admin when being one" file="./spec/requests/users/update_role_rights_spec.rb" time="0.045262"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights removes only the rights for the relevant scope" file="./spec/requests/users/update_role_rights_spec.rb" time="0.043726"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights updated only valid rights" file="./spec/requests/users/update_role_rights_spec.rb" time="0.037747"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights requires scope parameter" file="./spec/requests/users/update_role_rights_spec.rb" time="0.032472"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights requires authorization" file="./spec/requests/users/update_role_rights_spec.rb" time="0.032009"></testcase>
<testcase classname="spec.requests.users.update_role_rights_spec" name="UpdateRoleRights is not allowed to remove someones it_admin rights without being one" file="./spec/requests/users/update_role_rights_spec.rb" time="0.042301"></testcase>
<testcase classname="spec.requests.medications.standing_orders.delete_standing_order_spec" name="DeleteStandingOrder deletes a product standing order" file="./spec/requests/medications/standing_orders/delete_standing_order_spec.rb" time="0.084007"></testcase>
<testcase classname="spec.requests.medications.standing_orders.delete_standing_order_spec" name="DeleteStandingOrder returns (403) if the user isn&apos;t authorized" file="./spec/requests/medications/standing_orders/delete_standing_order_spec.rb" time="0.064394"></testcase>
<testcase classname="spec.requests.medications.standing_orders.delete_standing_order_spec" name="DeleteStandingOrder deletes a magistral standing order" file="./spec/requests/medications/standing_orders/delete_standing_order_spec.rb" time="0.084348"></testcase>
<testcase classname="spec.requests.medications.standing_orders.delete_standing_order_spec" name="DeleteStandingOrder returns (404) if the standing order cannot be found" file="./spec/requests/medications/standing_orders/delete_standing_order_spec.rb" time="0.053514"></testcase>
<testcase classname="spec.models.ultrafiltration_calculation.record_spec" name="UltrafiltrationCalculation::Record is expected to belong to user required: true" file="./spec/models/ultrafiltration_calculation/record_spec.rb" time="0.003973"></testcase>
<testcase classname="spec.models.ultrafiltration_calculation.record_spec" name="UltrafiltrationCalculation::Record is expected to belong to session required: true" file="./spec/models/ultrafiltration_calculation/record_spec.rb" time="0.003208"></testcase>
<testcase classname="spec.models.ultrafiltration_calculation.record_spec" name="UltrafiltrationCalculation::Record.latest_for(session:) returns the latest calculation for a given session" file="./spec/models/ultrafiltration_calculation/record_spec.rb" time="0.115515"></testcase>
<testcase classname="spec.models.medications.requests.intradialytic_spec" name="Medications::Requests::Intradialytic is expected to validate that :scheduled_at cannot be empty/falsy" file="./spec/models/medications/requests/intradialytic_spec.rb" time="0.049564"></testcase>
<testcase classname="spec.requests.infrastructure.get_services_spec" name="Infrastructure::Service when getting services returns success(200) and alphabetically sorted services" file="./spec/requests/infrastructure/get_services_spec.rb" time="0.040725"></testcase>
<testcase classname="spec.requests.infrastructure.get_services_spec" name="Infrastructure::Service when getting services returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_services_spec.rb" time="0.024733"></testcase>
<testcase classname="spec.models.planning.decorators.is_decorated_spec" name="Planning::Decorators::IsDecorated adds decoration methods" file="./spec/models/planning/decorators/is_decorated_spec.rb" time="0.001823"></testcase>
<testcase classname="spec.models.executions.maestro.base_spec" name="Executions::Maestro::Base has a default runner" file="./spec/models/executions/maestro/base_spec.rb" time="0.004016"></testcase>
<testcase classname="spec.models.executions.maestro.base_spec" name="Executions::Maestro::Base is expected to be enqueueable" file="./spec/models/executions/maestro/base_spec.rb" time="0.022546"></testcase>
<testcase classname="spec.models.executions.maestro.base_spec" name="Executions::Maestro::Base has a default category" file="./spec/models/executions/maestro/base_spec.rb" time="0.003236"></testcase>
<testcase classname="spec.models.executions.maestro.base_spec" name="Executions::Maestro::Base#execute! processes the runner&apos;s result" file="./spec/models/executions/maestro/base_spec.rb" time="0.060473"></testcase>
<testcase classname="spec.lib.health.database_health_checker_spec" name="Health::DatabaseHealthChecker.check when the database is unhealthy returns an unhealthy check" file="./spec/lib/health/database_health_checker_spec.rb" time="0.002592"></testcase>
<testcase classname="spec.lib.health.database_health_checker_spec" name="Health::DatabaseHealthChecker.check when the database is healthy returns a healthy check" file="./spec/lib/health/database_health_checker_spec.rb" time="0.002485"></testcase>
<testcase classname="spec.requests.wounds.add_wound_evaluation_spec" name="AddWoundEvaluation returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/add_wound_evaluation_spec.rb" time="0.061611"></testcase>
<testcase classname="spec.requests.wounds.add_wound_evaluation_spec" name="AddWoundEvaluation creates a new wound evaluation with an image for a given wound" file="./spec/requests/wounds/add_wound_evaluation_spec.rb" time="0.281581"></testcase>
<testcase classname="spec.requests.wounds.add_wound_evaluation_spec" name="AddWoundEvaluation creates a new wound evaluation for a given wound" file="./spec/requests/wounds/add_wound_evaluation_spec.rb" time="0.067196"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.latest_ultrafiltration_calculation_spec" name="Latest ultrafiltration calculation returns the latest ultrafiltration calculation for the given session" file="./spec/requests/ultrafiltration_calculation/latest_ultrafiltration_calculation_spec.rb" time="0.175065"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.latest_ultrafiltration_calculation_spec" name="Latest ultrafiltration calculation returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/ultrafiltration_calculation/latest_ultrafiltration_calculation_spec.rb" time="0.118211"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.latest_ultrafiltration_calculation_spec" name="Latest ultrafiltration calculation returns 404 not found if the session cannot be found" file="./spec/requests/ultrafiltration_calculation/latest_ultrafiltration_calculation_spec.rb" time="0.030508"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.latest_ultrafiltration_calculation_spec" name="Latest ultrafiltration calculation returns the latest ultrafiltration calculation summary for the given session" file="./spec/requests/ultrafiltration_calculation/latest_ultrafiltration_calculation_spec.rb" time="0.137658"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_intervention_type_spec" name="VascularAccess::InterventionType audits the action" file="./spec/requests/vascular_access/destroy_intervention_type_spec.rb" time="0.039081"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_intervention_type_spec" name="VascularAccess::InterventionType returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/destroy_intervention_type_spec.rb" time="0.028887"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_intervention_type_spec" name="VascularAccess::InterventionType returns not found (404) if the diagnosis doesn&apos;t exist" file="./spec/requests/vascular_access/destroy_intervention_type_spec.rb" time="0.027393"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_intervention_type_spec" name="VascularAccess::InterventionType returns success (200) and the deleted intervention_type" file="./spec/requests/vascular_access/destroy_intervention_type_spec.rb" time="0.044976"></testcase>
<testcase classname="spec.requests.integration.set_patient_case_id_spec" name="Integration Set Patient case id silently fails if admission_id or admission_date are nil" file="./spec/requests/integration/set_patient_case_id_spec.rb" time="0.053899"></testcase>
<testcase classname="spec.requests.integration.set_patient_case_id_spec" name="Integration Set Patient case id updates case_id existing patient" file="./spec/requests/integration/set_patient_case_id_spec.rb" time="0.128677"></testcase>
<testcase classname="spec.requests.integration.set_patient_case_id_spec" name="Integration Set Patient case id creates patient if patient doesn&apos;t exist" file="./spec/requests/integration/set_patient_case_id_spec.rb" time="0.076191"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_spec" name="Medications GetHomeMedicationSchedule requires read rights" file="./spec/requests/medications/get_home_medication_schedule_spec.rb" time="0.188923"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_spec" name="Medications GetHomeMedicationSchedule amount of entries in schedule needs to be the same as amount of active prescritions" file="./spec/requests/medications/get_home_medication_schedule_spec.rb" time="0.456429"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_schedule_spec" name="Medications GetHomeMedicationSchedule fails get if patient not found" file="./spec/requests/medications/get_home_medication_schedule_spec.rb" time="0.165253"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService raises when there&apos;s no ongoing session for a machine serial number" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.015852"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService raises if units are incompatible" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.122713"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService raises when there&apos;s no ongoing session for a patient" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.082363"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when treatment has ended (according to machine) only accepts blood pressure measurements" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.123624"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when treatment has ended (according to machine) accepts all parameters if messages are replayed" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.133509"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when message contains machine info saves machine info on the session" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.163593"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when message contains machine info saves diagnostic information about the machine connection" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.018847"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when treatment is ongoing (according to machine) rejects parameters with null values" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.129169"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when treatment is ongoing (according to machine) accepts all parameters" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.163268"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when treatment is ongoing (according to machine) rejects unknown parameters" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.143860"></testcase>
<testcase classname="spec.models.integration.machine_data_ingestion_service_spec" name="Integration::MachineDataIngestionService when message contains treatment ended status updates session to reflect that the treatment has ended" file="./spec/models/integration/machine_data_ingestion_service_spec.rb" time="0.158181"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_attachment_spec" name="CreateAccessSiteAttachments creates the site attachment" file="./spec/requests/vascular_access/create_vascular_access_site_attachment_spec.rb" time="0.209409"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_attachment_spec" name="CreateAccessSiteAttachments returns (404) if the access site is not found" file="./spec/requests/vascular_access/create_vascular_access_site_attachment_spec.rb" time="0.028442"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_attachment_spec" name="CreateAccessSiteAttachments returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/create_vascular_access_site_attachment_spec.rb" time="0.103030"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations mutates the object" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002058"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations returns nil" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002708"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations returns data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002701"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations does not update the data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002133"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations mutates the subobject" file="./spec/lib/carbon/wrapper_spec.rb" time="0.001951"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations carbonized updates the data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002563"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations carbonized does not mutate the subobject" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002857"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations carbonized returns data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002520"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations carbonized does not mutate the object" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002548"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper associations carbonized does not return nil" file="./spec/lib/carbon/wrapper_spec.rb" time="0.012758"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes composes attributes" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002757"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes returns nil" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002533"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes does not update data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002127"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes returns data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002224"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes mutates data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002534"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes carbonized updates data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002064"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes carbonized does not mutate data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002612"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes carbonized returns carbon data" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002315"></testcase>
<testcase classname="spec.lib.carbon.wrapper_spec" name="Carbon::Wrapper attributes carbonized does not return nil" file="./spec/lib/carbon/wrapper_spec.rb" time="0.002590"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.reports.recipe_prescription_pdf_spec" name="RecipePrescriptionPdf gets a pdf of the recip-e prescription" file="./spec/models/medications/prescriptions/ehealth/reports/recipe_prescription_pdf_spec.rb" time="0.116193"></testcase>
<testcase classname="spec.requests.infrastructure.delete_room_spec" name="Rooms when deactivating a room returns not found if position doesn&apos;t exist" file="./spec/requests/infrastructure/delete_room_spec.rb" time="0.035615"></testcase>
<testcase classname="spec.requests.infrastructure.delete_room_spec" name="Rooms when deactivating a room returns unauthorized if unauthorized" file="./spec/requests/infrastructure/delete_room_spec.rb" time="0.050202"></testcase>
<testcase classname="spec.requests.infrastructure.delete_room_spec" name="Rooms when deactivating a room deactivates the room and descendants" file="./spec/requests/infrastructure/delete_room_spec.rb" time="0.129709"></testcase>
<testcase classname="spec.requests.infrastructure.delete_room_spec" name="Rooms when deactivating a room returns 422 when used in a session" file="./spec/requests/infrastructure/delete_room_spec.rb" time="0.147427"></testcase>
<testcase classname="spec.requests.context_links.get_context_links_spec" name="Get context links returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/context_links/get_context_links_spec.rb" time="0.030452"></testcase>
<testcase classname="spec.requests.context_links.get_context_links_spec" name="Get context links returns success (200) and the links" file="./spec/requests/context_links/get_context_links_spec.rb" time="0.044500"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #show requires authorization" file="./spec/requests/reports/backup_reports_spec.rb" time="0.027390"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #show returns not found if no report exist" file="./spec/requests/reports/backup_reports_spec.rb" time="0.028300"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #show returns a PDF of the latest backup report" file="./spec/requests/reports/backup_reports_spec.rb" time="0.055724"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #index requires authorization" file="./spec/requests/reports/backup_reports_spec.rb" time="0.035796"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #index returns an array of the last saved reports" file="./spec/requests/reports/backup_reports_spec.rb" time="0.050593"></testcase>
<testcase classname="spec.requests.reports.backup_reports_spec" name="Backup reports #index returns an empty array of the last saved reports" file="./spec/requests/reports/backup_reports_spec.rb" time="0.039565"></testcase>
<testcase classname="spec.requests.delete_code_spec" name="Delete Code returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/delete_code_spec.rb" time="0.038436"></testcase>
<testcase classname="spec.requests.delete_code_spec" name="Delete Code returns success (200) and deletes the code when the codesystem is editable" file="./spec/requests/delete_code_spec.rb" time="0.054841"></testcase>
<testcase classname="spec.requests.delete_code_spec" name="Delete Code returns method not allowed (405) when the codesystem is not editable" file="./spec/requests/delete_code_spec.rb" time="0.041439"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to validate that :order cannot be empty/falsy" file="./spec/models/tasks/task_record_spec.rb" time="0.008270"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to belong to task_group_record required: true" file="./spec/models/tasks/task_record_spec.rb" time="0.006231"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to validate that :order looks like an integer" file="./spec/models/tasks/task_record_spec.rb" time="0.009785"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to belong to actor optional: true" file="./spec/models/tasks/task_record_spec.rb" time="0.004820"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to validate that :status is either ‹&quot;pending&quot;›, ‹&quot;completed&quot;›, ‹&quot;delayed&quot;›, or ‹&quot;cancelled&quot;›" file="./spec/models/tasks/task_record_spec.rb" time="0.013666"></testcase>
<testcase classname="spec.models.tasks.task_record_spec" name="Tasks::TaskRecord is expected to validate that :status cannot be empty/falsy" file="./spec/models/tasks/task_record_spec.rb" time="0.013128"></testcase>
<testcase classname="spec.requests.patients.delete_weight_spec" name="DeleteWeight returns not_found (404) if the weight cannot be found" file="./spec/requests/patients/delete_weight_spec.rb" time="0.050615"></testcase>
<testcase classname="spec.requests.patients.delete_weight_spec" name="DeleteWeight deletes the specified weight" file="./spec/requests/patients/delete_weight_spec.rb" time="0.131100"></testcase>
<testcase classname="spec.requests.patients.delete_weight_spec" name="DeleteWeight returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_weight_spec.rb" time="0.058977"></testcase>
<testcase classname="spec.models.sessions.session_state_machine_spec" name="Sessions::SessionStateMachine after_transition caches the current state property on the model" file="./spec/models/sessions/session_state_machine_spec.rb" time="0.062399"></testcase>
<testcase classname="spec.models.sessions.session_state_machine_spec" name="Sessions::SessionStateMachine initial_state starts in the &apos;unstarted&apos; state" file="./spec/models/sessions/session_state_machine_spec.rb" time="0.018612"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id returns 404 not found if the ultrafiltration volume adjustment does not exist" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.032349"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.092367"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id when updating a ultrafiltration volume adjustment audits the action" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.108818"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id when updating a ultrafiltration volume adjustment returns 200 OK with the updated ultrafiltration volume adjustment" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.117283"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id when the update params are wrong returns 422 unprocessable" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.119820"></testcase>
<testcase classname="spec.requests.patients.update_ultrafiltration_volume_adjustment_spec" name="PUT /ultrafiltration_volume_adjustments/:id when the update params are wrong does not audit the action" file="./spec/requests/patients/update_ultrafiltration_volume_adjustment_spec.rb" time="0.109868"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns products alphabetically" file="./spec/requests/medications/get_products_spec.rb" time="0.159890"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns a list of 5 products when there are 2 different actuals and 1 virtual" file="./spec/requests/medications/get_products_spec.rb" time="0.197355"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter by name" file="./spec/requests/medications/get_products_spec.rb" time="0.262058"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_products_spec.rb" time="0.037324"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter by source" file="./spec/requests/medications/get_products_spec.rb" time="0.139176"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter by intradialytic" file="./spec/requests/medications/get_products_spec.rb" time="0.142076"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter combined" file="./spec/requests/medications/get_products_spec.rb" time="0.120691"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter actual products" file="./spec/requests/medications/get_products_spec.rb" time="0.086838"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns a list of 30 products when there are 100" file="./spec/requests/medications/get_products_spec.rb" time="3.377700"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns products with their form" file="./spec/requests/medications/get_products_spec.rb" time="0.111418"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter by ambulatory" file="./spec/requests/medications/get_products_spec.rb" time="0.184074"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter virtual products" file="./spec/requests/medications/get_products_spec.rb" time="0.122184"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns products with their active substances contactenated" file="./spec/requests/medications/get_products_spec.rb" time="0.098487"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts returns an empty list of products with with a paging block if no data is available" file="./spec/requests/medications/get_products_spec.rb" time="0.028323"></testcase>
<testcase classname="spec.requests.medications.get_products_spec" name="GetProducts can filter by category" file="./spec/requests/medications/get_products_spec.rb" time="0.126244"></testcase>
<testcase classname="spec.requests.patients.delete_ultrafiltration_volume_adjustment_spec" name="DELETE /ultrafiltration_volume_adjustments/:id returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/delete_ultrafiltration_volume_adjustment_spec.rb" time="0.028638"></testcase>
<testcase classname="spec.requests.patients.delete_ultrafiltration_volume_adjustment_spec" name="DELETE /ultrafiltration_volume_adjustments/:id returns 404 not found if the ultrafiltration volume adjustment does not exist" file="./spec/requests/patients/delete_ultrafiltration_volume_adjustment_spec.rb" time="0.031738"></testcase>
<testcase classname="spec.requests.patients.delete_ultrafiltration_volume_adjustment_spec" name="DELETE /ultrafiltration_volume_adjustments/:id when destroying a ultrafiltration volume adjustment audits the action" file="./spec/requests/patients/delete_ultrafiltration_volume_adjustment_spec.rb" time="0.116436"></testcase>
<testcase classname="spec.requests.patients.delete_ultrafiltration_volume_adjustment_spec" name="DELETE /ultrafiltration_volume_adjustments/:id when destroying a ultrafiltration volume adjustment returns 200" file="./spec/requests/patients/delete_ultrafiltration_volume_adjustment_spec.rb" time="0.103427"></testcase>
<testcase classname="spec.requests.patients.delete_ultrafiltration_volume_adjustment_spec" name="DELETE /ultrafiltration_volume_adjustments/:id when destroying a ultrafiltration volume adjustment destroys the ultrafiltration volume adjustment" file="./spec/requests/patients/delete_ultrafiltration_volume_adjustment_spec.rb" time="0.095762"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :category cannot be empty/falsy" file="./spec/models/executions/base_spec.rb" time="0.027843"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :type cannot be empty/falsy" file="./spec/models/executions/base_spec.rb" time="0.030372"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :runner cannot be empty/falsy" file="./spec/models/executions/base_spec.rb" time="0.032769"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to belong to user required: true" file="./spec/models/executions/base_spec.rb" time="0.031048"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :category is either ‹&quot;reports&quot;›, ‹&quot;maestro&quot;›, ‹&quot;ehealth&quot;›, or ‹&quot;medications&quot;›" file="./spec/models/executions/base_spec.rb" time="0.028235"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :state cannot be empty/falsy" file="./spec/models/executions/base_spec.rb" time="0.032409"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base is expected to validate that :runner is either ‹&quot;sidekiq&quot;›, ‹&quot;maestro&quot;›, or ‹&quot;apollo&quot;›" file="./spec/models/executions/base_spec.rb" time="0.028230"></testcase>
<testcase classname="spec.models.executions.base_spec" name="Executions::Base#attach attaches a file" file="./spec/models/executions/base_spec.rb" time="0.051709"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_spec" name="PUT /api/connectors/:id audits the update action" file="./spec/requests/infrastructure/update_connector_spec.rb" time="0.054837"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_spec" name="PUT /api/connectors/:id returns not found (404) if the connector is not found" file="./spec/requests/infrastructure/update_connector_spec.rb" time="0.030547"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_spec" name="PUT /api/connectors/:id returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/update_connector_spec.rb" time="0.034927"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_spec" name="PUT /api/connectors/:id returns success (200) and updated connector" file="./spec/requests/infrastructure/update_connector_spec.rb" time="0.062804"></testcase>
<testcase classname="spec.requests.infrastructure.update_connector_spec" name="PUT /api/connectors/:id returns unprocessable entity (422) if the parameters are invalid" file="./spec/requests/infrastructure/update_connector_spec.rb" time="0.061020"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy has carbon associations" file="./spec/lib/carbon/copy_spec.rb" time="0.002616"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy is expected to have carbon :attribute and :association" file="./spec/lib/carbon/copy_spec.rb" time="0.002251"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy has carbon attributes" file="./spec/lib/carbon/copy_spec.rb" time="0.002113"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#to_carbon adds a class attribute" file="./spec/lib/carbon/copy_spec.rb" time="0.002118"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#to_carbon carbon copies attributes" file="./spec/lib/carbon/copy_spec.rb" time="0.002381"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#to_carbon carbon copies associations" file="./spec/lib/carbon/copy_spec.rb" time="0.004255"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#carbonize! copies the attributes to carbon_data" file="./spec/lib/carbon/copy_spec.rb" time="0.002783"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#carbon_copy returns itself when there is no carbon_data" file="./spec/lib/carbon/copy_spec.rb" time="0.002267"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#carbon_copy returns a carbon copy" file="./spec/lib/carbon/copy_spec.rb" time="0.001964"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#carbonized? returns true when the object is carbonized" file="./spec/lib/carbon/copy_spec.rb" time="0.002192"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy#carbonized? returns false when the object is not carbonized" file="./spec/lib/carbon/copy_spec.rb" time="0.001872"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy persistence behaviour returns a carbon copy when the underlying model is destroyed" file="./spec/lib/carbon/copy_spec.rb" time="0.355239"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy persistence behaviour returns a carbon copy" file="./spec/lib/carbon/copy_spec.rb" time="0.331156"></testcase>
<testcase classname="spec.lib.carbon.copy_spec" name="Carbon::Copy persistence behaviour returns a carbon copy when the underlying model is changed" file="./spec/lib/carbon/copy_spec.rb" time="0.382457"></testcase>
<testcase classname="spec.models.reports.session_sign_off_pdf_spec" name="Session sign off report gets a pdf with the session sign off overview" file="./spec/models/reports/session_sign_off_pdf_spec.rb" time="0.094082"></testcase>
<testcase classname="spec.requests.planning.get_deviations_for_patient_spec" name="Get deviations for a patient lists deviations for a given patient" file="./spec/requests/planning/get_deviations_for_patient_spec.rb" time="0.059270"></testcase>
<testcase classname="spec.requests.medications.get_categories_spec" name="GetCategories returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_categories_spec.rb" time="0.031845"></testcase>
<testcase classname="spec.requests.medications.get_categories_spec" name="GetCategories returns an list of categories" file="./spec/requests/medications/get_categories_spec.rb" time="0.052685"></testcase>
<testcase classname="spec.models.medications.formulary.item_stock_spec" name="Medications::Formulary::ItemStock is expected to belong to stock class_name =&gt; Infrastructure::Stock required: true" file="./spec/models/medications/formulary/item_stock_spec.rb" time="0.037716"></testcase>
<testcase classname="spec.models.medications.formulary.item_stock_spec" name="Medications::Formulary::ItemStock is expected to belong to formulary_item class_name =&gt; Medications::Formulary::Item required: true" file="./spec/models/medications/formulary/item_stock_spec.rb" time="0.005240"></testcase>
<testcase classname="spec.models.medications.formulary.item_stock_spec" name="Medications::Formulary::ItemStock#validate_formulary_item_stock_uniqueness validates that formulary_item and stock combinations are unique" file="./spec/models/medications/formulary/item_stock_spec.rb" time="0.019110"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis validates uniqueness of code" file="./spec/models/patients/diagnosis_spec.rb" time="0.021957"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis is expected to validate that :name cannot be empty/falsy" file="./spec/models/patients/diagnosis_spec.rb" time="0.014704"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis validates uniqueness of name" file="./spec/models/patients/diagnosis_spec.rb" time="0.018960"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis destroy_or_archive! when it is not used is destroyed" file="./spec/models/patients/diagnosis_spec.rb" time="0.011015"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis destroy_or_archive! when it is used is archived" file="./spec/models/patients/diagnosis_spec.rb" time="0.068220"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis#used? when it is not used is expected not to be used" file="./spec/models/patients/diagnosis_spec.rb" time="0.009495"></testcase>
<testcase classname="spec.models.patients.diagnosis_spec" name="Patients::Diagnosis#used? when it is used is expected to be used" file="./spec/models/patients/diagnosis_spec.rb" time="0.065441"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to have many product_routes dependent =&gt; destroy" file="./spec/models/medications/administration_route_spec.rb" time="0.002697"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to validate that :name is case-sensitively unique within the scope of :source_id" file="./spec/models/medications/administration_route_spec.rb" time="0.022564"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to belong to source required: true" file="./spec/models/medications/administration_route_spec.rb" time="0.006803"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/administration_route_spec.rb" time="0.010692"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to have many products through product_routes" file="./spec/models/medications/administration_route_spec.rb" time="0.004725"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/administration_route_spec.rb" time="0.010165"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute.most_used returns the top used item when 1 limit is given" file="./spec/models/medications/administration_route_spec.rb" time="0.360096"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute.most_used returns only used items" file="./spec/models/medications/administration_route_spec.rb" time="0.057174"></testcase>
<testcase classname="spec.models.medications.administration_route_spec" name="Medications::AdministrationRoute.most_used accepts a source to limit the initial group" file="./spec/models/medications/administration_route_spec.rb" time="0.082694"></testcase>
<testcase classname="spec.requests.orders.get_orders_categories_spec" name="GetOrdersCategories returns a list of categories" file="./spec/requests/orders/get_orders_categories_spec.rb" time="0.034857"></testcase>
<testcase classname="spec.models.episodes.services.cancel_admit_spec" name="Episodes::Services::CancelAdmit only destoys episodes with same id" file="./spec/models/episodes/services/cancel_admit_spec.rb" time="0.109560"></testcase>
<testcase classname="spec.models.episodes.services.cancel_admit_spec" name="Episodes::Services::CancelAdmit destroys an episode" file="./spec/models/episodes/services/cancel_admit_spec.rb" time="0.125327"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil when the room&apos;s stock does not match the formulary item" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.085297"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns the central stock if the room&apos;s stock does not match the formulary item stock, but the formulary item is in the central stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.072300"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns the room&apos;s stock if it matches the formulary item stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.097001"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns the room&apos;s stock if it matches at least one formulary item stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.103938"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil when there is no matching formulary item" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.064806"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns the central stock if the room does not match the formulary item stock, but the formulary item is in the central stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.080889"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil when there is no room" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.015602"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil if the room&apos;s stock does not match the formulary item stock, and the formulary item is not in a central stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.075144"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil when the room has no stock" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.065317"></testcase>
<testcase classname="spec.models.infrastructure.services.find_matching_stock_spec" name="Infrastructure::Services::FindMatchingStock returns nil when there is no variant" file="./spec/models/infrastructure/services/find_matching_stock_spec.rb" time="0.004455"></testcase>
<testcase classname="spec.requests.episodes.get_adt_event_spec" name="GetEpisodeEvent returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/episodes/get_adt_event_spec.rb" time="0.101231"></testcase>
<testcase classname="spec.requests.episodes.get_adt_event_spec" name="GetEpisodeEvent returns an adt event" file="./spec/requests/episodes/get_adt_event_spec.rb" time="0.106557"></testcase>
<testcase classname="spec.requests.devices.search_devices_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/search_devices_spec.rb" time="0.029040"></testcase>
<testcase classname="spec.requests.devices.search_devices_spec" name="Devices::Device returns success (200) and alphabetically sorted device options related to the given center and a given name query" file="./spec/requests/devices/search_devices_spec.rb" time="0.063754"></testcase>
<testcase classname="spec.requests.devices.search_devices_spec" name="Devices::Device returns success (200) and alphabetically sorted device options related to the given center" file="./spec/requests/devices/search_devices_spec.rb" time="0.068783"></testcase>
<testcase classname="spec.requests.devices.search_devices_spec" name="Devices::Device returns unprocessable entity (422) if there is no center given" file="./spec/requests/devices/search_devices_spec.rb" time="0.032840"></testcase>
<testcase classname="spec.requests.devices.search_devices_spec" name="Devices::Device returns success (200) and alphabetically sorted device options related to the given center and a given serial_number query" file="./spec/requests/devices/search_devices_spec.rb" time="0.062813"></testcase>
<testcase classname="spec.lib.validators.type_validator_spec" name="Validators::TypeValidator validates float values" file="./spec/lib/validators/type_validator_spec.rb" time="0.002062"></testcase>
<testcase classname="spec.lib.validators.type_validator_spec" name="Validators::TypeValidator validates integer values" file="./spec/lib/validators/type_validator_spec.rb" time="0.002119"></testcase>
<testcase classname="spec.lib.validators.type_validator_spec" name="Validators::TypeValidator validates boolean values" file="./spec/lib/validators/type_validator_spec.rb" time="0.002490"></testcase>
<testcase classname="spec.lib.validators.type_validator_spec" name="Validators::TypeValidator validates string values" file="./spec/lib/validators/type_validator_spec.rb" time="0.002652"></testcase>
<testcase classname="spec.lib.validators.type_validator_spec" name="Validators::TypeValidator fails if type is not supported" file="./spec/lib/validators/type_validator_spec.rb" time="0.001966"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier allows assigning multiple identifiers to patient" file="./spec/models/patients/patient_identifier_spec.rb" time="0.041332"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier rejects creating a patient w/ the same hospital id if existing is enrolled`" file="./spec/models/patients/patient_identifier_spec.rb" time="0.071233"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier is expected to validate that :patient cannot be empty/falsy" file="./spec/models/patients/patient_identifier_spec.rb" time="0.013362"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/patients/patient_identifier_spec.rb" time="0.007765"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier accepts enrolling patient it self" file="./spec/models/patients/patient_identifier_spec.rb" time="0.094132"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier rejects assigning two primary identifier to patient" file="./spec/models/patients/patient_identifier_spec.rb" time="0.047354"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier is expected to belong to patient required: true" file="./spec/models/patients/patient_identifier_spec.rb" time="0.005162"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier rejects changing the identifier when it is the primary one" file="./spec/models/patients/patient_identifier_spec.rb" time="0.045657"></testcase>
<testcase classname="spec.models.patients.patient_identifier_spec" name="Patients::PatientIdentifier when manual patient management is enabled accepts changing the primary identifier" file="./spec/models/patients/patient_identifier_spec.rb" time="0.063354"></testcase>
<testcase classname="spec.models.patients.patient_treatment_spec" name="Patients::PatientTreatment is expected to belong to patient required: true" file="./spec/models/patients/patient_treatment_spec.rb" time="0.004994"></testcase>
<testcase classname="spec.models.patients.patient_treatment_spec" name="Patients::PatientTreatment is expected to belong to treatment required: true" file="./spec/models/patients/patient_treatment_spec.rb" time="0.005132"></testcase>
<testcase classname="spec.models.patients.patient_treatment_spec" name="Patients::PatientTreatment is expected to belong to created_by required: true" file="./spec/models/patients/patient_treatment_spec.rb" time="0.005276"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#last_name returns user&apos;s last name" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.003052"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#last_name extracts last name out of CN field" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.002594"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#first_name returns user&apos;s first name" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.001711"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#first_name extracts first name out of CN field" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.002072"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#email returns user&apos;s email" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.001732"></testcase>
<testcase classname="spec.lib.auth.ldap.user_info_spec" name="Auth::LDAP::UserInfo#username returns user&apos;s username" file="./spec/lib/auth/ldap/user_info_spec.rb" time="0.002028"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to belong to source required: true" file="./spec/models/medications/ingredient_spec.rb" time="0.006122"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to have many ingredient_products dependent =&gt; destroy" file="./spec/models/medications/ingredient_spec.rb" time="0.002574"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/ingredient_spec.rb" time="0.008132"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to have many products through ingredient_products" file="./spec/models/medications/ingredient_spec.rb" time="0.002444"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to validate that :ingredient_type is either ‹&quot;active_substance&quot;› or ‹&quot;excipient&quot;›" file="./spec/models/medications/ingredient_spec.rb" time="0.009559"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to validate that :ingredient_type cannot be empty/falsy" file="./spec/models/medications/ingredient_spec.rb" time="0.009364"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to validate that :name is case-sensitively unique within the scope of :source_id" file="./spec/models/medications/ingredient_spec.rb" time="0.029574"></testcase>
<testcase classname="spec.models.medications.ingredient_spec" name="Medications::Ingredient is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/ingredient_spec.rb" time="0.012672"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_administration_spec" name="Destroy medication administration addition returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/destroy_medication_administration_spec.rb" time="0.053463"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_administration_spec" name="Destroy medication administration addition returns not found (404) if the administration is not found" file="./spec/requests/medications/destroy_medication_administration_spec.rb" time="0.030812"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_administration_spec" name="Destroy medication administration addition returns success (204) if destroyed " file="./spec/requests/medications/destroy_medication_administration_spec.rb" time="0.233633"></testcase>
<testcase classname="spec.requests.update_code_spec" name="Update Code returns success (200) and an updated code_system within an editable code system" file="./spec/requests/update_code_spec.rb" time="0.048242"></testcase>
<testcase classname="spec.requests.update_code_spec" name="Update Code returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/update_code_spec.rb" time="0.037239"></testcase>
<testcase classname="spec.requests.update_code_spec" name="Update Code returns unprocessable entity (422) when reusing a name within an editable code system" file="./spec/requests/update_code_spec.rb" time="0.087923"></testcase>
<testcase classname="spec.requests.update_code_spec" name="Update Code returns method not allowed (405) when updating a non-editable code system" file="./spec/requests/update_code_spec.rb" time="0.036249"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_spec" name="CreateIntervention fails if access site does not exist" file="./spec/requests/vascular_access/create_intervention_spec.rb" time="0.029591"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_spec" name="CreateIntervention updates audit information" file="./spec/requests/vascular_access/create_intervention_spec.rb" time="0.184679"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_spec" name="CreateIntervention requires write rights" file="./spec/requests/vascular_access/create_intervention_spec.rb" time="0.110928"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_spec" name="CreateIntervention creates a new intervention for the given access site" file="./spec/requests/vascular_access/create_intervention_spec.rb" time="0.123082"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_spec" name="CreateIntervention fails if intervention type does not exist" file="./spec/requests/vascular_access/create_intervention_spec.rb" time="0.132821"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement is expected to belong to user required: true" file="./spec/models/measurements/measurement_spec.rb" time="0.006237"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement is expected to validate that :name is either ‹&quot;access_flow&quot;›, ‹&quot;activated_clotting_time&quot;›, ‹&quot;bladder_residue&quot;›, ‹&quot;blood_pressure&quot;›, ‹&quot;body_composition&quot;›, ‹&quot;cardiothoracic_ratio&quot;›, ‹&quot;glycemia&quot;›, ‹&quot;machine&quot;›, ‹&quot;oxygen_saturation&quot;›, ‹&quot;pain_score&quot;›, ‹&quot;pulse&quot;›, ‹&quot;temperature&quot;›, ‹&quot;urine_volume_24h&quot;›, ‹&quot;vital_signs&quot;›, ‹&quot;weight&quot;›, ‹&quot;central_venous_pressure&quot;›, ‹&quot;standing_blood_pressure&quot;›, or ‹&quot;fall_risk&quot;›" file="./spec/models/measurements/measurement_spec.rb" time="0.046154"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement is expected to validate that :name cannot be empty/falsy" file="./spec/models/measurements/measurement_spec.rb" time="0.050297"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement is expected to belong to session optional: true" file="./spec/models/measurements/measurement_spec.rb" time="0.005999"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement is expected to belong to patient required: true" file="./spec/models/measurements/measurement_spec.rb" time="0.008814"></testcase>
<testcase classname="spec.models.measurements.measurement_spec" name="Measurements::Measurement.vascular_access returns all vascular access measurements" file="./spec/models/measurements/measurement_spec.rb" time="0.415757"></testcase>
<testcase classname="spec.requests.patients.get_patient_diets_spec" name="GetPatientDiets returns patient&apos;s diet history sort by date descending" file="./spec/requests/patients/get_patient_diets_spec.rb" time="0.172227"></testcase>
<testcase classname="spec.requests.patients.get_patient_diets_spec" name="GetPatientDiets requires write rights" file="./spec/requests/patients/get_patient_diets_spec.rb" time="0.087853"></testcase>
<testcase classname="spec.requests.patients.get_patient_diets_spec" name="GetPatientDiets fails if patient does not exist" file="./spec/requests/patients/get_patient_diets_spec.rb" time="0.027940"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator is expected to respond to #on_even_weeks" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.175410"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator is expected to respond to #on_odd_weeks" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.184572"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator is expected to respond to #on_days" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.181204"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday second planned session in the second (complete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.219144"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday session completed on another day is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.267978"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.198273"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday second planned session (in a complete week) is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.183758"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday first planned session (in a complete week) is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.185088"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday session ongoing is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.237370"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday session completed on the same day is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.232600"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a monday first planned session in the second (complete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.180671"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday session ongoing in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.248815"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday second planned session in the first (incomplete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.237576"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday first planned session in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.252718"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday first planned session in the first (incomplete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.249886"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.226852"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday session ongoing in the first (incomplete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.236540"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday session completed on the same day is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.240443"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday session completed on another day is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.255178"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a tuesday second planned session in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.190836"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday session ongoing in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.256410"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday first planned session in the third (complete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.215613"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday second planned session in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.207968"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.251539"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday first planned session in the first (incomplete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.232754"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday first planned session in the second (complete) week is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.231543"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday session completed on another day is expected to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.238954"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday second planned session in the third (complete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.201713"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday session completed on the same day is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.246391"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday session ongoing in the third (complete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.234321"></testcase>
<testcase classname="spec.models.planning.evaluators.month_evaluator_spec" name="Planning::Evaluators::MonthEvaluator when the month starts on a friday session ongoing in the first (incomplete) week is expected not to be scheduled" file="./spec/models/planning/evaluators/month_evaluator_spec.rb" time="0.290636"></testcase>
<testcase classname="spec.models.medications.services.update_ingredient_spec" name="Medications::Services::UpdateIngredient updates an ingredient route with its codes" file="./spec/models/medications/services/update_ingredient_spec.rb" time="0.112902"></testcase>
<testcase classname="spec.requests.users.get_roles_spec" name="GetRoles rejects roles retrieval if not granted" file="./spec/requests/users/get_roles_spec.rb" time="0.028928"></testcase>
<testcase classname="spec.requests.users.get_roles_spec" name="GetRoles returns all roles sorted by name" file="./spec/requests/users/get_roles_spec.rb" time="0.055191"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.payload_builder_spec" name="Medications::Prescriptions::Ehealth::PayloadBuilder medicinal_product creates a recipe payload for a medicinal product" file="./spec/models/medications/prescriptions/ehealth/payload_builder_spec.rb" time="0.042461"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.payload_builder_spec" name="Medications::Prescriptions::Ehealth::PayloadBuilder medicinal_product fails to build when the medicinal_product is not set" file="./spec/models/medications/prescriptions/ehealth/payload_builder_spec.rb" time="0.020591"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.payload_builder_spec" name="Medications::Prescriptions::Ehealth::PayloadBuilder magistral preparation fails to build when the magistral text is not set" file="./spec/models/medications/prescriptions/ehealth/payload_builder_spec.rb" time="0.028467"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.payload_builder_spec" name="Medications::Prescriptions::Ehealth::PayloadBuilder magistral preparation creates a recipe payload for a magistral preparation" file="./spec/models/medications/prescriptions/ehealth/payload_builder_spec.rb" time="0.051479"></testcase>
<testcase classname="spec.requests.infrastructure.update_global_center_acl_spec" name="UpdateGlobalCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/update_global_center_acl_spec.rb" time="0.053727"></testcase>
<testcase classname="spec.requests.infrastructure.update_global_center_acl_spec" name="UpdateGlobalCenterAcl updates the user&apos;s center acl" file="./spec/requests/infrastructure/update_global_center_acl_spec.rb" time="0.077140"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder carbonizes billing items" file="./spec/models/billing/services/bill_order_spec.rb" time="0.210277"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder creates two billing items if both fee and forfait code are present" file="./spec/models/billing/services/bill_order_spec.rb" time="0.270403"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder does not bill unbillable orders" file="./spec/models/billing/services/bill_order_spec.rb" time="0.125575"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder bills an order twice for different sessions" file="./spec/models/billing/services/bill_order_spec.rb" time="0.395610"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder creates a billing item for the order" file="./spec/models/billing/services/bill_order_spec.rb" time="0.267421"></testcase>
<testcase classname="spec.models.billing.services.bill_order_spec" name="Billing::Services::BillOrder does not bill an order twice for a session" file="./spec/models/billing/services/bill_order_spec.rb" time="0.238563"></testcase>
<testcase classname="spec.models.executions.medications.base_spec" name="Executions::Medications::Base is expected to be enqueueable" file="./spec/models/executions/medications/base_spec.rb" time="0.010365"></testcase>
<testcase classname="spec.models.executions.medications.base_spec" name="Executions::Medications::Base has a default runner" file="./spec/models/executions/medications/base_spec.rb" time="0.002165"></testcase>
<testcase classname="spec.models.executions.medications.base_spec" name="Executions::Medications::Base has a default category" file="./spec/models/executions/medications/base_spec.rb" time="0.001979"></testcase>
<testcase classname="spec.requests.patients.update_infection_for_patient_spec" name="UpdateInfectionForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_infection_for_patient_spec.rb" time="0.055410"></testcase>
<testcase classname="spec.requests.patients.update_infection_for_patient_spec" name="UpdateInfectionForPatient updates an existing infection" file="./spec/requests/patients/update_infection_for_patient_spec.rb" time="0.075967"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_summaries_spec" name="GetPatientVascularAccessSummaries requires write rights" file="./spec/requests/patients/get_patient_vascular_access_summaries_spec.rb" time="0.034035"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_summaries_spec" name="GetPatientVascularAccessSummaries fails if patient does not exist" file="./spec/requests/patients/get_patient_vascular_access_summaries_spec.rb" time="0.033622"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_summaries_spec" name="GetPatientVascularAccessSummaries returns patient&apos;s vascular access summaries" file="./spec/requests/patients/get_patient_vascular_access_summaries_spec.rb" time="0.275760"></testcase>
<testcase classname="spec.requests.orders.delete_order_spec" name="Delete order rejects deleting if not granted" file="./spec/requests/orders/delete_order_spec.rb" time="0.059517"></testcase>
<testcase classname="spec.requests.orders.delete_order_spec" name="Delete order deletes recurring order" file="./spec/requests/orders/delete_order_spec.rb" time="0.078397"></testcase>
<testcase classname="spec.requests.orders.delete_order_spec" name="Delete order fails if order has started tasks" file="./spec/requests/orders/delete_order_spec.rb" time="0.161557"></testcase>
<testcase classname="spec.requests.orders.delete_order_spec" name="Delete order deletes one-off orders" file="./spec/requests/orders/delete_order_spec.rb" time="0.062516"></testcase>
<testcase classname="spec.requests.exports.get_patient_master_record_export_spec" name="Get patient master record export returns a XLSX with the patient master records" file="./spec/requests/exports/get_patient_master_record_export_spec.rb" time="0.101468"></testcase>
<testcase classname="spec.requests.exports.get_patient_master_record_export_spec" name="Get patient master record export returns a CSV with the patient master records" file="./spec/requests/exports/get_patient_master_record_export_spec.rb" time="0.079854"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_device_spec" name="GET /api/connectors/:id/devices/:id returns success (200) and the connector_device" file="./spec/requests/infrastructure/get_connector_device_spec.rb" time="0.103739"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_device_spec" name="GET /api/connectors/:id/devices/:id returns not found (404) if the connnector is not found" file="./spec/requests/infrastructure/get_connector_device_spec.rb" time="0.036876"></testcase>
<testcase classname="spec.requests.infrastructure.get_connector_device_spec" name="GET /api/connectors/:id/devices/:id returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_connector_device_spec.rb" time="0.040457"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to validate that :care_type is either ‹&quot;high_care&quot;›, ‹&quot;low_care_auto&quot;›, or ‹&quot;low_care_night&quot;›" file="./spec/models/sessions/session_spec.rb" time="0.012173"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have many logbook_entries" file="./spec/models/sessions/session_spec.rb" time="0.002134"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have one vascular_access_summary" file="./spec/models/sessions/session_spec.rb" time="0.002527"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have many complications" file="./spec/models/sessions/session_spec.rb" time="0.002477"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have many state_transitions" file="./spec/models/sessions/session_spec.rb" time="0.001714"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to belong to shift required: true" file="./spec/models/sessions/session_spec.rb" time="0.004363"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to belong to treatment required: true" file="./spec/models/sessions/session_spec.rb" time="0.004483"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to belong to position required: true" file="./spec/models/sessions/session_spec.rb" time="0.004467"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session cascades destroy to billing items" file="./spec/models/sessions/session_spec.rb" time="0.217377"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have many measurements" file="./spec/models/sessions/session_spec.rb" time="0.002632"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to belong to patient required: true" file="./spec/models/sessions/session_spec.rb" time="0.004614"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session is expected to have one billing_item class_name =&gt; Billing::Item dependent =&gt; destroy" file="./spec/models/sessions/session_spec.rb" time="0.001956"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_patient only returns currently ongoing sessions for the given patient" file="./spec/models/sessions/session_spec.rb" time="0.189535"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_patient returns currently ongoing sessions for the given patient" file="./spec/models/sessions/session_spec.rb" time="0.106244"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_position only returns currently ongoing sessions for the given position" file="./spec/models/sessions/session_spec.rb" time="0.105307"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_position returns currently ongoing sessions for the given position" file="./spec/models/sessions/session_spec.rb" time="0.105697"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#high_care? returns a boolean indicating if the session is a high care session" file="./spec/models/sessions/session_spec.rb" time="0.022848"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#treatment_phase_started_at returns the timestamp when the treatment started" file="./spec/models/sessions/session_spec.rb" time="0.132461"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#low_care_night? returns a boolean indicating if the sessions is a low care night session " file="./spec/models/sessions/session_spec.rb" time="0.026084"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#low_care? returns a boolean indicating if the sessions is a low care session " file="./spec/models/sessions/session_spec.rb" time="0.026648"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.entered_treatment_phase returns ongoing sessions" file="./spec/models/sessions/session_spec.rb" time="0.276758"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.entered_treatment_phase returns cancelled session for which the treatment phase has been started" file="./spec/models/sessions/session_spec.rb" time="0.568267"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.entered_treatment_phase returns completed sessions" file="./spec/models/sessions/session_spec.rb" time="0.372130"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#signed_off? returns a boolean indicating if the session has been signed off" file="./spec/models/sessions/session_spec.rb" time="0.022124"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#patient_present? returns true for cancelled sessions" file="./spec/models/sessions/session_spec.rb" time="0.136607"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#patient_present? returns true for completed sessions" file="./spec/models/sessions/session_spec.rb" time="0.159649"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#patient_present? returns true for sessions beyond preparation phase" file="./spec/models/sessions/session_spec.rb" time="0.144576"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#patient_present? returns false for unstarted sessions" file="./spec/models/sessions/session_spec.rb" time="0.098691"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#patient_present? returns false for sessions in preparation phase" file="./spec/models/sessions/session_spec.rb" time="0.123330"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing does not return ended sessions" file="./spec/models/sessions/session_spec.rb" time="0.099183"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing returns ongoing sessions" file="./spec/models/sessions/session_spec.rb" time="0.290622"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing does not return cancelled sessions" file="./spec/models/sessions/session_spec.rb" time="0.098955"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#treatment_phase_started? returns true if the treatment started" file="./spec/models/sessions/session_spec.rb" time="0.134281"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#treatment_phase_started? returns false if the treatment hasn&apos;t started" file="./spec/models/sessions/session_spec.rb" time="0.138484"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! carbonizes the billing items" file="./spec/models/sessions/session_spec.rb" time="0.235439"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! signs off the session" file="./spec/models/sessions/session_spec.rb" time="0.120119"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! when the session sign off is billed assigns the user signing off to order billing items" file="./spec/models/sessions/session_spec.rb" time="0.223651"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! when the session sign off is billed assigns the user signing off to session billing items" file="./spec/models/sessions/session_spec.rb" time="0.199405"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! when the attending doctor is billed assigns the attending doctor to session billing items" file="./spec/models/sessions/session_spec.rb" time="0.152009"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#sign_off! when the attending doctor is billed assigns the user signing off to order billing items" file="./spec/models/sessions/session_spec.rb" time="0.211244"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#deletable? returns true for sessions in preparation phase" file="./spec/models/sessions/session_spec.rb" time="0.128748"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#deletable? returns false for sessions beyond preparation phase" file="./spec/models/sessions/session_spec.rb" time="0.135561"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#deletable? returns false for cancelled sessions after connect phase" file="./spec/models/sessions/session_spec.rb" time="0.141223"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#deletable? returns true for cancelled sessions before connect phase" file="./spec/models/sessions/session_spec.rb" time="0.149601"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#deletable? returns true for unstarted sessions" file="./spec/models/sessions/session_spec.rb" time="0.131419"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session#low_care_auto? returns a boolean indicating if the sessions is a low care night session " file="./spec/models/sessions/session_spec.rb" time="0.027082"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_room only returns currently ongoing sessions for the given room &amp; shift" file="./spec/models/sessions/session_spec.rb" time="0.104725"></testcase>
<testcase classname="spec.models.sessions.session_spec" name="Sessions::Session.ongoing_for_room returns currently ongoing sessions for the given room &amp; shift" file="./spec/models/sessions/session_spec.rb" time="0.094898"></testcase>
<testcase classname="spec.requests.medications.get_package_codes_spec" name="GetCodesForAPackage returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_package_codes_spec.rb" time="0.028634"></testcase>
<testcase classname="spec.requests.medications.get_package_codes_spec" name="GetCodesForAPackage returns codes for a package by id" file="./spec/requests/medications/get_package_codes_spec.rb" time="0.110357"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_for_patient_spec" name="GetSessionsForPatient requires read rights" file="./spec/requests/sessions/get_sessions_for_patient_spec.rb" time="0.520078"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_for_patient_spec" name="GetSessionsForPatient returns a sorted list of sessions for the given patient" file="./spec/requests/sessions/get_sessions_for_patient_spec.rb" time="0.804802"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_for_patient_spec" name="GetSessionsForPatient fails if the given patient does not exist" file="./spec/requests/sessions/get_sessions_for_patient_spec.rb" time="0.512809"></testcase>
<testcase classname="spec.requests.sessions.get_sessions_for_patient_spec" name="GetSessionsForPatient returns a paginated list of sessions" file="./spec/requests/sessions/get_sessions_for_patient_spec.rb" time="0.829003"></testcase>
<testcase classname="spec.adapters.patients.patient_adapter_spec" name="Patients::PatientAdapter serializes correctly" file="./spec/adapters/patients/patient_adapter_spec.rb" time="0.056466"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_spec" name="Destroy exportable returns not found (404) if the exportable is not found" file="./spec/requests/exports/destroy_exportable_spec.rb" time="0.030496"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_spec" name="Destroy exportable returns success (200) and the exportable" file="./spec/requests/exports/destroy_exportable_spec.rb" time="0.033094"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_spec" name="Destroy exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/destroy_exportable_spec.rb" time="0.027069"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_spec" name="Destroy exportable returns unprocessable entity (422) when trying to destroy a ready record" file="./spec/requests/exports/destroy_exportable_spec.rb" time="0.029874"></testcase>
<testcase classname="spec.requests.diagnoses.update_diagnosis_spec" name="Patients::Diagnosis returns success (200) and the updated diagnosis" file="./spec/requests/diagnoses/update_diagnosis_spec.rb" time="0.039058"></testcase>
<testcase classname="spec.requests.diagnoses.update_diagnosis_spec" name="Patients::Diagnosis returns not found (404) if the diagnosis is not found" file="./spec/requests/diagnoses/update_diagnosis_spec.rb" time="0.036891"></testcase>
<testcase classname="spec.requests.diagnoses.update_diagnosis_spec" name="Patients::Diagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/diagnoses/update_diagnosis_spec.rb" time="0.030885"></testcase>
<testcase classname="spec.requests.diagnoses.update_diagnosis_spec" name="Patients::Diagnosis returns unprocessable entity (422) if the diagnosis name already exists" file="./spec/requests/diagnoses/update_diagnosis_spec.rb" time="0.046259"></testcase>
<testcase classname="spec.lib.template.builder_spec" name="Template::DefinitionBuilder#default_value properly handles `false` as default value" file="./spec/lib/template/builder_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.models.tasks.task_group_record_spec" name="Tasks::TaskGroupRecord is expected to have many task_records" file="./spec/models/tasks/task_group_record_spec.rb" time="0.001966"></testcase>
<testcase classname="spec.models.tasks.task_group_record_spec" name="Tasks::TaskGroupRecord is expected to belong to session required: true" file="./spec/models/tasks/task_group_record_spec.rb" time="0.003556"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication rejects restart if start and end date overlap" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.134231"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication clears stop reason when restarting stopped medication" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.153350"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication restarts a stopped medication with an `specific_dates` frequency" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.168882"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication rejects restart if start or end date are in the past" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.127433"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication restarts a stopped medication with an end date" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.171464"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication restarts a stopped medication without end date" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.147405"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication cannot restart an active medication" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.107925"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication fails if medication does not exist" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.087122"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication does not change the end date of the stopped medication in the archived copy" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.171466"></testcase>
<testcase classname="spec.requests.medications.restart_intradialytic_medication_spec" name="Medications RestartIntradialyticMedication requires write rights" file="./spec/requests/medications/restart_intradialytic_medication_spec.rb" time="0.114003"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluations_spec" name="GetWoundEvaluation returns evaluations ordered by registration date descending" file="./spec/requests/wounds/get_wound_evaluations_spec.rb" time="0.186098"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluations_spec" name="GetWoundEvaluation returns paginated result" file="./spec/requests/wounds/get_wound_evaluations_spec.rb" time="0.144075"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluations_spec" name="GetWoundEvaluation returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wound_evaluations_spec.rb" time="0.054287"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluations_spec" name="GetWoundEvaluation returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/get_wound_evaluations_spec.rb" time="0.026244"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_prescription_addition_spec" name="Destroy medication prescription addition returns not found (404) if the addition is not found" file="./spec/requests/medications/destroy_medication_prescription_addition_spec.rb" time="0.025602"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_prescription_addition_spec" name="Destroy medication prescription addition returns success (204) if destroyed " file="./spec/requests/medications/destroy_medication_prescription_addition_spec.rb" time="0.030951"></testcase>
<testcase classname="spec.requests.medications.destroy_medication_prescription_addition_spec" name="Destroy medication prescription addition returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/destroy_medication_prescription_addition_spec.rb" time="0.028452"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns unauthorized (401) if the credentials aren&apos;t correct" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.040676"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns created (201) and a JWT" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.041817"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication locks the user and sends an unlock email after too many failed attempts" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.049059"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns unauthorized (401) if the user was soft deleted" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.039496"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication accepts case insensitive login" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.042554"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication creates an audit when the user is locked" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.052373"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns unauthorized (401) if the user is deleted" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.031737"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns unauthorized (401) if user doesn&apos;t exist" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.013487"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication increases `failed_attempts` on invalid credentials" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.038273"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication resets `failed_attempts` on valid credentials" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.041332"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication accepts email as login" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.039553"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication unlocks the user after the cool down period" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.050876"></testcase>
<testcase classname="spec.requests.auth.db.create_authentication_spec" name="Create authentication returns unauthorized (401) when trying to authenticate a locked user" file="./spec/requests/auth/db/create_authentication_spec.rb" time="0.033484"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset for a non-existing user returns unprocessable entity (422) and does not send a password reset email by email" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.014478"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset for a non-existing user returns unprocessable entity (422) and does not send a password reset email by username" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.021499"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset paranoid mode returns created (201) for an existing user" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.034711"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset paranoid mode returns created (201) for a non-existing user" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.013108"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset for an existing user returns created (201), sends a password reset email and sets reset token by email" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.036643"></testcase>
<testcase classname="spec.requests.devise.passwords.create_password_spec" name="Request password reset for an existing user returns created (201), sends a password reset email and sets reset token by username" file="./spec/requests/devise/passwords/create_password_spec.rb" time="0.036146"></testcase>
<testcase classname="spec.requests.devices.get_heat_disinfections_spec" name="Devices::Device returns heat disinfections for a device with an internal hds" file="./spec/requests/devices/get_heat_disinfections_spec.rb" time="0.044680"></testcase>
<testcase classname="spec.requests.devices.get_heat_disinfections_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_heat_disinfections_spec.rb" time="0.034187"></testcase>
<testcase classname="spec.lib.validators.max_length_validator_spec" name="Validators::MaxLengthValidator accepts values with length lower than max" file="./spec/lib/validators/max_length_validator_spec.rb" time="0.001570"></testcase>
<testcase classname="spec.lib.validators.max_length_validator_spec" name="Validators::MaxLengthValidator rejects values too long" file="./spec/lib/validators/max_length_validator_spec.rb" time="0.002057"></testcase>
<testcase classname="spec.requests.sessions.get_session_spec" name="Sessions requires read rights" file="./spec/requests/sessions/get_session_spec.rb" time="0.125387"></testcase>
<testcase classname="spec.requests.sessions.get_session_spec" name="Sessions fails when given session does not exist" file="./spec/requests/sessions/get_session_spec.rb" time="0.030777"></testcase>
<testcase classname="spec.requests.sessions.get_session_spec" name="Sessions returns the given session" file="./spec/requests/sessions/get_session_spec.rb" time="0.179728"></testcase>
<testcase classname="spec.lib.health.multi_health_checker_spec" name="Health::MultiHealthChecker#check with a single unhealthy checker returns an unhealthy result" file="./spec/lib/health/multi_health_checker_spec.rb" time="0.001829"></testcase>
<testcase classname="spec.lib.health.multi_health_checker_spec" name="Health::MultiHealthChecker#check with all healthy checkers returns a JSON-ready summary" file="./spec/lib/health/multi_health_checker_spec.rb" time="0.001829"></testcase>
<testcase classname="spec.lib.health.multi_health_checker_spec" name="Health::MultiHealthChecker#check with all healthy checkers returns a healthy result" file="./spec/lib/health/multi_health_checker_spec.rb" time="0.001775"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.031474"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable returns unprocessable entity (422) when syncing a ready exportable" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.050342"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable returns unprocessable entity (422) when syncing an exported exportable" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.036671"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable touches the exportable timestamp" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.047110"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable returns not found (404) if the exportable isn&apos;t found" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.028181"></testcase>
<testcase classname="spec.requests.exports.sync_exportable_spec" name="Sync exportable returns success (200) and updates the billing item data" file="./spec/requests/exports/sync_exportable_spec.rb" time="0.343027"></testcase>
<testcase classname="spec.models.code_spec" name="Code is expected to validate that :code cannot be empty/falsy" file="./spec/models/code_spec.rb" time="0.009021"></testcase>
<testcase classname="spec.models.code_spec" name="Code is expected to belong to code_system required: true" file="./spec/models/code_spec.rb" time="0.006547"></testcase>
<testcase classname="spec.models.code_spec" name="Code is expected to have many codable_codes dependent =&gt; destroy" file="./spec/models/code_spec.rb" time="0.002471"></testcase>
<testcase classname="spec.models.code_spec" name="Code is expected to validate that :description cannot be empty/falsy" file="./spec/models/code_spec.rb" time="0.007698"></testcase>
<testcase classname="spec.models.code_spec" name="Code is expected to validate that :code is case-sensitively unique within the scope of :code_system_id" file="./spec/models/code_spec.rb" time="0.022477"></testcase>
<testcase classname="spec.models.code_spec" name="Code.get_used_code_system_names returns a collection code system names that are used for a codable" file="./spec/models/code_spec.rb" time="0.091012"></testcase>
<testcase classname="spec.validators.practitioner_validator_spec" name="PractitionerValidator is expected to be valid" file="./spec/validators/practitioner_validator_spec.rb" time="0.133807"></testcase>
<testcase classname="spec.validators.practitioner_validator_spec" name="PractitionerValidator when prescriber is nil is expected not to be valid" file="./spec/validators/practitioner_validator_spec.rb" time="0.041444"></testcase>
<testcase classname="spec.validators.practitioner_validator_spec" name="PractitionerValidator when prescriber is a doctor without practitioner identifier is expected not to be valid" file="./spec/validators/practitioner_validator_spec.rb" time="0.046514"></testcase>
<testcase classname="spec.validators.practitioner_validator_spec" name="PractitionerValidator when prescriber is a nurse is expected not to be valid" file="./spec/validators/practitioner_validator_spec.rb" time="0.046850"></testcase>
<testcase classname="spec.validators.practitioner_validator_spec" name="PractitionerValidator when a prescriber attribute is specified is expected not to be valid" file="./spec/validators/practitioner_validator_spec.rb" time="0.061603"></testcase>
<testcase classname="spec.requests.vascular_access.update_site_hemostasis_default_spec" name="UpdateAccessSiteHemostasisDefault updates the hemostasis_default with correct data" file="./spec/requests/vascular_access/update_site_hemostasis_default_spec.rb" time="0.204608"></testcase>
<testcase classname="spec.requests.vascular_access.update_site_hemostasis_default_spec" name="UpdateAccessSiteHemostasisDefault returns (404) if the access site is not found" file="./spec/requests/vascular_access/update_site_hemostasis_default_spec.rb" time="0.090089"></testcase>
<testcase classname="spec.requests.vascular_access.update_site_hemostasis_default_spec" name="UpdateAccessSiteHemostasisDefault returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/update_site_hemostasis_default_spec.rb" time="0.156459"></testcase>
<testcase classname="spec.requests.vascular_access.update_site_hemostasis_default_spec" name="UpdateAccessSiteHemostasisDefault fails updating if the data is incorrect" file="./spec/requests/vascular_access/update_site_hemostasis_default_spec.rb" time="0.184195"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination returns (422) if the parameters for a fistula / graft are not valid" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.178170"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination returns no warnings when an examination is positive" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.191039"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination returns (422) if the access site is a catheter" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.175377"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination creates complication for ischaemia when registered in examination" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.256695"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination when no complication, don&apos;t register complications" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.250231"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination successfully creates an examination for a graft" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.223668"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination successfully creates an examination for a fistula" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.216944"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination returns (404) if the access site is not found" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.093781"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination creates complications when registered in examinations" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.308755"></testcase>
<testcase classname="spec.requests.vascular_access.create_vascular_access_site_examination_spec" name="CreateAccessSiteExamination returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/create_vascular_access_site_examination_spec.rb" time="0.187519"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence checks that start date is before end date" file="./spec/models/planning/absence_spec.rb" time="0.002766"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence is expected to belong to patient required: true" file="./spec/models/planning/absence_spec.rb" time="0.003934"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence is expected to validate that :end_date cannot be empty/falsy" file="./spec/models/planning/absence_spec.rb" time="0.004733"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence is expected to validate that :start_date cannot be empty/falsy" file="./spec/models/planning/absence_spec.rb" time="0.004746"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence.active_for_patient returns active absences for the given patient" file="./spec/models/planning/absence_spec.rb" time="0.065861"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence.active_for_patient returns future absences for the given patient" file="./spec/models/planning/absence_spec.rb" time="0.079434"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence.active_for_patient does not return past absences for the given patient" file="./spec/models/planning/absence_spec.rb" time="0.060948"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence.active_for_patient returns active absences ending today" file="./spec/models/planning/absence_spec.rb" time="0.062502"></testcase>
<testcase classname="spec.models.planning.absence_spec" name="Planning::Absence.active_for_patient only returns absences for the given patient" file="./spec/models/planning/absence_spec.rb" time="0.113833"></testcase>
<testcase classname="spec.requests.add_code_to_codable_spec" name="Add Code to a Codable returns not found (401) when using an unknown codable type" file="./spec/requests/add_code_to_codable_spec.rb" time="0.057136"></testcase>
<testcase classname="spec.requests.add_code_to_codable_spec" name="Add Code to a Codable returns success (200) and adds the code to the product" file="./spec/requests/add_code_to_codable_spec.rb" time="0.079830"></testcase>
<testcase classname="spec.requests.add_code_to_codable_spec" name="Add Code to a Codable returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/add_code_to_codable_spec.rb" time="0.056045"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.031701"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.035024"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route also adds codes" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.085100"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route returns success (200) and creates the route when in in a unsupervised source" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.044256"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route returns unprocessable entity (422) when creating doubles" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.054366"></testcase>
<testcase classname="spec.requests.medications.create_administration_route_spec" name="Create Administration Route returns not found (404) when using an undefined source" file="./spec/requests/medications/create_administration_route_spec.rb" time="0.029273"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient returns medications for products and magistral preparations" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.213123"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient returns medications for the given patient" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.144550"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient requires read rights" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.067669"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient returns medications with variable dose" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.159516"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient returns several medications ordered by product name" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.214677"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient does not return active medications if status equals &apos;stopped&apos;" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.173633"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_medication_for_patient_spec" name="Get intradialytic medication for patient returns latest medications for the given patient" file="./spec/requests/medications/get_intradialytic_medication_for_patient_spec.rb" time="0.177893"></testcase>
<testcase classname="spec.models.chronos.services.device_sync_spec" name="Chronos::Services::DeviceSync updates the device with the device info from chronos" file="./spec/models/chronos/services/device_sync_spec.rb" time="0.020761"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachment_spec" name="GetAccessSiteAttachment returns the site attachment" file="./spec/requests/vascular_access/get_vascular_access_site_attachment_spec.rb" time="0.217989"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachment_spec" name="GetAccessSiteAttachment returns not_found (404) if the site attachment cannot be found" file="./spec/requests/vascular_access/get_vascular_access_site_attachment_spec.rb" time="0.028544"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachment_spec" name="GetAccessSiteAttachment returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_vascular_access_site_attachment_spec.rb" time="0.193048"></testcase>
<testcase classname="spec.models.billing.services.bill_medication_spec" name="Billing::Services::BillMedication creates a billing item for the medication" file="./spec/models/billing/services/bill_medication_spec.rb" time="0.208377"></testcase>
<testcase classname="spec.models.billing.services.bill_medication_spec" name="Billing::Services::BillMedication carbonizes billing items" file="./spec/models/billing/services/bill_medication_spec.rb" time="0.180864"></testcase>
<testcase classname="spec.models.billing.services.bill_medication_spec" name="Billing::Services::BillMedication does not bill a medication administration twice" file="./spec/models/billing/services/bill_medication_spec.rb" time="0.223125"></testcase>
<testcase classname="spec.requests.devices.delete_device_spec" name="Devices::Device returns not found (404) if the device is not found" file="./spec/requests/devices/delete_device_spec.rb" time="0.036980"></testcase>
<testcase classname="spec.requests.devices.delete_device_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/delete_device_spec.rb" time="0.049986"></testcase>
<testcase classname="spec.requests.devices.delete_device_spec" name="Devices::Device audits the destroy action" file="./spec/requests/devices/delete_device_spec.rb" time="0.044347"></testcase>
<testcase classname="spec.requests.devices.delete_device_spec" name="Devices::Device returns success (200)" file="./spec/requests/devices/delete_device_spec.rb" time="0.053673"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route returns method not allowed (405) when updating within a supervised source" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.046263"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.039397"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route returns success (200) and an updated administration route" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.048484"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route can also update codes" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.090622"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route return success (200) when reusing a name from a different source" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.054800"></testcase>
<testcase classname="spec.requests.medications.update_administration_route_spec" name="Update administration route returns unprocessable entity (422) when reusing a name within same source" file="./spec/requests/medications/update_administration_route_spec.rb" time="0.051936"></testcase>
<testcase classname="spec.requests.wounds.update_wound_prescription_spec" name="Prescriptions UpdateWoundPrescription returns an OK response if update succeeded" file="./spec/requests/wounds/update_wound_prescription_spec.rb" time="0.187497"></testcase>
<testcase classname="spec.requests.wounds.update_wound_prescription_spec" name="Prescriptions UpdateWoundPrescription returns errors if update failed" file="./spec/requests/wounds/update_wound_prescription_spec.rb" time="0.134296"></testcase>
<testcase classname="spec.requests.wounds.update_wound_prescription_spec" name="Prescriptions UpdateWoundPrescription returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/update_wound_prescription_spec.rb" time="0.097479"></testcase>
<testcase classname="spec.requests.medications.create_medication_administration_spec" name="AddMedicationAdministration returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/create_medication_administration_spec.rb" time="0.083474"></testcase>
<testcase classname="spec.requests.medications.create_medication_administration_spec" name="AddMedicationAdministration returns success (200) if add " file="./spec/requests/medications/create_medication_administration_spec.rb" time="0.175032"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results deletes lab order when the diagnostic report status is `cancelled`" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.173349"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results stores observation value in the system unit" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.273857"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results does store inr parameter with invalid unit" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.122711"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results stores observations with a unit in a custom defined dialect" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.134424"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results does not work in orders without valid observations" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.145448"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results doesn&apos;t store an observation when no mapping exists" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.117406"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results when processing textual lab values does not store textual values when not configured" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.114224"></testcase>
<testcase classname="spec.requests.integration.create_lab_results_spec" name="Update lab results when processing textual lab values stores textual values when setting the show textual values configuration" file="./spec/requests/integration/create_lab_results_spec.rb" time="0.125195"></testcase>
<testcase classname="spec.models.wounds.wound_prescription_spec" name="Wounds::WoundPrescription#perform! consumes each prescribed disposable" file="./spec/models/wounds/wound_prescription_spec.rb" time="0.132471"></testcase>
<testcase classname="spec.models.charts.ultrafiltration_history_spec" name="Charts::UltrafiltrationHistory#call returns the patient&apos;s UF for the last five sessions" file="./spec/models/charts/ultrafiltration_history_spec.rb" time="0.056930"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns the list of session orders" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.152197"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns the orders that belong to the session" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.250940"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns a unique set of actors" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.198599"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns an empty list when there are no orders" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.139532"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.118462"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns the orders with their correct status" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.166529"></testcase>
<testcase classname="spec.requests.sessions.get_session_orders_spec" name="GetSessionOrders returns the list of session orders and not other tasks" file="./spec/requests/sessions/get_session_orders_spec.rb" time="0.150004"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.new_ultrafiltration_calculation_spec" name="New ultrafiltration calculation returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/ultrafiltration_calculation/new_ultrafiltration_calculation_spec.rb" time="0.165977"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.new_ultrafiltration_calculation_spec" name="New ultrafiltration calculation returns 404 not found if the session cannot be found" file="./spec/requests/ultrafiltration_calculation/new_ultrafiltration_calculation_spec.rb" time="0.030437"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.new_ultrafiltration_calculation_spec" name="New ultrafiltration calculation returns a new ultrafiltration calculation for the given session" file="./spec/requests/ultrafiltration_calculation/new_ultrafiltration_calculation_spec.rb" time="0.210965"></testcase>
<testcase classname="spec.requests.context_links.destroy_context_link_spec" name="Destroy context link returns not found (404) if the context link is not found" file="./spec/requests/context_links/destroy_context_link_spec.rb" time="0.027802"></testcase>
<testcase classname="spec.requests.context_links.destroy_context_link_spec" name="Destroy context link returns no content (204)" file="./spec/requests/context_links/destroy_context_link_spec.rb" time="0.034815"></testcase>
<testcase classname="spec.requests.context_links.destroy_context_link_spec" name="Destroy context link returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/context_links/destroy_context_link_spec.rb" time="0.026268"></testcase>
<testcase classname="spec.requests.context_links.update_context_link_spec" name="Update context link returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/context_links/update_context_link_spec.rb" time="0.026572"></testcase>
<testcase classname="spec.requests.context_links.update_context_link_spec" name="Update context link templated links returns success (200) and the context link" file="./spec/requests/context_links/update_context_link_spec.rb" time="0.035200"></testcase>
<testcase classname="spec.requests.context_links.update_context_link_spec" name="Update context link xperthis care links returns unprocessable entity (422) if the options are invalid" file="./spec/requests/context_links/update_context_link_spec.rb" time="0.033998"></testcase>
<testcase classname="spec.requests.context_links.update_context_link_spec" name="Update context link xperthis care links returns success (200) and the context link" file="./spec/requests/context_links/update_context_link_spec.rb" time="0.036323"></testcase>
<testcase classname="spec.requests.context_links.update_context_link_spec" name="Update context link static links returns success (200) and the context link" file="./spec/requests/context_links/update_context_link_spec.rb" time="0.034186"></testcase>
<testcase classname="spec.models.reports.home_medication_schedule_pdf_spec" name="Home medication schedule gets a pdf with the home medication schedule" file="./spec/models/reports/home_medication_schedule_pdf_spec.rb" time="0.181702"></testcase>
<testcase classname="spec.models.wounds.wound_spec" name="Wounds::Wound is expected to validate that :location cannot be empty/falsy" file="./spec/models/wounds/wound_spec.rb" time="0.009572"></testcase>
<testcase classname="spec.models.wounds.wound_spec" name="Wounds::Wound is expected to validate that :type is either ‹:arterial_ulcer›, ‹:venous_ulcers›, ‹:intertrigo›, ‹:skin_tear›, ‹:diabetic_foot›, ‹:chafe›, ‹:surgical_wound›, or ‹:other›" file="./spec/models/wounds/wound_spec.rb" time="0.016058"></testcase>
<testcase classname="spec.models.wounds.wound_spec" name="Wounds::Wound is expected to validate that :type cannot be empty/falsy" file="./spec/models/wounds/wound_spec.rb" time="0.009780"></testcase>
<testcase classname="spec.models.wounds.wound_spec" name="Wounds::Wound is expected to have many evaluations" file="./spec/models/wounds/wound_spec.rb" time="0.002170"></testcase>
<testcase classname="spec.models.wounds.wound_spec" name="Wounds::Wound is expected to belong to patient required: true" file="./spec/models/wounds/wound_spec.rb" time="0.005504"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit resource audits fails if resource does not exist" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.082016"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit resource audits returns last audit entry" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.077066"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit resource audits fails if resource type is not valid" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.071147"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit prescription parameter audits fails if no value exist for the given parameter" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.088747"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit prescription parameter audits returns last audit for entry for prescription parameter" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.243398"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit prescription parameter audits fails if &apos;patient_id&apos; query param is missing" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.063776"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit for patient treatment audits returns audit for last treatment change" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.158881"></testcase>
<testcase classname="spec.requests.audits.get_last_audit_spec" name="Last audit for patient treatment audits fails if the treatment wasn&apos;t changed before" file="./spec/requests/audits/get_last_audit_spec.rb" time="0.034479"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluation_spec" name="GetWoundEvaluation returns all evaluations for a given wound" file="./spec/requests/wounds/get_wound_evaluation_spec.rb" time="0.080196"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluation_spec" name="GetWoundEvaluation returns not_found (404) if the wound evaluation cannot be found" file="./spec/requests/wounds/get_wound_evaluation_spec.rb" time="0.028035"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluation_spec" name="GetWoundEvaluation returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/get_wound_evaluation_spec.rb" time="0.071060"></testcase>
<testcase classname="spec.requests.wounds.get_wound_evaluation_spec" name="GetWoundEvaluation returns the wound evaluation picture" file="./spec/requests/wounds/get_wound_evaluation_spec.rb" time="0.181398"></testcase>
<testcase classname="spec.integrations.executions.codes.double_create_code_by_system_spec" name="Double Create Code by Codable returns the new code after a previous code for same system was deleted" file="./spec/integrations/executions/codes/double_create_code_by_system_spec.rb" time="0.179453"></testcase>
<testcase classname="spec.integrations.executions.maestro.billing_spec" name="Asynchronous billing export exports the billing exportable" file="./spec/integrations/executions/maestro/billing_spec.rb" time="0.535596"></testcase>
<testcase classname="spec.integrations.executions.maestro.billing_spec" name="Asynchronous billing export adds an execution to the queue" file="./spec/integrations/executions/maestro/billing_spec.rb" time="0.327922"></testcase>
<testcase classname="spec.requests.patients.delete_patient_avatar_spec" name="DeletePatientAvatar deletes a patient&apos;s avatar" file="./spec/requests/patients/delete_patient_avatar_spec.rb" time="0.229153"></testcase>
<testcase classname="spec.requests.patients.delete_patient_avatar_spec" name="DeletePatientAvatar returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/delete_patient_avatar_spec.rb" time="0.228567"></testcase>
<testcase classname="spec.requests.patients.delete_patient_avatar_spec" name="DeletePatientAvatar deletes even if patient has no avatar" file="./spec/requests/patients/delete_patient_avatar_spec.rb" time="0.090481"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_technique_spec" name="DeleteVascularAccessSiteTechnique returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/delete_vascular_access_site_technique_spec.rb" time="0.035223"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_technique_spec" name="DeleteVascularAccessSiteTechnique deletes the specified access site technique if status is permanently_removed" file="./spec/requests/vascular_access/delete_vascular_access_site_technique_spec.rb" time="0.036403"></testcase>
<testcase classname="spec.requests.vascular_access.delete_vascular_access_site_technique_spec" name="DeleteVascularAccessSiteTechnique returns not_found (404) if the access site technique cannot be found" file="./spec/requests/vascular_access/delete_vascular_access_site_technique_spec.rb" time="0.026435"></testcase>
<testcase classname="spec.requests.update_contact_spec" name="UpdateContact fails if contact does not exist" file="./spec/requests/update_contact_spec.rb" time="0.025232"></testcase>
<testcase classname="spec.requests.update_contact_spec" name="UpdateContact fails if new contact info is invalid" file="./spec/requests/update_contact_spec.rb" time="0.088447"></testcase>
<testcase classname="spec.requests.update_contact_spec" name="UpdateContact updates the given contact" file="./spec/requests/update_contact_spec.rb" time="0.098141"></testcase>
<testcase classname="spec.requests.update_contact_spec" name="UpdateContact denies updating if not granted" file="./spec/requests/update_contact_spec.rb" time="0.073143"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_item_spec" name="GetMedicationsFormularyItem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/formulary_items/get_formulary_item_spec.rb" time="0.033788"></testcase>
<testcase classname="spec.requests.medications.formulary_items.get_formulary_item_spec" name="GetMedicationsFormularyItem returns a formulary items" file="./spec/requests/medications/formulary_items/get_formulary_item_spec.rb" time="0.043328"></testcase>
<testcase classname="spec.requests.patients.get_identifier_spec" name="GetPatientIdentifier returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_identifier_spec.rb" time="0.058726"></testcase>
<testcase classname="spec.requests.patients.get_identifier_spec" name="GetPatientIdentifier returns an identification number" file="./spec/requests/patients/get_identifier_spec.rb" time="0.093157"></testcase>
<testcase classname="spec.requests.logbook.update_logbook_entry_tags_spec" name="UpdateLogbookEntry returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/logbook/update_logbook_entry_tags_spec.rb" time="0.178897"></testcase>
<testcase classname="spec.requests.logbook.update_logbook_entry_tags_spec" name="UpdateLogbookEntry returns not_found (404) if the journal entry cannot be found" file="./spec/requests/logbook/update_logbook_entry_tags_spec.rb" time="0.159337"></testcase>
<testcase classname="spec.requests.logbook.update_logbook_entry_tags_spec" name="UpdateLogbookEntry updates an existing logbook entry" file="./spec/requests/logbook/update_logbook_entry_tags_spec.rb" time="0.165537"></testcase>
<testcase classname="spec.requests.logbook.update_logbook_entry_tags_spec" name="UpdateLogbookEntry updates an existing logbook entry with an empty list of tags" file="./spec/requests/logbook/update_logbook_entry_tags_spec.rb" time="0.148699"></testcase>
<testcase classname="spec.models.vascular_access.site_examinations_spec" name="VascularAccess::SiteExamination is expected to have many images" file="./spec/models/vascular_access/site_examinations_spec.rb" time="0.002110"></testcase>
<testcase classname="spec.models.vascular_access.site_examinations_spec" name="VascularAccess::SiteExamination is expected to belong to site required: true" file="./spec/models/vascular_access/site_examinations_spec.rb" time="0.012123"></testcase>
<testcase classname="spec.models.vascular_access.site_examinations_spec" name="VascularAccess::SiteExamination is expected to belong to examined_by required: true" file="./spec/models/vascular_access/site_examinations_spec.rb" time="0.010793"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites fails if technique is invalid" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.162973"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites creates a new vascular access site" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.167681"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites saves metadata for catheter" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.201470"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites requires write rights" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.104937"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites updates audit information" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.213046"></testcase>
<testcase classname="spec.requests.patients.create_patient_vascular_access_sites_spec" name="CreateVascularAccessSites fails if patient does not exist" file="./spec/requests/patients/create_patient_vascular_access_sites_spec.rb" time="0.168836"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_acl_spec" name="CreateCenterAcl fails when the acl already exists" file="./spec/requests/infrastructure/create_center_acl_spec.rb" time="0.129425"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_acl_spec" name="CreateCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_center_acl_spec.rb" time="0.057344"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_acl_spec" name="CreateCenterAcl returns not found (404) if the center is not found" file="./spec/requests/infrastructure/create_center_acl_spec.rb" time="0.063200"></testcase>
<testcase classname="spec.requests.infrastructure.create_center_acl_spec" name="CreateCenterAcl creates a center acl" file="./spec/requests/infrastructure/create_center_acl_spec.rb" time="0.087106"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to belong to galenic_term optional: true" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.003020"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to belong to medicinal_product optional: true" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.002204"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to have many variant_ingredients" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.003166"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to have carbon :id, :quantities, :galenic_form, and :medicinal_product" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.003101"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to have many medicinal_product_packages" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.002646"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to have many medication_administration" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.002341"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant is expected to have many formulary_items through medicinal_product_packages" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.002076"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant#formulary_item returns nil when there are no packages linked to a formulary item" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.046098"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant#formulary_item returns the formulary item when there is at least one package linked to a formulary item" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.047594"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant.in_formulary returns all medicinal variants that have a matching formulary item" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.116937"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant#in_formulary? returns false when there are no packages linked to a formulary item" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.040999"></testcase>
<testcase classname="spec.models.medications.medicinal_variant_spec" name="Medications::MedicinalVariant#in_formulary? returns true when there is at least one package linked to a formulary item" file="./spec/models/medications/medicinal_variant_spec.rb" time="0.058996"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus is expected to have many patient_transplant_eligibility_statuses" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.001974"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus is expected to validate that :name cannot be empty/falsy" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.007356"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus#is_use? is false when new" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.007802"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus#is_use? is true when in use" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.036442"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus#discard! hard deletes when not in use" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.015018"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus#discard! soft deletes when in use" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.042043"></testcase>
<testcase classname="spec.models.patients.transplant_eligibility_status_spec" name="Patients::TransplantEligibilityStatus name validates uniqueness" file="./spec/models/patients/transplant_eligibility_status_spec.rb" time="0.011577"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis filters by shift_id if one was specified" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.660033"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis does not include patients that have no medication prescriptions" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.912728"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis filters by center_id if one was specified" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.675423"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis multiplies the quantity with the session count" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.696724"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis does not include absent patients" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.633749"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis does not include patients that have no planned sessions" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.798363"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis filters by medicinal_product_id if one was specified" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.760940"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis filters by room_id if one was specified" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.635398"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis contains patients with medication products and variants" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.698801"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis deviations includes patients with deviations (removed session)" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.559225"></testcase>
<testcase classname="spec.models.exports.exporters.medication_administration_prognosis_spec" name="Exports::Exporters::MedicationAdministrationPrognosis deviations includes patients with deviations (added session)" file="./spec/models/exports/exporters/medication_administration_prognosis_spec.rb" time="0.620666"></testcase>
<testcase classname="spec.requests.patients.get_transport_types_spec" name="Get transport types returns success (200) and archived transport types" file="./spec/requests/patients/get_transport_types_spec.rb" time="0.043968"></testcase>
<testcase classname="spec.requests.patients.get_transport_types_spec" name="Get transport types returns success (200) and transport types" file="./spec/requests/patients/get_transport_types_spec.rb" time="0.036634"></testcase>
<testcase classname="spec.requests.patients.get_transport_types_spec" name="Get transport types returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/patients/get_transport_types_spec.rb" time="0.033610"></testcase>
<testcase classname="spec.requests.patients.get_transport_types_spec" name="Get transport types returns success (200) and active transport types" file="./spec/requests/patients/get_transport_types_spec.rb" time="0.038757"></testcase>
<testcase classname="spec.models.reports.session_visitor_spec" name="Reports::SessionsVisitor gives priority to patient id" file="./spec/models/reports/session_visitor_spec.rb" time="0.609386"></testcase>
<testcase classname="spec.models.reports.session_visitor_spec" name="Reports::SessionsVisitor yields only billable sessions" file="./spec/models/reports/session_visitor_spec.rb" time="0.832655"></testcase>
<testcase classname="spec.models.reports.session_visitor_spec" name="Reports::SessionsVisitor yields only sessions for the given center" file="./spec/models/reports/session_visitor_spec.rb" time="1.771532"></testcase>
<testcase classname="spec.models.reports.session_visitor_spec" name="Reports::SessionsVisitor yields sessions for the given patient" file="./spec/models/reports/session_visitor_spec.rb" time="1.293455"></testcase>
<testcase classname="spec.models.reports.session_visitor_spec" name="Reports::SessionsVisitor yields sessions grouped and ordered by patient" file="./spec/models/reports/session_visitor_spec.rb" time="1.667257"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder updates order for product" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.271771"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder fails if a prescription was already created" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.204237"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder fails if order item does not exit" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.083285"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder updates order and removes unused items" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.252212"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder updates order for magistral preparation" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.206188"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder updates order and adds new items" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.272520"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder denies update if not granted" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.147371"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder updates order and removes unused items" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.207231"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder fails if user is not granted" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.207145"></testcase>
<testcase classname="spec.requests.medications.update_home_medication_order_spec" name="Medications UpdateHomeMedicationOrder fails if patient does not exist" file="./spec/requests/medications/update_home_medication_order_spec.rb" time="0.187615"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_history_spec" name="Medications GetMedicationHistory returns an ordered list of product medications" file="./spec/requests/medications/get_home_medication_history_spec.rb" time="0.250084"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_history_spec" name="Medications GetMedicationHistory denies getting history if not granted" file="./spec/requests/medications/get_home_medication_history_spec.rb" time="0.094543"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_history_spec" name="Medications GetMedicationHistory returns a list of magistral preparationss" file="./spec/requests/medications/get_home_medication_history_spec.rb" time="0.092064"></testcase>
<testcase classname="spec.jobs.summarize_session_job_spec" name="SummarizeSessionJob summarizes the session" file="./spec/jobs/summarize_session_job_spec.rb" time="0.129760"></testcase>
<testcase classname="spec.jobs.summarize_session_job_spec" name="SummarizeSessionJob when session summary is disabled does not call SendSessionSummaryJob" file="./spec/jobs/summarize_session_job_spec.rb" time="0.130946"></testcase>
<testcase classname="spec.jobs.summarize_session_job_spec" name="SummarizeSessionJob when session summary frequency is set to &apos;always&apos; calls SendSessionSummaryJob" file="./spec/jobs/summarize_session_job_spec.rb" time="0.142926"></testcase>
<testcase classname="spec.jobs.summarize_session_job_spec" name="SummarizeSessionJob when session summary is set to &apos;adhoc&apos; does not call SendSessionSummaryJob" file="./spec/jobs/summarize_session_job_spec.rb" time="0.152709"></testcase>
<testcase classname="spec.models.configurations.services.reset_spec" name="Configurations::Services::Reset resets the configuration to original values" file="./spec/models/configurations/services/reset_spec.rb" time="0.014220"></testcase>
<testcase classname="spec.models.configurations.string_spec" name="Configurations::String casts to string" file="./spec/models/configurations/string_spec.rb" time="0.007227"></testcase>
<testcase classname="spec.models.configurations.string_spec" name="Configurations::String when `allowed_values` is set disallows non-listed values" file="./spec/models/configurations/string_spec.rb" time="0.009735"></testcase>
<testcase classname="spec.models.configurations.string_spec" name="Configurations::String when `allowed_values` is set allows listed values" file="./spec/models/configurations/string_spec.rb" time="0.009817"></testcase>
<testcase classname="spec.requests.billing_codes.update_billing_codes_spec" name="Billing::Code audits the update action" file="./spec/requests/billing_codes/update_billing_codes_spec.rb" time="0.040530"></testcase>
<testcase classname="spec.requests.billing_codes.update_billing_codes_spec" name="Billing::Code returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/billing_codes/update_billing_codes_spec.rb" time="0.030997"></testcase>
<testcase classname="spec.requests.billing_codes.update_billing_codes_spec" name="Billing::Code returns not found (404) if the billing code is not found" file="./spec/requests/billing_codes/update_billing_codes_spec.rb" time="0.030247"></testcase>
<testcase classname="spec.requests.billing_codes.update_billing_codes_spec" name="Billing::Code returns success (200) and the updated billing_code" file="./spec/requests/billing_codes/update_billing_codes_spec.rb" time="0.047554"></testcase>
<testcase classname="spec.requests.briefings.briefing_participants_spec" name="BriefingParticipants when retrieving participants returns all participants sorted by username" file="./spec/requests/briefings/briefing_participants_spec.rb" time="0.112678"></testcase>
<testcase classname="spec.requests.briefings.briefing_participants_spec" name="BriefingParticipants when retrieving participants returns an empty list if no participant is set" file="./spec/requests/briefings/briefing_participants_spec.rb" time="0.051096"></testcase>
<testcase classname="spec.requests.briefings.briefing_participants_spec" name="BriefingParticipants when retrieving participants fails if the given briefing does not exist" file="./spec/requests/briefings/briefing_participants_spec.rb" time="0.025324"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company is expected to have many products dependent =&gt; destroy" file="./spec/models/medications/company_spec.rb" time="0.002435"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/company_spec.rb" time="0.007686"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company is expected to validate that :name is case-sensitively unique within the scope of :source_id" file="./spec/models/medications/company_spec.rb" time="0.018987"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/company_spec.rb" time="0.007712"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company is expected to belong to source required: true" file="./spec/models/medications/company_spec.rb" time="0.004667"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company.most_used returns the top used item when 1 limit is given" file="./spec/models/medications/company_spec.rb" time="0.154481"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company.most_used returns only used items" file="./spec/models/medications/company_spec.rb" time="0.042279"></testcase>
<testcase classname="spec.models.medications.company_spec" name="Medications::Company.most_used accepts a source to limit the initial group" file="./spec/models/medications/company_spec.rb" time="0.108999"></testcase>
<testcase classname="spec.requests.users.deactivate_role_spec" name="DeactivateRole soft-deletes a role" file="./spec/requests/users/deactivate_role_spec.rb" time="0.044860"></testcase>
<testcase classname="spec.requests.users.deactivate_role_spec" name="DeactivateRole soft delete an admin role" file="./spec/requests/users/deactivate_role_spec.rb" time="0.045011"></testcase>
<testcase classname="spec.requests.users.deactivate_role_spec" name="DeactivateRole rejects soft-deletes for used roles" file="./spec/requests/users/deactivate_role_spec.rb" time="0.043878"></testcase>
<testcase classname="spec.requests.users.deactivate_role_spec" name="DeactivateRole denies role soft-deletion if not granted" file="./spec/requests/users/deactivate_role_spec.rb" time="0.034048"></testcase>
<testcase classname="spec.requests.users.deactivate_role_spec" name="DeactivateRole denies update if role does not exist" file="./spec/requests/users/deactivate_role_spec.rb" time="0.057954"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder returns the given sent order" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.158653"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder requires read rights" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.084667"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder fails if patient does not exist" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.092233"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder fails get if medication order is not found" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.081222"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder returns the given order with sent items" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.166357"></testcase>
<testcase classname="spec.requests.medications.get_home_medication_order_spec" name="Medications GetHomeMedicationOrder returns the given draft order" file="./spec/requests/medications/get_home_medication_order_spec.rb" time="0.143036"></testcase>
<testcase classname="spec.requests.patients.create_transplant_eligibility_status_spec" name="Create transplant eligibility status return unprocessable entity (422) when reusing a name" file="./spec/requests/patients/create_transplant_eligibility_status_spec.rb" time="0.032908"></testcase>
<testcase classname="spec.requests.patients.create_transplant_eligibility_status_spec" name="Create transplant eligibility status returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/patients/create_transplant_eligibility_status_spec.rb" time="0.027131"></testcase>
<testcase classname="spec.requests.patients.create_transplant_eligibility_status_spec" name="Create transplant eligibility status returns created (200) and the transplant eligibility status" file="./spec/requests/patients/create_transplant_eligibility_status_spec.rb" time="0.028591"></testcase>
<testcase classname="spec.integrations.executions.recip_e.base_spec" name="Asynchronous Recip-e executions sets an exception on order when the Recip-e command fails" file="./spec/integrations/executions/recip_e/base_spec.rb" time="0.391983"></testcase>
<testcase classname="spec.requests.logbook.delete_tags_spec" name="DeleteTag fails deletion when tag not found" file="./spec/requests/logbook/delete_tags_spec.rb" time="0.027685"></testcase>
<testcase classname="spec.requests.logbook.delete_tags_spec" name="DeleteTag rejects tag deletion if not granted" file="./spec/requests/logbook/delete_tags_spec.rb" time="0.030309"></testcase>
<testcase classname="spec.requests.logbook.delete_tags_spec" name="DeleteTag delete a tag" file="./spec/requests/logbook/delete_tags_spec.rb" time="0.046775"></testcase>
<testcase classname="spec.requests.logbook.delete_tags_spec" name="DeleteTag fails if deleting a system tag" file="./spec/requests/logbook/delete_tags_spec.rb" time="0.057543"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites includes number of interventions" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.115850"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites returns patient&apos;s vascular access sites" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.139439"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites requires write rights" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.026677"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites fails if patient does not exist" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.026940"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites returns patient&apos;s vascular access sites where deleted_at is nil" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.109334"></testcase>
<testcase classname="spec.requests.patients.get_patient_vascular_access_sites_spec" name="GetPatientVascularAccessSites includes last intervention" file="./spec/requests/patients/get_patient_vascular_access_sites_spec.rb" time="0.118880"></testcase>
<testcase classname="spec.models.briefings.participant_spec" name="Briefings::Participant is expected to belong to briefing required: true" file="./spec/models/briefings/participant_spec.rb" time="0.005058"></testcase>
<testcase classname="spec.models.briefings.participant_spec" name="Briefings::Participant is expected to belong to user required: true" file="./spec/models/briefings/participant_spec.rb" time="0.004206"></testcase>
<testcase classname="spec.models.briefings.item_spec" name="Briefings::Item is expected to belong to journal_entry required: true" file="./spec/models/briefings/item_spec.rb" time="0.005152"></testcase>
<testcase classname="spec.models.briefings.item_spec" name="Briefings::Item is expected to belong to briefing required: true" file="./spec/models/briefings/item_spec.rb" time="0.004617"></testcase>
<testcase classname="spec.models.briefings.item_spec" name="Briefings::Item is expected to belong to created_by required: true" file="./spec/models/briefings/item_spec.rb" time="0.004525"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication fails deletion if medication not found" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.089012"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication stops medication without archiving" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.124787"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication requires write rights" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.032927"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication delete future medication of restarted stopped medication creates stopped medication" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.332907"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication can&apos;t stop stopped medication" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.135842"></testcase>
<testcase classname="spec.requests.medications.stop_home_medication_spec" name="Medications StopHomeMedication deletes future medications" file="./spec/requests/medications/stop_home_medication_spec.rb" time="0.107012"></testcase>
<testcase classname="spec.requests.journal.journal_ehr_publication_spec" name="Journal Entries fails when no sufficient rights" file="./spec/requests/journal/journal_ehr_publication_spec.rb" time="0.081721"></testcase>
<testcase classname="spec.requests.journal.journal_ehr_publication_spec" name="Journal Entries schedule a journal item to be send to ehr" file="./spec/requests/journal/journal_ehr_publication_spec.rb" time="0.120368"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder is expected to validate that :external_lab_order_id cannot be empty/falsy" file="./spec/models/laboratory/lab_order_spec.rb" time="0.009124"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder is expected to belong to patient required: true" file="./spec/models/laboratory/lab_order_spec.rb" time="0.004105"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder is expected to validate that :status cannot be empty/falsy" file="./spec/models/laboratory/lab_order_spec.rb" time="0.009174"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder.period return lab orders for the past year, newest first" file="./spec/models/laboratory/lab_order_spec.rb" time="0.261172"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder.period return lab orders for the past three month, newest first" file="./spec/models/laboratory/lab_order_spec.rb" time="0.267049"></testcase>
<testcase classname="spec.models.laboratory.lab_order_spec" name="Laboratory::LabOrder.period return lab orders for the past month, newest first" file="./spec/models/laboratory/lab_order_spec.rb" time="0.294545"></testcase>
<testcase classname="spec.requests.get_code_system_by_slug_spec" name="Get Code System by slug returns a code system by slug" file="./spec/requests/get_code_system_by_slug_spec.rb" time="0.032426"></testcase>
<testcase classname="spec.requests.get_code_system_by_slug_spec" name="Get Code System by slug returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/get_code_system_by_slug_spec.rb" time="0.025071"></testcase>
<testcase classname="spec.requests.medications.search_units_spec" name="Search units returns an list of unique units" file="./spec/requests/medications/search_units_spec.rb" time="0.047283"></testcase>
<testcase classname="spec.requests.medications.search_units_spec" name="Search units returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_units_spec.rb" time="0.026192"></testcase>
<testcase classname="spec.requests.medications.search_units_spec" name="Search units can filter by name" file="./spec/requests/medications/search_units_spec.rb" time="0.049885"></testcase>
<testcase classname="spec.requests.medications.search_units_spec" name="Search units can filter by source" file="./spec/requests/medications/search_units_spec.rb" time="0.046038"></testcase>
<testcase classname="spec.requests.auth.create_authentication_spec" name="Create authentication creates an audit on failure (when the user is known)" file="./spec/requests/auth/create_authentication_spec.rb" time="0.036209"></testcase>
<testcase classname="spec.requests.auth.create_authentication_spec" name="Create authentication touches trackable fields on success" file="./spec/requests/auth/create_authentication_spec.rb" time="0.037888"></testcase>
<testcase classname="spec.requests.auth.create_authentication_spec" name="Create authentication does not create an audit on failure (when the user is unknown)" file="./spec/requests/auth/create_authentication_spec.rb" time="0.014419"></testcase>
<testcase classname="spec.requests.auth.create_authentication_spec" name="Create authentication creates an audit on success" file="./spec/requests/auth/create_authentication_spec.rb" time="0.037537"></testcase>
<testcase classname="spec.lib.core_ext.string_spec" name="String casts falsey strings" file="./spec/lib/core_ext/string_spec.rb" time="0.002013"></testcase>
<testcase classname="spec.lib.core_ext.string_spec" name="String is expected to respond to #to_b" file="./spec/lib/core_ext/string_spec.rb" time="0.002012"></testcase>
<testcase classname="spec.lib.core_ext.string_spec" name="String casts truthy strings" file="./spec/lib/core_ext/string_spec.rb" time="0.001665"></testcase>
<testcase classname="spec.adapters.exports.exportable_adapter_spec" name="Exports::ExportableAdapter serializes correctly" file="./spec/adapters/exports/exportable_adapter_spec.rb" time="0.183702"></testcase>
<testcase classname="spec.requests.medications.edit_magistral_preparation_spec" name="EditMagistralPreparation returns 422 if form is not given" file="./spec/requests/medications/edit_magistral_preparation_spec.rb" time="0.036521"></testcase>
<testcase classname="spec.requests.medications.edit_magistral_preparation_spec" name="EditMagistralPreparation returns 403 if the user isn&apos;t authorized" file="./spec/requests/medications/edit_magistral_preparation_spec.rb" time="0.029376"></testcase>
<testcase classname="spec.requests.medications.edit_magistral_preparation_spec" name="EditMagistralPreparation returns edited magistral preparation" file="./spec/requests/medications/edit_magistral_preparation_spec.rb" time="0.045047"></testcase>
<testcase classname="spec.requests.medications.edit_magistral_preparation_spec" name="EditMagistralPreparation returns 422 if formula is not given" file="./spec/requests/medications/edit_magistral_preparation_spec.rb" time="0.035677"></testcase>
<testcase classname="spec.requests.medications.edit_magistral_preparation_spec" name="EditMagistralPreparation returns 422 if dose is not given" file="./spec/requests/medications/edit_magistral_preparation_spec.rb" time="0.035962"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique returns not found if the access site technique does not exist" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.036904"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique requires write rights" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.035398"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept empty type" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.035609"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept duplicate names" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.039960"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept empty name" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.033775"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept empty type_flag" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.031573"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept incorrect type" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.035086"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when updating a site technique does not accept incorrect type_flag" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.035104"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when correctly updating of site technique sets correct audit info" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.057168"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_technique_spec" name="UpdateVascularAccessSiteTechnique when correctly updating of site technique updates the site technique columns" file="./spec/requests/vascular_access/update_vascular_access_site_technique_spec.rb" time="0.037565"></testcase>
<testcase classname="spec.requests.audits.get_audits_spec" name="GetAudits returns all audits" file="./spec/requests/audits/get_audits_spec.rb" time="0.077168"></testcase>
<testcase classname="spec.requests.audits.get_audits_spec" name="GetAudits returns forbidden when the user does not has the right" file="./spec/requests/audits/get_audits_spec.rb" time="0.072430"></testcase>
<testcase classname="spec.requests.audits.get_audits_spec" name="GetAudits returns all audits filtered on user" file="./spec/requests/audits/get_audits_spec.rb" time="0.074114"></testcase>
<testcase classname="spec.requests.audits.get_audits_spec" name="GetAudits returns all audits filtered on category" file="./spec/requests/audits/get_audits_spec.rb" time="0.072671"></testcase>
<testcase classname="spec.requests.audits.get_audits_spec" name="GetAudits returns all audits as csv when the user has the right" file="./spec/requests/audits/get_audits_spec.rb" time="0.032990"></testcase>
<testcase classname="spec.models.medications.product_stock_spec" name="Medications::ProductStock is expected to belong to product required: true" file="./spec/models/medications/product_stock_spec.rb" time="0.006486"></testcase>
<testcase classname="spec.models.medications.product_stock_spec" name="Medications::ProductStock is expected to belong to stock required: true" file="./spec/models/medications/product_stock_spec.rb" time="0.005778"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns not found (404) if the billing item cannot be found" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.037105"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns unprocessable entity (422) when the exportable is not in draft" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.268250"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns not found (404) if the exportable cannot be found" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.264962"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns not found (404) when the billing item is not present" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.242030"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns ok (200) and the exportable" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.270291"></testcase>
<testcase classname="spec.requests.exports.destroy_exportable_billing_items_spec" name="Destroy exportable billing items association returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/destroy_exportable_billing_items_spec.rb" time="0.271260"></testcase>
<testcase classname="spec.models.medications.providers.handlers.result_spec" name="Medications::Providers::Handler drops the message when the execution was not found" file="./spec/models/medications/providers/handlers/result_spec.rb" time="0.009365"></testcase>
<testcase classname="spec.models.medications.providers.handlers.result_spec" name="Medications::Providers::Handler attaches results to the execution" file="./spec/models/medications/providers/handlers/result_spec.rb" time="0.085977"></testcase>
<testcase classname="spec.models.medications.providers.handlers.result_spec" name="Medications::Providers::Handler transitions the execution to `completed` when all sources responded" file="./spec/models/medications/providers/handlers/result_spec.rb" time="0.082900"></testcase>
<testcase classname="spec.models.patients.treatment_spec" name="Patients::Treatment is expected to validate that :code cannot be empty/falsy" file="./spec/models/patients/treatment_spec.rb" time="0.009750"></testcase>
<testcase classname="spec.models.patients.treatment_spec" name="Patients::Treatment validates uniqueness of name" file="./spec/models/patients/treatment_spec.rb" time="0.015868"></testcase>
<testcase classname="spec.models.medications.services.update_administration_route_spec" name="Medications::Services::UpdateAdministrationRoute updates an administration route with its codes" file="./spec/models/medications/services/update_administration_route_spec.rb" time="0.043415"></testcase>
<testcase classname="spec.requests.patients.update_allergy_for_patient_spec" name="UpdateAllergyForPatient updates the given allergy" file="./spec/requests/patients/update_allergy_for_patient_spec.rb" time="0.091960"></testcase>
<testcase classname="spec.requests.patients.update_allergy_for_patient_spec" name="UpdateAllergyForPatient returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_allergy_for_patient_spec.rb" time="0.055091"></testcase>
<testcase classname="spec.models.context_links.templated_spec" name="ContextLinks::Templated#render renders a templated uri in the customer&apos;s timezone" file="./spec/models/context_links/templated_spec.rb" time="0.069776"></testcase>
<testcase classname="spec.models.context_links.templated_spec" name="ContextLinks::Templated#validate_syntax is invalid when the syntax is invalid" file="./spec/models/context_links/templated_spec.rb" time="0.003505"></testcase>
<testcase classname="spec.adapters.orders.order_adapter_spec" name="Orders::OrderAdapter serializes correctly" file="./spec/adapters/orders/order_adapter_spec.rb" time="0.028226"></testcase>
<testcase classname="spec.models.medications.medicinal_product_package_spec" name="Medications::MedicinalProductPackage is expected to belong to medicinal_product required: true" file="./spec/models/medications/medicinal_product_package_spec.rb" time="0.004082"></testcase>
<testcase classname="spec.models.medications.medicinal_product_package_spec" name="Medications::MedicinalProductPackage is expected to belong to galenic_term required: true" file="./spec/models/medications/medicinal_product_package_spec.rb" time="0.003843"></testcase>
<testcase classname="spec.models.medications.medicinal_product_package_spec" name="Medications::MedicinalProductPackage is expected to belong to formulary_item class_name =&gt; Medications::Formulary::Item optional: true" file="./spec/models/medications/medicinal_product_package_spec.rb" time="0.003250"></testcase>
<testcase classname="spec.models.medications.medicinal_product_package_spec" name="Medications::MedicinalProductPackage is expected to belong to medicinal_variant optional: true" file="./spec/models/medications/medicinal_product_package_spec.rb" time="0.003067"></testcase>
<testcase classname="spec.models.medications.medicinal_product_package_spec" name="Medications::MedicinalProductPackage sort sort asc by package quantity" file="./spec/models/medications/medicinal_product_package_spec.rb" time="0.002707"></testcase>
<testcase classname="spec.requests.patients.diagnoses.delete_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/diagnoses/delete_patient_diagnosis_spec.rb" time="0.063251"></testcase>
<testcase classname="spec.requests.patients.diagnoses.delete_patient_diagnosis_spec" name="Patients::PatientDiagnosis audits the destroy action" file="./spec/requests/patients/diagnoses/delete_patient_diagnosis_spec.rb" time="0.083765"></testcase>
<testcase classname="spec.requests.patients.diagnoses.delete_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns unprocessable entity (422) if the patient diagnosis has row_order 0" file="./spec/requests/patients/diagnoses/delete_patient_diagnosis_spec.rb" time="0.058677"></testcase>
<testcase classname="spec.requests.patients.diagnoses.delete_patient_diagnosis_spec" name="Patients::PatientDiagnosis returns success (200)" file="./spec/requests/patients/diagnoses/delete_patient_diagnosis_spec.rb" time="0.079802"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to validate that :status cannot be empty/falsy" file="./spec/models/vascular_access/site_spec.rb" time="0.077851"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to validate that :side cannot be empty/falsy" file="./spec/models/vascular_access/site_spec.rb" time="0.086633"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site validates catheter meta data are consistent" file="./spec/models/vascular_access/site_spec.rb" time="0.165039"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to validate that :status is either ‹&quot;available&quot;›, ‹&quot;unavailable&quot;›, or ‹&quot;permanently_removed&quot;›" file="./spec/models/vascular_access/site_spec.rb" time="0.083526"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to have many interventions" file="./spec/models/vascular_access/site_spec.rb" time="0.065415"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to validate that :side is either ‹&quot;left&quot;›, ‹&quot;right&quot;›, or ‹&quot;unknown&quot;›" file="./spec/models/vascular_access/site_spec.rb" time="0.081216"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to belong to patient required: true" file="./spec/models/vascular_access/site_spec.rb" time="0.069157"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to have many site_examinations" file="./spec/models/vascular_access/site_spec.rb" time="0.067892"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to belong to technique required: true" file="./spec/models/vascular_access/site_spec.rb" time="0.070676"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site validates that only catheter type can meta containing catheter data" file="./spec/models/vascular_access/site_spec.rb" time="0.135649"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to have many site_attachments" file="./spec/models/vascular_access/site_spec.rb" time="0.069860"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site validates must include meta containing catheter data if a catheter" file="./spec/models/vascular_access/site_spec.rb" time="0.205800"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site is expected to validate that :technique cannot be empty/falsy" file="./spec/models/vascular_access/site_spec.rb" time="0.084228"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site accepts valid meta when catheter" file="./spec/models/vascular_access/site_spec.rb" time="0.143825"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site technique validation must fail does not validate if no technique is set" file="./spec/models/vascular_access/site_spec.rb" time="0.085436"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site technique validation must fail does not validate if existing technique is set" file="./spec/models/vascular_access/site_spec.rb" time="0.113010"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site technique validation must fail does not validate if incorrect technique is set" file="./spec/models/vascular_access/site_spec.rb" time="0.117962"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site graft and fistula validation must fail does not validate if graph or fistula exist" file="./spec/models/vascular_access/site_spec.rb" time="0.111511"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site catheter validation must fail does not validate if catheter already exist and &apos;type&apos; is not &apos;permanently_destroyed&apos;" file="./spec/models/vascular_access/site_spec.rb" time="0.117002"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site validation has to pass validation does validate if catheter does not exist or is permantly removed" file="./spec/models/vascular_access/site_spec.rb" time="0.161058"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site validation has to pass validation does validate if fistula or graft does not exist" file="./spec/models/vascular_access/site_spec.rb" time="0.116371"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site removed_at date must validate accepts removed_at date for removed access sites" file="./spec/models/vascular_access/site_spec.rb" time="0.082369"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site removed_at date must validate clears the removed_at date for non-removed access sites" file="./spec/models/vascular_access/site_spec.rb" time="0.096217"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site site technique validations must succeed allows creation and usage of a new technique" file="./spec/models/vascular_access/site_spec.rb" time="0.074686"></testcase>
<testcase classname="spec.models.vascular_access.site_spec" name="VascularAccess::Site removed_at date validation must fail does not accept a removed_at date before placed_at date" file="./spec/models/vascular_access/site_spec.rb" time="0.091151"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachments_spec" name="GetAccessSiteAttachments returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_vascular_access_site_attachments_spec.rb" time="0.199074"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachments_spec" name="GetAccessSiteAttachments returns the site attachments ordered by date descending" file="./spec/requests/vascular_access/get_vascular_access_site_attachments_spec.rb" time="0.411083"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_attachments_spec" name="GetAccessSiteAttachments returns not_found (404) if the site attachment cannot be found" file="./spec/requests/vascular_access/get_vascular_access_site_attachments_spec.rb" time="0.030255"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role is expected to have many users" file="./spec/models/users/role_spec.rb" time="0.002227"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role returns admin role" file="./spec/models/users/role_spec.rb" time="0.007398"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role prevents rights duplication" file="./spec/models/users/role_spec.rb" time="0.008987"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role accepts individual rights" file="./spec/models/users/role_spec.rb" time="0.009280"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role rejects invalid right ids" file="./spec/models/users/role_spec.rb" time="0.007798"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role is expected to validate that :name cannot be empty/falsy" file="./spec/models/users/role_spec.rb" time="0.007979"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role validates uniqueness of name" file="./spec/models/users/role_spec.rb" time="0.015254"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role#archive! archives a role" file="./spec/models/users/role_spec.rb" time="0.012152"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role#archive! archive an admin role" file="./spec/models/users/role_spec.rb" time="0.012441"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role#has_right? returns true if the role contains an specific right" file="./spec/models/users/role_spec.rb" time="0.005126"></testcase>
<testcase classname="spec.models.users.role_spec" name="Users::Role behaves like Indestructible is indestructible" file="./spec/models/users/role_spec.rb" time="0.002170"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType is expected to have many back_transport_type_patients" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.003064"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType is expected to have many forth_transport_type_patients" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.002359"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType is expected to have many forth_transport_type_sessions" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.002354"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType is expected to have many back_transport_type_sessions" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.002304"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType when the name is considered to be unique #validate_name validates if the name can be reused if deleted" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.008004"></testcase>
<testcase classname="spec.models.infrastructure.transport_type_spec" name="RSpec::ExampleGroups::InfrastructureTransportType when the name is considered to be unique #validate_name validates if the name must be unique" file="./spec/models/infrastructure/transport_type_spec.rb" time="0.007674"></testcase>
<testcase classname="spec.requests.infrastructure.get_connectors_spec" name="GET /api/connectors returns success (200) and the connectors" file="./spec/requests/infrastructure/get_connectors_spec.rb" time="0.039872"></testcase>
<testcase classname="spec.requests.infrastructure.get_connectors_spec" name="GET /api/connectors returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_connectors_spec.rb" time="0.026010"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes returns an list of administration_routes" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.065132"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes filtering with blanco name returns same results as without" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.353411"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes can filter by source" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.058589"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes can filter by name" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.058314"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes can filter by best_guessed with name" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.336154"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes can filter by most-used" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.386011"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.025505"></testcase>
<testcase classname="spec.requests.medications.search_administation_routes_spec" name="Search Administration Routes can filter by best_guessed" file="./spec/requests/medications/search_administation_routes_spec.rb" time="0.396049"></testcase>
<testcase classname="spec.models.executions.reports.autodialysis_spec" name="Executions::Reports::Autodialysis#sanitize_payload sanitizes payload" file="./spec/models/executions/reports/autodialysis_spec.rb" time="0.059143"></testcase>
<testcase classname="spec.requests.patients.update_identifier_spec" name="UpdatePatientIdentifier updates and existing identifier" file="./spec/requests/patients/update_identifier_spec.rb" time="0.067492"></testcase>
<testcase classname="spec.requests.patients.update_identifier_spec" name="UpdatePatientIdentifier returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_identifier_spec.rb" time="0.053790"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_attachment_spec" name="UpdateAccessSiteAttachments returns (404) if the access site is not found" file="./spec/requests/vascular_access/update_vascular_access_site_attachment_spec.rb" time="0.024192"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_attachment_spec" name="UpdateAccessSiteAttachments returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/update_vascular_access_site_attachment_spec.rb" time="0.192730"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_attachment_spec" name="UpdateAccessSiteAttachments updates only the site attachment date and note" file="./spec/requests/vascular_access/update_vascular_access_site_attachment_spec.rb" time="0.195009"></testcase>
<testcase classname="spec.requests.infrastructure.delete_global_center_acl_spec" name="DeleteCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/delete_global_center_acl_spec.rb" time="0.069583"></testcase>
<testcase classname="spec.requests.infrastructure.delete_global_center_acl_spec" name="DeleteCenterAcl deletes the user&apos;s global center acl" file="./spec/requests/infrastructure/delete_global_center_acl_spec.rb" time="0.067994"></testcase>
<testcase classname="spec.requests.actions.get_action_spec" name="GetAction returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/actions/get_action_spec.rb" time="0.127409"></testcase>
<testcase classname="spec.requests.actions.get_action_spec" name="GetAction returns 404 if the action cannot be found" file="./spec/requests/actions/get_action_spec.rb" time="0.156737"></testcase>
<testcase classname="spec.requests.actions.get_action_spec" name="GetAction returns the requested action&apos;s detail" file="./spec/requests/actions/get_action_spec.rb" time="0.163206"></testcase>
<testcase classname="spec.requests.medications.formulary_items.update_formulary_item_spec" name="UpdateMedicationsFormularyItem returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/formulary_items/update_formulary_item_spec.rb" time="0.027552"></testcase>
<testcase classname="spec.requests.medications.formulary_items.update_formulary_item_spec" name="UpdateMedicationsFormularyItem does not allow to update an attribute other than multidose" file="./spec/requests/medications/formulary_items/update_formulary_item_spec.rb" time="0.036414"></testcase>
<testcase classname="spec.requests.medications.formulary_items.update_formulary_item_spec" name="UpdateMedicationsFormularyItem does not update formulary item with invalid properties" file="./spec/requests/medications/formulary_items/update_formulary_item_spec.rb" time="0.032442"></testcase>
<testcase classname="spec.requests.medications.formulary_items.update_formulary_item_spec" name="UpdateMedicationsFormularyItem updates formulary item" file="./spec/requests/medications/formulary_items/update_formulary_item_spec.rb" time="0.035836"></testcase>
<testcase classname="spec.jobs.executions.medications.timeout_job_spec" name="Executions::Medications::TimeoutJob transitions the execution to `scheduled`, and then to `completed`" file="./spec/jobs/executions/medications/timeout_job_spec.rb" time="0.050662"></testcase>
<testcase classname="spec.models.medications.galenic_term_spec" name="Medications::GalenicTerm is expected to have many medicinal_product_packages" file="./spec/models/medications/galenic_term_spec.rb" time="0.002097"></testcase>
<testcase classname="spec.models.medications.galenic_term_spec" name="Medications::GalenicTerm is expected to have many medicinal_variants" file="./spec/models/medications/galenic_term_spec.rb" time="0.002381"></testcase>
<testcase classname="spec.requests.patients.update_patient_avatar_spec" name="UpdatePatientAvatar fails if avatar is not an image" file="./spec/requests/patients/update_patient_avatar_spec.rb" time="0.109756"></testcase>
<testcase classname="spec.requests.patients.update_patient_avatar_spec" name="UpdatePatientAvatar updates avatar" file="./spec/requests/patients/update_patient_avatar_spec.rb" time="0.209522"></testcase>
<testcase classname="spec.requests.patients.update_patient_avatar_spec" name="UpdatePatientAvatar returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_patient_avatar_spec.rb" time="0.078198"></testcase>
<testcase classname="spec.lib.health.worker_health_checker_spec" name="Health::WorkerHealthChecker#mark_healthy! marks a queue as healthy by setting a key in Redis" file="./spec/lib/health/worker_health_checker_spec.rb" time="0.009481"></testcase>
<testcase classname="spec.lib.health.worker_health_checker_spec" name="Health::WorkerHealthChecker#check creates a snapshot check of the queues" file="./spec/lib/health/worker_health_checker_spec.rb" time="0.007802"></testcase>
<testcase classname="spec.lib.health.worker_health_checker_spec" name="Health::WorkerHealthChecker#check when all queues are healthy is healthy" file="./spec/lib/health/worker_health_checker_spec.rb" time="0.006979"></testcase>
<testcase classname="spec.lib.health.worker_health_checker_spec" name="Health::WorkerHealthChecker#check when not all queues are healthy is unhealthy" file="./spec/lib/health/worker_health_checker_spec.rb" time="0.006988"></testcase>
<testcase classname="spec.lib.health.worker_health_checker_spec" name="Health::WorkerHealthChecker#enqueue_dummy_jobs queues a dummy job per queue that updates health per job" file="./spec/lib/health/worker_health_checker_spec.rb" time="0.016813"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/get_chart_spec.rb" time="0.029995"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns unprocessable_entity (422) if chart cannot be found" file="./spec/requests/patients/get_chart_spec.rb" time="0.083281"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_chart_spec.rb" time="0.026430"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns blood pressure history chart" file="./spec/requests/patients/get_chart_spec.rb" time="0.083757"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns weight history chart" file="./spec/requests/patients/get_chart_spec.rb" time="0.088430"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns KT / V history chart" file="./spec/requests/patients/get_chart_spec.rb" time="0.089981"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns ultrafiltration history chart" file="./spec/requests/patients/get_chart_spec.rb" time="0.079464"></testcase>
<testcase classname="spec.requests.patients.get_chart_spec" name="GetChart returns vascular access complication history chart" file="./spec/requests/patients/get_chart_spec.rb" time="0.079995"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base has a default runner" file="./spec/models/executions/recip_e/base_spec.rb" time="0.002191"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base has a default category" file="./spec/models/executions/recip_e/base_spec.rb" time="0.002042"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base is expected to be enqueueable" file="./spec/models/executions/recip_e/base_spec.rb" time="0.020271"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base#execute! updates home medication order with warning" file="./spec/models/executions/recip_e/base_spec.rb" time="0.310472"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base#execute! updates home medication order with backend exception" file="./spec/models/executions/recip_e/base_spec.rb" time="0.319094"></testcase>
<testcase classname="spec.models.executions.recip_e.base_spec" name="Executions::RecipE::Base#execute! updates prescription with technical exception" file="./spec/models/executions/recip_e/base_spec.rb" time="0.269119"></testcase>
<testcase classname="spec.requests.medications.search_companies_spec" name="Search Companies can filter by most-used" file="./spec/requests/medications/search_companies_spec.rb" time="0.219445"></testcase>
<testcase classname="spec.requests.medications.search_companies_spec" name="Search Companies can filter by source" file="./spec/requests/medications/search_companies_spec.rb" time="0.065799"></testcase>
<testcase classname="spec.requests.medications.search_companies_spec" name="Search Companies returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/search_companies_spec.rb" time="0.026388"></testcase>
<testcase classname="spec.requests.medications.search_companies_spec" name="Search Companies returns an list of companies" file="./spec/requests/medications/search_companies_spec.rb" time="0.068173"></testcase>
<testcase classname="spec.requests.medications.search_companies_spec" name="Search Companies can filter by name" file="./spec/requests/medications/search_companies_spec.rb" time="0.062811"></testcase>
<testcase classname="spec.models.planning.services.create_deviation_spec" name="Planning::Services::CreateDeviation updates a deviation if it already exists" file="./spec/models/planning/services/create_deviation_spec.rb" time="0.000010"><skipped/></testcase>
<testcase classname="spec.models.planning.services.create_deviation_spec" name="Planning::Services::CreateDeviation deletes the counterpart if present" file="./spec/models/planning/services/create_deviation_spec.rb" time="0.000004"><skipped/></testcase>
<testcase classname="spec.models.planning.services.create_deviation_spec" name="Planning::Services::CreateDeviation creation of a deviation creates a deviation if valid deviation" file="./spec/models/planning/services/create_deviation_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.models.planning.services.create_deviation_spec" name="Planning::Services::CreateDeviation creation of a deviation fails creating a deviation if no valid deviation" file="./spec/models/planning/services/create_deviation_spec.rb" time="0.000005"><skipped/></testcase>
<testcase classname="spec.models.planning.services.create_deviation_spec" name="Planning::Services::CreateDeviation creation of a deviation creates a deviation if no counterpart is present" file="./spec/models/planning/services/create_deviation_spec.rb" time="0.000004"><skipped/></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient creates discharge event if the patient exists but is not enrolled" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.131778"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient executes discharge properly even if birthdate is not passed in the event" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.153868"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient doesn&apos;t discharge if the admission_id is different than the set admission_id" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.111874"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient creates discharge event if the patient exists and is enrolled" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.139634"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient removes the case_id if it equals the case_id of the patient" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.116603"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient creates patient if the patient doesn&apos;t exist yet" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.068562"></testcase>
<testcase classname="spec.requests.integration.discharge_patient_spec" name="Integration Discharge Patient converts discharge date from local time to utc time" file="./spec/requests/integration/discharge_patient_spec.rb" time="0.116910"></testcase>
<testcase classname="spec.migrations.20200330105959_add_service_id_to_medication_administrations_spec" name="AddServiceIdToMedicationAdministrations updates billing items" file="./spec/migrations/20200330105959_add_service_id_to_medication_administrations_spec.rb" time="0.000012"><skipped/></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_spec" name="GetIntervention returns the given intervention" file="./spec/requests/vascular_access/get_intervention_spec.rb" time="0.110136"></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_spec" name="GetIntervention fails when given intervention does not exist" file="./spec/requests/vascular_access/get_intervention_spec.rb" time="0.027875"></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_spec" name="GetIntervention requires authorization" file="./spec/requests/vascular_access/get_intervention_spec.rb" time="0.099437"></testcase>
<testcase classname="spec.requests.wounds.update_wound_spec" name="UpdateWound returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/wounds/update_wound_spec.rb" time="0.063535"></testcase>
<testcase classname="spec.requests.wounds.update_wound_spec" name="UpdateWound returns not_found (404) if the wound cannot be found" file="./spec/requests/wounds/update_wound_spec.rb" time="0.038905"></testcase>
<testcase classname="spec.requests.wounds.update_wound_spec" name="UpdateWound updates the given wound" file="./spec/requests/wounds/update_wound_spec.rb" time="0.091538"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients return not found if none of the patients are found" file="./spec/requests/patients/merge_patients_spec.rb" time="0.036974"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients requires authorization" file="./spec/requests/patients/merge_patients_spec.rb" time="0.026232"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients succesfully merges patients and updates patient master record" file="./spec/requests/patients/merge_patients_spec.rb" time="0.267223"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients returns unprocessable if patients have merge conflicts" file="./spec/requests/patients/merge_patients_spec.rb" time="0.179571"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients returns unprocessable if merge patient has or has had a treatment (and hence a prescription)" file="./spec/requests/patients/merge_patients_spec.rb" time="0.171804"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients succesfully merges many patients" file="./spec/requests/patients/merge_patients_spec.rb" time="0.414883"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients uses first mergeable patient if the base patient is not found" file="./spec/requests/patients/merge_patients_spec.rb" time="0.121548"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients succesfully merges patients and all associations" file="./spec/requests/patients/merge_patients_spec.rb" time="0.275559"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging two unenrolled patients returns unprocessable if patients have merge conflicts" file="./spec/requests/patients/merge_patients_spec.rb" time="0.158910"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging two unenrolled patients succesfully merges patients" file="./spec/requests/patients/merge_patients_spec.rb" time="0.204312"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients with unenrolled patients merges successfuly if base patient is enrolled" file="./spec/requests/patients/merge_patients_spec.rb" time="0.222916"></testcase>
<testcase classname="spec.requests.patients.merge_patients_spec" name="MergePatients merging enrolled patients with unenrolled patients merges successfully by keeping the enrolled patient if base patient is unenrolled" file="./spec/requests/patients/merge_patients_spec.rb" time="0.407992"></testcase>
<testcase classname="spec.requests.patients.update_diet_spec" name="UpdateDiet returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/update_diet_spec.rb" time="0.026392"></testcase>
<testcase classname="spec.requests.patients.update_diet_spec" name="UpdateDiet updates an existing diet" file="./spec/requests/patients/update_diet_spec.rb" time="0.033624"></testcase>
<testcase classname="spec.requests.patients.update_diet_spec" name="UpdateDiet returns not_found (404) if the diet cannot be found" file="./spec/requests/patients/update_diet_spec.rb" time="0.026409"></testcase>
<testcase classname="spec.models.medications.providers.handlers.update_spec" name="Medications::Providers::Handler transitions the execution to `completed` when all sources responded" file="./spec/models/medications/providers/handlers/update_spec.rb" time="0.080278"></testcase>
<testcase classname="spec.models.medications.providers.handlers.update_spec" name="Medications::Providers::Handler attaches updates to the execution" file="./spec/models/medications/providers/handlers/update_spec.rb" time="0.076303"></testcase>
<testcase classname="spec.models.medications.providers.handlers.update_spec" name="Medications::Providers::Handler processes the message when the execution was not found" file="./spec/models/medications/providers/handlers/update_spec.rb" time="0.016907"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.reports.backup_prescription_report_pdf_spec" name="BackupPrescriptionReportPdf generates a pdf of the prescription" file="./spec/models/medications/prescriptions/ehealth/reports/backup_prescription_report_pdf_spec.rb" time="0.063611"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning considers absence, end date included" file="./spec/models/planning/planner_spec.rb" time="0.253295"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning considers absence, end date included also when date range is end date of absence" file="./spec/models/planning/planner_spec.rb" time="0.228819"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning includes add deviations" file="./spec/models/planning/planner_spec.rb" time="0.189827"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning returns one day planning" file="./spec/models/planning/planner_spec.rb" time="0.112151"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning returns planning for the given date range" file="./spec/models/planning/planner_spec.rb" time="0.135628"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning does not return unused positions" file="./spec/models/planning/planner_spec.rb" time="0.060336"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning creates a reserve when a position has several patients" file="./spec/models/planning/planner_spec.rb" time="0.312618"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning gives precedence to add deviations" file="./spec/models/planning/planner_spec.rb" time="0.218180"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning excludes remove deviations" file="./spec/models/planning/planner_spec.rb" time="0.235475"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#partial_planning filters out absent patients" file="./spec/models/planning/planner_spec.rb" time="0.317001"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#planned_deviations returns a list of add deviations" file="./spec/models/planning/planner_spec.rb" time="0.165068"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#planned_deviations returns a list of all deviations over all centers" file="./spec/models/planning/planner_spec.rb" time="0.398897"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#planned_deviations returns an empty list if there are no deviations" file="./spec/models/planning/planner_spec.rb" time="0.003072"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#planned_deviations #planned_absences returns the list of planned absences for the given date range" file="./spec/models/planning/planner_spec.rb" time="0.082397"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#planned_deviations #planned_absences returns an empty list if there are no planned absences" file="./spec/models/planning/planner_spec.rb" time="0.003074"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#issues does not reports issues when deviations balance equals 0" file="./spec/models/planning/planner_spec.rb" time="0.110125"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#issues reports issues if a patient has some add deviation" file="./spec/models/planning/planner_spec.rb" time="0.109920"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#issues reports issues if a patient has some remove deviation" file="./spec/models/planning/planner_spec.rb" time="0.105003"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#issues reports no issues if there are no deviations" file="./spec/models/planning/planner_spec.rb" time="0.003939"></testcase>
<testcase classname="spec.models.planning.planner_spec" name="Planning::Planner#issues returns problems over all the centers" file="./spec/models/planning/planner_spec.rb" time="0.314562"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop does not return products recently synced" file="./spec/models/medications/providers/queue_spec.rb" time="0.027876"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop touches synced_at" file="./spec/models/medications/providers/queue_spec.rb" time="0.032424"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop returns products" file="./spec/models/medications/providers/queue_spec.rb" time="0.034912"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop buckets syncs minimum products" file="./spec/models/medications/providers/queue_spec.rb" time="0.009370"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop buckets syncs all products if less than the minimum" file="./spec/models/medications/providers/queue_spec.rb" time="0.007955"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop buckets syncs maximum products" file="./spec/models/medications/providers/queue_spec.rb" time="0.009473"></testcase>
<testcase classname="spec.models.medications.providers.queue_spec" name="Medications::Providers::Queue#pop buckets syncs real products" file="./spec/models/medications/providers/queue_spec.rb" time="0.010572"></testcase>
<testcase classname="spec.migrations.20200203142311_add_app_admin_role_spec" name="AddAppAdminRole#down removes the APP_ADMIN right from existing roles" file="./spec/migrations/20200203142311_add_app_admin_role_spec.rb" time="0.025137"></testcase>
<testcase classname="spec.migrations.20200203142311_add_app_admin_role_spec" name="AddAppAdminRole#up creates an app admin role and assigns rights" file="./spec/migrations/20200203142311_add_app_admin_role_spec.rb" time="0.009951"></testcase>
<testcase classname="spec.migrations.20200203142311_add_app_admin_role_spec" name="AddAppAdminRole#up when the default role set exists creates an app admin role and assigns rights" file="./spec/migrations/20200203142311_add_app_admin_role_spec.rb" time="0.051078"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType (de-) serializes integers" file="./spec/types/union_type_spec.rb" time="0.001814"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType (de-) serializes strings" file="./spec/types/union_type_spec.rb" time="0.001706"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType (de-) serializes quantities" file="./spec/types/union_type_spec.rb" time="0.004642"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType (de-) serializes ranges" file="./spec/types/union_type_spec.rb" time="0.006667"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType (de-) serializes ratios" file="./spec/types/union_type_spec.rb" time="0.005271"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns the object when the object is something else" file="./spec/types/union_type_spec.rb" time="0.006068"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns a ratio when the object is a hash" file="./spec/types/union_type_spec.rb" time="0.007949"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns a range when the object is a hash containing quantities" file="./spec/types/union_type_spec.rb" time="0.008101"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns a quantity when the object is a hash with a quantity" file="./spec/types/union_type_spec.rb" time="0.003790"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns nil when object is nil" file="./spec/types/union_type_spec.rb" time="0.001641"></testcase>
<testcase classname="spec.types.union_type_spec" name="UnionType#cast returns nil when object is blank" file="./spec/types/union_type_spec.rb" time="0.001960"></testcase>
<testcase classname="spec.integrations.executions.maestro.pharmacy_spec" name="Asynchronous pharmacy export adds an execution to the queue" file="./spec/integrations/executions/maestro/pharmacy_spec.rb" time="0.407212"></testcase>
<testcase classname="spec.integrations.executions.maestro.pharmacy_spec" name="Asynchronous pharmacy export exports the pharmacy exportable" file="./spec/integrations/executions/maestro/pharmacy_spec.rb" time="0.637856"></testcase>
<testcase classname="spec.lib.parameter.instance_spec" name="Parameter::Types::Float converts value if system unit is not the same as display" file="./spec/lib/parameter/instance_spec.rb" time="0.003929"></testcase>
<testcase classname="spec.lib.parameter.instance_spec" name="Parameter::Types::Float scales value if system unit is a multiple of display unit" file="./spec/lib/parameter/instance_spec.rb" time="0.002102"></testcase>
<testcase classname="spec.lib.parameter.instance_spec" name="Parameter::Types::Float does not change value if system unit is the same as display" file="./spec/lib/parameter/instance_spec.rb" time="0.001883"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns success (200) when the exportable was already exported" file="./spec/requests/exports/download_exportable_spec.rb" time="0.041928"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns not found (404) if the exportable is not found" file="./spec/requests/exports/download_exportable_spec.rb" time="0.026649"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns success (200) and a CSV file if csv was passed as format" file="./spec/requests/exports/download_exportable_spec.rb" time="0.045926"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns success (200) and a XLSX file if xlsx was passed as format" file="./spec/requests/exports/download_exportable_spec.rb" time="0.048229"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/download_exportable_spec.rb" time="0.030981"></testcase>
<testcase classname="spec.requests.exports.download_exportable_spec" name="Download exportable returns unprocessable entity (422) when the exportable is in draft" file="./spec/requests/exports/download_exportable_spec.rb" time="0.030760"></testcase>
<testcase classname="spec.requests.logbook.add_note_to_logbook_spec" name="Session Notes requires authorization" file="./spec/requests/logbook/add_note_to_logbook_spec.rb" time="0.030769"></testcase>
<testcase classname="spec.requests.logbook.add_note_to_logbook_spec" name="Session Notes creates a new session note" file="./spec/requests/logbook/add_note_to_logbook_spec.rb" time="0.136856"></testcase>
<testcase classname="spec.requests.infrastructure.get_room_spec" name="Rooms when getting a room returns not found if room does not exist" file="./spec/requests/infrastructure/get_room_spec.rb" time="0.034302"></testcase>
<testcase classname="spec.requests.infrastructure.get_room_spec" name="Rooms when getting a room returns the room" file="./spec/requests/infrastructure/get_room_spec.rb" time="0.058802"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry updates an existing journal entry with an empty list of tags" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.099710"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry returns forbidden (403) if the user only has read rights" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.104206"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.130269"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry returns forbidden (403) if the user only has manage rights for other journals" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.100301"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry returns not_found (404) if the journal entry cannot be found" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.126325"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_tags_spec" name="UpdateJournalEntry updates an existing journal entry" file="./spec/requests/journal/update_journal_entry_tags_spec.rb" time="0.109206"></testcase>
<testcase classname="spec.models.executions.reports.program_book_spec" name="Executions::Reports::ProgramBook payload validates inclusion of `center_id`" file="./spec/models/executions/reports/program_book_spec.rb" time="0.018452"></testcase>
<testcase classname="spec.models.executions.reports.program_book_spec" name="Executions::Reports::ProgramBook payload validates inclusion of `date`" file="./spec/models/executions/reports/program_book_spec.rb" time="0.020920"></testcase>
<testcase classname="spec.models.executions.reports.program_book_spec" name="Executions::Reports::ProgramBook payload validates inclusion of `shift_id`" file="./spec/models/executions/reports/program_book_spec.rb" time="0.013808"></testcase>
<testcase classname="spec.models.executions.reports.program_book_spec" name="Executions::Reports::ProgramBook#sanitize_payload sanitizes payload" file="./spec/models/executions/reports/program_book_spec.rb" time="0.035547"></testcase>
<testcase classname="spec.jobs.generate_billing_export_job_spec" name="GenerateBillingExportJob creates an exportable containing all billing items for one day" file="./spec/jobs/generate_billing_export_job_spec.rb" time="1.315026"></testcase>
<testcase classname="spec.jobs.generate_billing_export_job_spec" name="GenerateBillingExportJob raises ArgumentError when the options are incorrect" file="./spec/jobs/generate_billing_export_job_spec.rb" time="0.003132"></testcase>
<testcase classname="spec.jobs.generate_billing_export_job_spec" name="GenerateBillingExportJob creates an exportable containing all billing items for one week" file="./spec/jobs/generate_billing_export_job_spec.rb" time="1.378219"></testcase>
<testcase classname="spec.jobs.generate_billing_export_job_spec" name="GenerateBillingExportJob `autoready` option automatically transitions exportable to ready when all billing items are valid" file="./spec/jobs/generate_billing_export_job_spec.rb" time="0.234541"></testcase>
<testcase classname="spec.jobs.generate_billing_export_job_spec" name="GenerateBillingExportJob `autoready` option does not transition exportable to ready when there are invalid billing items" file="./spec/jobs/generate_billing_export_job_spec.rb" time="0.218322"></testcase>
<testcase classname="spec.models.medications.services.administer_fixed_dose_medication_spec" name="Medications::Services::AdministerFixedDoseMedication creates an administration" file="./spec/models/medications/services/administer_fixed_dose_medication_spec.rb" time="0.459586"></testcase>
<testcase classname="spec.models.medications.services.administer_fixed_dose_medication_spec" name="Medications::Services::AdministerFixedDoseMedication creates a billing item" file="./spec/models/medications/services/administer_fixed_dose_medication_spec.rb" time="0.000009"><skipped/></testcase>
<testcase classname="spec.requests.patients.delete_transplant_eligibility_status_spec" name="Delete transplant eligibility status returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/patients/delete_transplant_eligibility_status_spec.rb" time="0.044748"></testcase>
<testcase classname="spec.requests.patients.delete_transplant_eligibility_status_spec" name="Delete transplant eligibility status returns success (200) and deletes the transplant eligibility status if not in use" file="./spec/requests/patients/delete_transplant_eligibility_status_spec.rb" time="0.066425"></testcase>
<testcase classname="spec.requests.patients.delete_transplant_eligibility_status_spec" name="Delete transplant eligibility status returns success (200) and soft-deletes the transplant eligibility status when it&apos;s in use" file="./spec/requests/patients/delete_transplant_eligibility_status_spec.rb" time="0.096729"></testcase>
<testcase classname="spec.requests.patients.get_transport_spec" name="GetPatientTransport returns patient&apos;s transport preferences" file="./spec/requests/patients/get_transport_spec.rb" time="0.160132"></testcase>
<testcase classname="spec.requests.patients.get_transport_spec" name="GetPatientTransport requires write rights" file="./spec/requests/patients/get_transport_spec.rb" time="0.095220"></testcase>
<testcase classname="spec.requests.patients.get_transport_spec" name="GetPatientTransport fails if patient does not exist" file="./spec/requests/patients/get_transport_spec.rb" time="0.025610"></testcase>
<testcase classname="spec.models.charts.blood_pressure_history_spec" name="Charts::BloodPressureHistory#call returns pre and post blood pressures for the last five sessions" file="./spec/models/charts/blood_pressure_history_spec.rb" time="0.362423"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to have many identifiers class_name =&gt; Medications::Formulary::Identifier dependent =&gt; destroy" file="./spec/models/medications/formulary/item_spec.rb" time="0.002107"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to have many stocks class_name =&gt; Infrastructure::Stock through item_stocks" file="./spec/models/medications/formulary/item_spec.rb" time="0.002104"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to validate that :billed_to is either ‹&quot;patient&quot;›, ‹&quot;service&quot;›, or ‹&quot;non_billable&quot;›" file="./spec/models/medications/formulary/item_spec.rb" time="0.006538"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to have carbon :id, :name, :multidose, :billed_to, and :external_identifier" file="./spec/models/medications/formulary/item_spec.rb" time="0.003256"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to have many item_stocks inverse_of =&gt; formulary_item dependent =&gt; destroy" file="./spec/models/medications/formulary/item_spec.rb" time="0.001642"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/formulary/item_spec.rb" time="0.006559"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the service is expected to be billed to service" file="./spec/models/medications/formulary/item_spec.rb" time="0.005228"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the service is expected not to be billed to patient" file="./spec/models/medications/formulary/item_spec.rb" time="0.004976"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the service is expected not to be non billable" file="./spec/models/medications/formulary/item_spec.rb" time="0.004898"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is non billable is expected not to be billed to service" file="./spec/models/medications/formulary/item_spec.rb" time="0.007394"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is non billable is expected not to be billed to patient" file="./spec/models/medications/formulary/item_spec.rb" time="0.009180"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is non billable is expected to be non billable" file="./spec/models/medications/formulary/item_spec.rb" time="0.006899"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the patient is expected not to be non billable" file="./spec/models/medications/formulary/item_spec.rb" time="0.004744"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the patient is expected to be billed to patient" file="./spec/models/medications/formulary/item_spec.rb" time="0.004525"></testcase>
<testcase classname="spec.models.medications.formulary.item_spec" name="Medications::Formulary::Item#billed_to_patient? / #billed_to_service? / #non_billable? when the item is billed to the patient is expected not to be billed to service" file="./spec/models/medications/formulary/item_spec.rb" time="0.004365"></testcase>
<testcase classname="spec.models.vascular_access.services.replace_catheter_spec" name="VascularAccess::Services::ReplaceCatheter#call fails when it is not a catheter" file="./spec/models/vascular_access/services/replace_catheter_spec.rb" time="0.159638"></testcase>
<testcase classname="spec.models.vascular_access.services.replace_catheter_spec" name="VascularAccess::Services::ReplaceCatheter#call replaces the catheter" file="./spec/models/vascular_access/services/replace_catheter_spec.rb" time="0.374694"></testcase>
<testcase classname="spec.models.vascular_access.services.replace_catheter_spec" name="VascularAccess::Services::ReplaceCatheter#call replaces the catheter in the prescription if used" file="./spec/models/vascular_access/services/replace_catheter_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.requests.medications.get_companies_spec" name="GetCompanies returns an list of companies" file="./spec/requests/medications/get_companies_spec.rb" time="0.077740"></testcase>
<testcase classname="spec.requests.medications.get_companies_spec" name="GetCompanies returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/get_companies_spec.rb" time="0.025638"></testcase>
<testcase classname="spec.requests.medications.sources.update_source_spec" name="Update source returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/sources/update_source_spec.rb" time="0.027051"></testcase>
<testcase classname="spec.requests.medications.sources.update_source_spec" name="Update source returns success (200) but does not update the name when trying to change it" file="./spec/requests/medications/sources/update_source_spec.rb" time="0.033940"></testcase>
<testcase classname="spec.requests.medications.sources.update_source_spec" name="Update source returns success (200) and the source" file="./spec/requests/medications/sources/update_source_spec.rb" time="0.032653"></testcase>
<testcase classname="spec.requests.medications.sources.update_source_spec" name="Update source returns not found (404) if the source is not found" file="./spec/requests/medications/sources/update_source_spec.rb" time="0.025411"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_spec" name="Update Journal Entry when updating an existing entry succeeds for a note" file="./spec/requests/journal/update_journal_entry_spec.rb" time="0.110090"></testcase>
<testcase classname="spec.requests.journal.update_journal_entry_spec" name="Update Journal Entry when updating an existing entry fails for a journal item that isn&apos;t of the type &apos;note&apos;" file="./spec/requests/journal/update_journal_entry_spec.rb" time="0.098035"></testcase>
<testcase classname="spec.models.concerns.stringify_keys_spec" name="StringifyKeys stringifies keys" file="./spec/models/concerns/stringify_keys_spec.rb" time="0.001769"></testcase>
<testcase classname="spec.models.medications.providers.handlers.announce_spec" name="Medications::Providers::Handler when service discovery is disabled discards the message" file="./spec/models/medications/providers/handlers/announce_spec.rb" time="0.013928"></testcase>
<testcase classname="spec.models.medications.providers.handlers.announce_spec" name="Medications::Providers::Handler when service discovery is enabled touches the last_seen_at timestamp" file="./spec/models/medications/providers/handlers/announce_spec.rb" time="0.038721"></testcase>
<testcase classname="spec.models.medications.providers.handlers.announce_spec" name="Medications::Providers::Handler when service discovery is enabled updates the description and publication date" file="./spec/models/medications/providers/handlers/announce_spec.rb" time="0.036433"></testcase>
<testcase classname="spec.models.medications.providers.handlers.announce_spec" name="Medications::Providers::Handler when service discovery is enabled creates a new disables source on first sighting" file="./spec/models/medications/providers/handlers/announce_spec.rb" time="0.019184"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator is expected to respond to #on_odd_weeks" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.215604"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator is expected to respond to #on_days" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.227864"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator is expected to respond to #on_even_weeks" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.206200"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator session completed is expected not to be scheduled" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.224207"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.185216"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator session ongoing is expected to be scheduled" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.211081"></testcase>
<testcase classname="spec.models.planning.evaluators.week_evaluator_spec" name="Planning::Evaluators::WeekEvaluator session planned is expected to be scheduled" file="./spec/models/planning/evaluators/week_evaluator_spec.rb" time="0.189858"></testcase>
<testcase classname="spec.requests.infrastructure.get_centers_spec" name="Centers API /centers returns all centers" file="./spec/requests/infrastructure/get_centers_spec.rb" time="0.099334"></testcase>
<testcase classname="spec.requests.infrastructure.get_centers_spec" name="Centers API /centers returns only centers with shifts if `with_shifts` is passed" file="./spec/requests/infrastructure/get_centers_spec.rb" time="0.065830"></testcase>
<testcase classname="spec.requests.infrastructure.get_centers_spec" name="Centers API /centers returns all center with details" file="./spec/requests/infrastructure/get_centers_spec.rb" time="0.206838"></testcase>
<testcase classname="spec.requests.infrastructure.get_centers_spec" name="Centers API /centers/:id returns a single center with details" file="./spec/requests/infrastructure/get_centers_spec.rb" time="0.087846"></testcase>
<testcase classname="spec.requests.infrastructure.get_centers_spec" name="Centers API /centers/:id returns not found (404) if center doesn&apos;t exist" file="./spec/requests/infrastructure/get_centers_spec.rb" time="0.030359"></testcase>
<testcase classname="spec.requests.patients.destroy_patient_contact_spec" name="Deletes an existing patient contact returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/destroy_patient_contact_spec.rb" time="0.052046"></testcase>
<testcase classname="spec.requests.patients.destroy_patient_contact_spec" name="Deletes an existing patient contact deletes an existing contact" file="./spec/requests/patients/destroy_patient_contact_spec.rb" time="0.081374"></testcase>
<testcase classname="spec.models.medications.unit_spec" name="Medications::Unit is expected to have many products through product_prescribable_units" file="./spec/models/medications/unit_spec.rb" time="0.002643"></testcase>
<testcase classname="spec.models.medications.unit_spec" name="Medications::Unit is expected to validate that :identifier cannot be empty/falsy" file="./spec/models/medications/unit_spec.rb" time="0.006902"></testcase>
<testcase classname="spec.models.medications.unit_spec" name="Medications::Unit is expected to belong to source required: true" file="./spec/models/medications/unit_spec.rb" time="0.004081"></testcase>
<testcase classname="spec.models.medications.unit_spec" name="Medications::Unit is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/unit_spec.rb" time="0.005457"></testcase>
<testcase classname="spec.models.medications.unit_spec" name="Medications::Unit is expected to have many product_prescribable_units dependent =&gt; destroy" file="./spec/models/medications/unit_spec.rb" time="0.002334"></testcase>
<testcase classname="spec.requests.users.update_current_user_password_spec" name="ChangeCurrentUserPassword denies when old_password does not match old password" file="./spec/requests/users/update_current_user_password_spec.rb" time="0.032135"></testcase>
<testcase classname="spec.requests.users.update_current_user_password_spec" name="ChangeCurrentUserPassword denies when new_password and new_password_confirmation are not equal" file="./spec/requests/users/update_current_user_password_spec.rb" time="0.030328"></testcase>
<testcase classname="spec.requests.users.update_current_user_password_spec" name="ChangeCurrentUserPassword changes password" file="./spec/requests/users/update_current_user_password_spec.rb" time="0.043277"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.reports.recipe_prescription_report_spec" name="Medications::Prescriptions::Ehealth::Reports::RecipePrescriptionReport creates a report from an order with magistral preparations" file="./spec/models/medications/prescriptions/ehealth/reports/recipe_prescription_report_spec.rb" time="0.328379"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.reports.recipe_prescription_report_spec" name="Medications::Prescriptions::Ehealth::Reports::RecipePrescriptionReport creates a report from medication order with multiple items" file="./spec/models/medications/prescriptions/ehealth/reports/recipe_prescription_report_spec.rb" time="0.233418"></testcase>
<testcase classname="spec.models.medications.prescriptions.ehealth.reports.recipe_prescription_report_spec" name="Medications::Prescriptions::Ehealth::Reports::RecipePrescriptionReport creates a report from medication order with a single item" file="./spec/models/medications/prescriptions/ehealth/reports/recipe_prescription_report_spec.rb" time="0.336604"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_spec" name="DEL /api/connectors/:id returns success (200) when the connector has been deleted" file="./spec/requests/infrastructure/delete_connector_spec.rb" time="0.068916"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_spec" name="DEL /api/connectors/:id audits the destroy action" file="./spec/requests/infrastructure/delete_connector_spec.rb" time="0.036808"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_spec" name="DEL /api/connectors/:id returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/delete_connector_spec.rb" time="0.031334"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_spec" name="DEL /api/connectors/:id returns not found (404) if the connector was not found" file="./spec/requests/infrastructure/delete_connector_spec.rb" time="0.029200"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas DELETE /api/schemas/:id always deletes the &apos;remove&apos; deviations" file="./spec/requests/planning/schemas_spec.rb" time="0.142565"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas DELETE /api/schemas/:id deletes a schema" file="./spec/requests/planning/schemas_spec.rb" time="0.103209"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas DELETE /api/schemas/:id deletes the &apos;add&apos; deviations if set so" file="./spec/requests/planning/schemas_spec.rb" time="0.140344"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas DELETE /api/schemas/:id only deletes deviations covered by the schema" file="./spec/requests/planning/schemas_spec.rb" time="0.174446"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas DELETE /api/schemas/:id preserves the &apos;add&apos; deviations if set so" file="./spec/requests/planning/schemas_spec.rb" time="0.142838"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas GET /api/patients/:patient_id/schemas lists active schemas for a given patient" file="./spec/requests/planning/schemas_spec.rb" time="0.064965"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas PUT /api/schemas/:id updates a existing schema" file="./spec/requests/planning/schemas_spec.rb" time="0.273722"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas POST /api/patients/:patient_id/schemas fails when new schema overlaps with an existing one" file="./spec/requests/planning/schemas_spec.rb" time="0.175637"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas POST /api/patients/:patient_id/schemas fails when given position doesn&apos;t exist" file="./spec/requests/planning/schemas_spec.rb" time="0.151578"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas POST /api/patients/:patient_id/schemas creates a new schema" file="./spec/requests/planning/schemas_spec.rb" time="0.158914"></testcase>
<testcase classname="spec.requests.planning.schemas_spec" name="Schemas POST /api/patients/:patient_id/schemas fails when given shift doesn&apos;t exist" file="./spec/requests/planning/schemas_spec.rb" time="0.145241"></testcase>
<testcase classname="spec.models.infrastructure.connector_device_spec" name="Infrastructure::ConnectorDevice is expected to belong to connector required: true" file="./spec/models/infrastructure/connector_device_spec.rb" time="0.004083"></testcase>
<testcase classname="spec.models.infrastructure.connector_device_spec" name="Infrastructure::ConnectorDevice is expected to belong to device required: true" file="./spec/models/infrastructure/connector_device_spec.rb" time="0.003661"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent is expected to validate that :cwday lies inside the range ‹1› to ‹7›" file="./spec/models/clockwork_event_spec.rb" time="0.028865"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent is expected to validate that :job is either ‹&quot;GenerateBackupReportJob&quot;›, ‹&quot;CloseSessionsJob&quot;›, ‹&quot;PurgePatientsJob&quot;›, ‹&quot;GenerateBillingExportJob&quot;›, ‹&quot;GenerateMedicationExportJob&quot;›, ‹&quot;Executions::ScheduleJob&quot;›, or ‹&quot;Executions::PurgeJob&quot;›" file="./spec/models/clockwork_event_spec.rb" time="0.012392"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent is expected to validate that :frequency cannot be empty/falsy" file="./spec/models/clockwork_event_spec.rb" time="0.007065"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent is expected to validate that :mday lies inside the range ‹1› to ‹31›" file="./spec/models/clockwork_event_spec.rb" time="0.007615"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent is expected to validate that :name cannot be empty/falsy" file="./spec/models/clockwork_event_spec.rb" time="0.008499"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? enabled when it is enabled is expected to be if Thu, 25 Jun 2020" file="./spec/models/clockwork_event_spec.rb" time="0.005127"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? enabled when it is not enabled is expected not to be if Thu, 25 Jun 2020" file="./spec/models/clockwork_event_spec.rb" time="0.005564"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? daily jobs is expected to be if Fri, 04 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005892"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? daily jobs is expected to be if Tue, 01 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004770"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? daily jobs is expected to be if Sat, 05 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004983"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? daily jobs is expected to be if Wed, 02 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005186"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? daily jobs is expected to be if Thu, 03 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005173"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? feature toggle when it is enabled is expected to be if Thu, 25 Jun 2020" file="./spec/models/clockwork_event_spec.rb" time="0.016898"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? feature toggle when it is disabled is expected not to be if Thu, 25 Jun 2020" file="./spec/models/clockwork_event_spec.rb" time="0.009014"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Mon, 04 Nov 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005141"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected to be if Sat, 02 Nov 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005240"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected to be if Wed, 02 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.006039"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Fri, 01 Nov 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005496"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Sat, 05 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004935"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Fri, 04 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004692"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Tue, 01 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004747"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Sun, 03 Nov 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004401"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Tue, 05 Nov 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005071"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? monthly jobs is expected not to be if Thu, 03 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004900"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Wed, 09 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004809"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Thu, 10 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004717"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected to be if Tue, 08 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.004633"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Wed, 02 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005346"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Thu, 03 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005050"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Mon, 07 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005286"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected to be if Tue, 01 Oct 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005358"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#if? weekly jobs is expected not to be if Mon, 30 Sep 2019" file="./spec/models/clockwork_event_spec.rb" time="0.005042"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#schedule! when the event has options schedules the job and sets the last_scheduled_at timestamp" file="./spec/models/clockwork_event_spec.rb" time="0.009772"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#schedule! when the event does not have options schedules the job and sets the last_scheduled_at timestamp" file="./spec/models/clockwork_event_spec.rb" time="0.008599"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_cwday_or_mday is invalid when both cwday and mday are present " file="./spec/models/clockwork_event_spec.rb" time="0.003191"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_cwday_or_mday is valid when only mday is present" file="./spec/models/clockwork_event_spec.rb" time="0.002484"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_cwday_or_mday is valid when neither cwday or mday are present" file="./spec/models/clockwork_event_spec.rb" time="0.002286"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_cwday_or_mday is valid when only cwday is present" file="./spec/models/clockwork_event_spec.rb" time="0.002522"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_at is invalid when at is invalid" file="./spec/models/clockwork_event_spec.rb" time="0.003333"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_at is valid when at is valid" file="./spec/models/clockwork_event_spec.rb" time="0.002200"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_options is invalid when extra options are present" file="./spec/models/clockwork_event_spec.rb" time="0.002855"></testcase>
<testcase classname="spec.models.clockwork_event_spec" name="ClockworkEvent#validate_options is valid when options are present" file="./spec/models/clockwork_event_spec.rb" time="0.002125"></testcase>
<testcase classname="spec.models.patients.patient_diagnosis_spec" name="Patients::PatientDiagnosis is expected to belong to patient required: true" file="./spec/models/patients/patient_diagnosis_spec.rb" time="0.004002"></testcase>
<testcase classname="spec.models.patients.patient_diagnosis_spec" name="Patients::PatientDiagnosis is expected to belong to diagnosis required: true" file="./spec/models/patients/patient_diagnosis_spec.rb" time="0.003186"></testcase>
<testcase classname="spec.models.patients.patient_diagnosis_spec" name="Patients::PatientDiagnosis#diagnosis returns the primary diagnosis" file="./spec/models/patients/patient_diagnosis_spec.rb" time="0.037901"></testcase>
<testcase classname="spec.models.patients.patient_diagnosis_spec" name="Patients::PatientDiagnosis#validate_start_date_future returns an error if the start_date is in the future" file="./spec/models/patients/patient_diagnosis_spec.rb" time="0.012278"></testcase>
<testcase classname="spec.models.complications.complication_spec" name="Complications::Complication is expected to validate that :complication_type cannot be empty/falsy" file="./spec/models/complications/complication_spec.rb" time="0.007131"></testcase>
<testcase classname="spec.models.complications.complication_spec" name="Complications::Complication is expected to validate that :complication_type is either ‹&quot;hypotension&quot;›, ‹&quot;hypoglycemia&quot;›, ‹&quot;fever&quot;›, ‹&quot;muscle_cramps&quot;›, ‹&quot;arrythmia&quot;›, ‹&quot;hemolysis&quot;›, ‹&quot;anaphylactic_shock&quot;›, ‹&quot;coagulation&quot;›, ‹&quot;deconnection&quot;›, ‹&quot;machine_malfunction&quot;›, ‹&quot;infection&quot;›, ‹&quot;ischaemia&quot;›, ‹&quot;hematoma&quot;›, ‹&quot;bleeding&quot;›, ‹&quot;aneurysm&quot;›, ‹&quot;stenosis&quot;›, ‹&quot;thrombosis&quot;›, or ‹&quot;decreased_blood_flow&quot;›" file="./spec/models/complications/complication_spec.rb" time="0.021635"></testcase>
<testcase classname="spec.models.complications.complication_spec" name="Complications::Complication is expected to belong to session optional: true" file="./spec/models/complications/complication_spec.rb" time="0.004141"></testcase>
<testcase classname="spec.models.complications.complication_spec" name="Complications::Complication is expected to have one patient" file="./spec/models/complications/complication_spec.rb" time="0.002134"></testcase>
<testcase classname="spec.models.complications.complication_spec" name="Complications::Complication is expected to belong to user required: true" file="./spec/models/complications/complication_spec.rb" time="0.003902"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication returns created (201) and a JWT" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.171039"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication returns unauthorized (401) if the user was soft deleted" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.061143"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication accepts case insensitive login" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.085403"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication returns unauthorized (401) if the user cannot access nephroflow" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.026219"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication returns unauthorized (401) if user doesn&apos;t exist" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.021954"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication returns unauthorized (401) if the credentials aren&apos;t correct" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.062283"></testcase>
<testcase classname="spec.requests.auth.ldap.create_authentication_spec" name="Create authentication accepts email as login" file="./spec/requests/auth/ldap/create_authentication_spec.rb" time="0.053464"></testcase>
<testcase classname="spec.lib.health.influxdb_health_checker_spec" name="Health::InfluxDBHealthChecker.check when the database is healthy returns a healthy check" file="./spec/lib/health/influxdb_health_checker_spec.rb" time="0.004409"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to transition state to :removed from :active on event :remove, with params: [] (on :default)" file="./spec/models/medications/state_machine_spec.rb" time="0.005393"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to transition state to :active from :suspended on event :activate, with params: [] (on :default)" file="./spec/models/medications/state_machine_spec.rb" time="0.005376"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to have initial state :active" file="./spec/models/medications/state_machine_spec.rb" time="0.006370"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to transition state to :removed from :suspended on event :remove, with params: [] (on :default)" file="./spec/models/medications/state_machine_spec.rb" time="0.005163"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to transition state to :suspended from :active on event :suspend, with params: [] (on :default)" file="./spec/models/medications/state_machine_spec.rb" time="0.004984"></testcase>
<testcase classname="spec.models.medications.state_machine_spec" name="Medications::Product is expected to have states &quot;active&quot;, &quot;suspended&quot;, and &quot;removed&quot;" file="./spec/models/medications/state_machine_spec.rb" time="0.005056"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder register a prescription with recip-e for each item of an order" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.324954"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder returns the sent prescription if the prescription already sent" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.218903"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder fails if patient does not exist" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.165097"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder register an already failed order with recip-e" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.270869"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder fails if order does not exist" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.113572"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder fails if the patient has no national identification number" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.275569"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder fails if the prescriber has no practitioner identification number" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.205209"></testcase>
<testcase classname="spec.requests.medications.register_home_medication_order_spec" name="Medications registerHomeMedicationOrder when recip-e is disabled denies register" file="./spec/requests/medications/register_home_medication_order_spec.rb" time="0.153715"></testcase>
<testcase classname="spec.requests.patients.get_identifiers_spec" name="GetPatientIdentifiers returns all identifiers for a patient" file="./spec/requests/patients/get_identifiers_spec.rb" time="0.124504"></testcase>
<testcase classname="spec.requests.patients.get_identifiers_spec" name="GetPatientIdentifiers returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_identifiers_spec.rb" time="0.089131"></testcase>
<testcase classname="spec.requests.patients.merge_emergency_patients_spec" name="MergeEmergencyPatients requires authorization" file="./spec/requests/patients/merge_emergency_patients_spec.rb" time="0.039732"></testcase>
<testcase classname="spec.requests.patients.merge_emergency_patients_spec" name="MergeEmergencyPatients returns unprocessable if both patients are enrolled" file="./spec/requests/patients/merge_emergency_patients_spec.rb" time="0.085676"></testcase>
<testcase classname="spec.requests.patients.merge_emergency_patients_spec" name="MergeEmergencyPatients returns not found if the EHR_patient is not found" file="./spec/requests/patients/merge_emergency_patients_spec.rb" time="0.072064"></testcase>
<testcase classname="spec.requests.patients.merge_emergency_patients_spec" name="MergeEmergencyPatients returns not found if the emergency_patient is not found" file="./spec/requests/patients/merge_emergency_patients_spec.rb" time="0.097360"></testcase>
<testcase classname="spec.requests.patients.merge_emergency_patients_spec" name="MergeEmergencyPatients merging enrolled patients merges successfuly two patients" file="./spec/requests/patients/merge_emergency_patients_spec.rb" time="0.193953"></testcase>
<testcase classname="spec.requests.update_code_system_spec" name="Update Code System returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/update_code_system_spec.rb" time="0.041125"></testcase>
<testcase classname="spec.requests.update_code_system_spec" name="Update Code System returns unprocessable entity (422) when reusing a name within" file="./spec/requests/update_code_system_spec.rb" time="0.055042"></testcase>
<testcase classname="spec.requests.update_code_system_spec" name="Update Code System returns method not allowed (405) when updating a non-editable code system" file="./spec/requests/update_code_system_spec.rb" time="0.040413"></testcase>
<testcase classname="spec.requests.update_code_system_spec" name="Update Code System returns success (200) and an updated code_system" file="./spec/requests/update_code_system_spec.rb" time="0.042098"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_complications_spec" name="GetVascularAccessComplications returns the list of vascular access complications" file="./spec/requests/vascular_access/get_vascular_access_complications_spec.rb" time="0.334839"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_complications_spec" name="GetVascularAccessComplications returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_vascular_access_complications_spec.rb" time="0.116931"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_complications_spec" name="GetVascularAccessComplications returns complications that belong to the vascular_access category" file="./spec/requests/vascular_access/get_vascular_access_complications_spec.rb" time="0.246700"></testcase>
<testcase classname="spec.requests.patients.delete_patient_attachment_spec" name="PatientAttachments when deleting an attachment deletes the attachment" file="./spec/requests/patients/delete_patient_attachment_spec.rb" time="0.083709"></testcase>
<testcase classname="spec.requests.patients.delete_patient_attachment_spec" name="PatientAttachments when deleting an attachment returns not found if attachment doesn&apos;t exist" file="./spec/requests/patients/delete_patient_attachment_spec.rb" time="0.040629"></testcase>
<testcase classname="spec.requests.patients.delete_patient_attachment_spec" name="PatientAttachments when deleting an attachment requires authorization" file="./spec/requests/patients/delete_patient_attachment_spec.rb" time="0.080044"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the date contains escaped characters falls back to the current time" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.003265"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when no timezone is provided parses the date in the customer timezone" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.003471"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the timezone is missing parses the date in the customer timezone" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.003131"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the timezone is provided creates a date in the provided timezone" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.002541"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the date does not provide time information create a date with time set to 00:00:00" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.002517"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the date is invalid falls back to the current time" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.004645"></testcase>
<testcase classname="spec.models.laboratory.report_time_builder_spec" name="Laboratory::ReportTimeBuilder when the date is empty falls back to the current time" file="./spec/models/laboratory/report_time_builder_spec.rb" time="0.003083"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.179921"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview returns not_found (404) if the session cannot be found" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.034922"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview returns due intradialytic medication for the given session" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.404174"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview returns due orders for the given session" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.264317"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview returns the day overview for the given session" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.133036"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview when orders and medication are planned in a night shift session stills show the orders and medications after 12pm" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.532421"></testcase>
<testcase classname="spec.requests.sessions.get_day_overview_spec" name="GetDayOverview when an order is planned the first session of the week is in the Monday session when sessions are scheduled on Monday and Tuesday" file="./spec/requests/sessions/get_day_overview_spec.rb" time="0.415514"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room returns an error if room name is not unique within a center" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.065676"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room returns an error if room dimension is under/over the grid dimension limit" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.096460"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room returns an error if room dimension is under the list dimension limit" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.054023"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room returns unauthorized if unauthorized" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.042456"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room creates a room in grid mode" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.260255"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room creates a room in list mode" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.491386"></testcase>
<testcase classname="spec.requests.infrastructure.create_room_spec" name="Rooms when creating a room returns an error if center does not exist" file="./spec/requests/infrastructure/create_room_spec.rb" time="0.033476"></testcase>
<testcase classname="spec.requests.sessions.scenario_spec" name="Scenario tests from enrollment to ending the first session" file="./spec/requests/sessions/scenario_spec.rb" time="0.528383"></testcase>
<testcase classname="spec.requests.sessions.scenario_spec" name="Scenario deletes sessions if cancelled before connect phase" file="./spec/requests/sessions/scenario_spec.rb" time="0.392632"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder returns (422) if the standing order already exists" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.105324"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder returns created product standing order" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.088038"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder returns created magistral standing order" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.069471"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder returns (403) if the user isn&apos;t authorized" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.077408"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder when prescriber practitioner identifiers are required returns (422) if the standing order&apos;s prescriber is set to a nurse" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.125045"></testcase>
<testcase classname="spec.requests.medications.standing_orders.create_standing_order_spec" name="CreateStandingOrder when prescriber practitioner identifiers are required returns (422) if the standing order&apos;s prescriber is set to a doctor without a practitioner_identifier" file="./spec/requests/medications/standing_orders/create_standing_order_spec.rb" time="0.116025"></testcase>
<testcase classname="spec.requests.patients.ultrafiltration_volume_adjustments_spec" name="POST /patients/:patient_id/ultrafiltration_volume_adjustments returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/ultrafiltration_volume_adjustments_spec.rb" time="0.105922"></testcase>
<testcase classname="spec.requests.patients.ultrafiltration_volume_adjustments_spec" name="POST /patients/:patient_id/ultrafiltration_volume_adjustments when creating a ultrafiltration volume adjustment returns 201 created with the created ultrafiltration volume adjustment" file="./spec/requests/patients/ultrafiltration_volume_adjustments_spec.rb" time="0.123038"></testcase>
<testcase classname="spec.requests.patients.ultrafiltration_volume_adjustments_spec" name="POST /patients/:patient_id/ultrafiltration_volume_adjustments when creating a ultrafiltration volume adjustment audits the action" file="./spec/requests/patients/ultrafiltration_volume_adjustments_spec.rb" time="0.133638"></testcase>
<testcase classname="spec.requests.patients.ultrafiltration_volume_adjustments_spec" name="POST /patients/:patient_id/ultrafiltration_volume_adjustments when params are wrong returns 422 unprocessable entity" file="./spec/requests/patients/ultrafiltration_volume_adjustments_spec.rb" time="0.118938"></testcase>
<testcase classname="spec.requests.patients.ultrafiltration_volume_adjustments_spec" name="POST /patients/:patient_id/ultrafiltration_volume_adjustments when params are wrong does not audit the action" file="./spec/requests/patients/ultrafiltration_volume_adjustments_spec.rb" time="0.128736"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration returns not found (404) if the configuration does not exist" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.040112"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration creates an audit" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.059183"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration when the configuration has `secure` level returns success (200) and the updated configuration" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.039254"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration when the configuration has `secure` level returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.034158"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration when the configuration has `public` or `protected` level returns success (200) and the updated configuration" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.067463"></testcase>
<testcase classname="spec.requests.configurations.update_configuration_spec" name="Update configuration when the configuration has `public` or `protected` level returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/configurations/update_configuration_spec.rb" time="0.047780"></testcase>
<testcase classname="spec.requests.infrastructure.delete_transport_type_spec" name="Delete transport type returns success (200) and (soft) deletes the transport type" file="./spec/requests/infrastructure/delete_transport_type_spec.rb" time="0.056942"></testcase>
<testcase classname="spec.requests.infrastructure.delete_transport_type_spec" name="Delete transport type returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/delete_transport_type_spec.rb" time="0.031034"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service is expected to validate that :code cannot be empty/falsy" file="./spec/models/infrastructure/service_spec.rb" time="0.010213"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/service_spec.rb" time="0.009592"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service is expected to have carbon :id, :code, and :name" file="./spec/models/infrastructure/service_spec.rb" time="0.001864"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service is expected to have many rooms" file="./spec/models/infrastructure/service_spec.rb" time="0.002273"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service validates uniqueness of code" file="./spec/models/infrastructure/service_spec.rb" time="0.017086"></testcase>
<testcase classname="spec.models.infrastructure.service_spec" name="Infrastructure::Service validates uniqueness of name" file="./spec/models/infrastructure/service_spec.rb" time="0.019219"></testcase>
<testcase classname="spec.models.executions.exports.transport_prognosis_spec" name="Executions::Exports::TransportPrognosis#sanitize_payload sanitizes payload" file="./spec/models/executions/exports/transport_prognosis_spec.rb" time="0.027187"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_prescription_options_spec" name="Get intradialytic prescription options does not return prescriptions if outside date range" file="./spec/requests/medications/get_intradialytic_prescription_options_spec.rb" time="0.194941"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_prescription_options_spec" name="Get intradialytic prescription options returns prescriptions for the given patient" file="./spec/requests/medications/get_intradialytic_prescription_options_spec.rb" time="0.129028"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_prescription_options_spec" name="Get intradialytic prescription options returns prescriptions for products and magistral preparations" file="./spec/requests/medications/get_intradialytic_prescription_options_spec.rb" time="0.190559"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_prescription_options_spec" name="Get intradialytic prescription options requires read rights" file="./spec/requests/medications/get_intradialytic_prescription_options_spec.rb" time="0.078968"></testcase>
<testcase classname="spec.requests.medications.get_intradialytic_prescription_options_spec" name="Get intradialytic prescription options returns several prescriptions ordered by product name" file="./spec/requests/medications/get_intradialytic_prescription_options_spec.rb" time="0.230017"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema allows updating a schema without overlap warning for itself" file="./spec/models/planning/schema_spec.rb" time="0.079973"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema is expected to have many schema_elements" file="./spec/models/planning/schema_spec.rb" time="0.002121"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema checks that start date is strictly before end date" file="./spec/models/planning/schema_spec.rb" time="0.004064"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema checks that start date is before end date" file="./spec/models/planning/schema_spec.rb" time="0.003946"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema detects overlapping schemas" file="./spec/models/planning/schema_spec.rb" time="0.083454"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema checks that no two schemas overlap" file="./spec/models/planning/schema_spec.rb" time="0.076709"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema is expected to belong to patient required: true" file="./spec/models/planning/schema_spec.rb" time="0.009335"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema is expected to validate that :start_date cannot be empty/falsy" file="./spec/models/planning/schema_spec.rb" time="0.005623"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date D" file="./spec/models/planning/schema_spec.rb" time="0.061146"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date B" file="./spec/models/planning/schema_spec.rb" time="0.093850"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema without end_date C" file="./spec/models/planning/schema_spec.rb" time="0.058796"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schema" file="./spec/models/planning/schema_spec.rb" time="0.065232"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date F" file="./spec/models/planning/schema_spec.rb" time="0.060638"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date C" file="./spec/models/planning/schema_spec.rb" time="0.065717"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema without end_date A" file="./spec/models/planning/schema_spec.rb" time="0.061339"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns an empty set when no schema overlaps" file="./spec/models/planning/schema_spec.rb" time="0.067697"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date A" file="./spec/models/planning/schema_spec.rb" time="0.062151"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema without end_date B" file="./spec/models/planning/schema_spec.rb" time="0.066525"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema without end_date D" file="./spec/models/planning/schema_spec.rb" time="0.059478"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns overlapping schemas for a new schema with an end date E" file="./spec/models/planning/schema_spec.rb" time="0.060586"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.overlapping returns all the schemas that a new schema does overlap" file="./spec/models/planning/schema_spec.rb" time="0.077820"></testcase>
<testcase classname="spec.models.planning.schema_spec" name="Planning::Schema.active returns active schema" file="./spec/models/planning/schema_spec.rb" time="0.000025"><skipped/></testcase>
<testcase classname="spec.models.context_links.base_spec" name="ContextLinks::Base is expected to validate that :name cannot be empty/falsy" file="./spec/models/context_links/base_spec.rb" time="0.021259"></testcase>
<testcase classname="spec.models.context_links.base_spec" name="ContextLinks::Base is expected to validate that :type cannot be empty/falsy" file="./spec/models/context_links/base_spec.rb" time="0.020071"></testcase>
<testcase classname="spec.models.context_links.base_spec" name="ContextLinks::Base is expected to validate that :uri cannot be empty/falsy" file="./spec/models/context_links/base_spec.rb" time="0.018580"></testcase>
<testcase classname="spec.models.context_links.base_spec" name="ContextLinks::Base is expected to validate that :name is case-sensitively unique" file="./spec/models/context_links/base_spec.rb" time="0.020608"></testcase>
<testcase classname="spec.requests.medications.create_unit_spec" name="Create Unit returns not found (404) when using an undefined source" file="./spec/requests/medications/create_unit_spec.rb" time="0.045802"></testcase>
<testcase classname="spec.requests.medications.create_unit_spec" name="Create Unit returns method_not_allowed (405) when creating within a supervised source" file="./spec/requests/medications/create_unit_spec.rb" time="0.032376"></testcase>
<testcase classname="spec.requests.medications.create_unit_spec" name="Create Unit returns success (200) and creates the unit when in in a unsupervised source" file="./spec/requests/medications/create_unit_spec.rb" time="0.037866"></testcase>
<testcase classname="spec.requests.medications.create_unit_spec" name="Create Unit returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/create_unit_spec.rb" time="0.035047"></testcase>
<testcase classname="spec.requests.wounds.wound_types_spec" name="Wound types returns the available types of wound" file="./spec/requests/wounds/wound_types_spec.rb" time="0.028077"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_device_spec" name="DEL /api/connectors/:id/devices/:id audits the destroy action" file="./spec/requests/infrastructure/delete_connector_device_spec.rb" time="0.059709"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_device_spec" name="DEL /api/connectors/:id/devices/:id returns not found (404) if the connector_device was not found" file="./spec/requests/infrastructure/delete_connector_device_spec.rb" time="0.051245"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_device_spec" name="DEL /api/connectors/:id/devices/:id returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/delete_connector_device_spec.rb" time="0.059308"></testcase>
<testcase classname="spec.requests.infrastructure.delete_connector_device_spec" name="DEL /api/connectors/:id/devices/:id returns success (200) when the connector has been deleted" file="./spec/requests/infrastructure/delete_connector_device_spec.rb" time="0.058274"></testcase>
<testcase classname="spec.requests.medications.sources.get_source_spec" name="Get source returns success (200) and the source" file="./spec/requests/medications/sources/get_source_spec.rb" time="0.046934"></testcase>
<testcase classname="spec.requests.medications.sources.get_source_spec" name="Get source returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/sources/get_source_spec.rb" time="0.025600"></testcase>
<testcase classname="spec.requests.medications.sources.get_source_spec" name="Get source returns not found (404) if the source is not found" file="./spec/requests/medications/sources/get_source_spec.rb" time="0.028590"></testcase>
<testcase classname="spec.models.sessions.services.consume_session_disposables_spec" name="Sessions::Services::ConsumeSessionDisposables#call consumes defined disposables marks the disposables as consumed" file="./spec/models/sessions/services/consume_session_disposables_spec.rb" time="0.697943"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments creates a new comment for a given journal entry" file="./spec/requests/journal/journal_comments_spec.rb" time="0.206207"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments returns comments for a given journal entry" file="./spec/requests/journal/journal_comments_spec.rb" time="0.292209"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments unauthorized for a user with only read rights" file="./spec/requests/journal/journal_comments_spec.rb" time="0.132165"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments unauthorized for a user with manage rights for other journals" file="./spec/requests/journal/journal_comments_spec.rb" time="0.097766"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments when deleting an existing comments fails for users other that the original author" file="./spec/requests/journal/journal_comments_spec.rb" time="0.112916"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments when deleting an existing comments succeeds for the original author" file="./spec/requests/journal/journal_comments_spec.rb" time="0.093974"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments when updating an existing comments fails for users other that the original author" file="./spec/requests/journal/journal_comments_spec.rb" time="0.109068"></testcase>
<testcase classname="spec.requests.journal.journal_comments_spec" name="Journal Comments when updating an existing comments succeeds for the original author" file="./spec/requests/journal/journal_comments_spec.rb" time="0.104145"></testcase>
<testcase classname="spec.models.medications.intradialytic_prescription_repository_spec" name="Medications::IntradialyticPrescriptionRepository returns prescriptions that have no matching formulary item" file="./spec/models/medications/intradialytic_prescription_repository_spec.rb" time="0.488452"></testcase>
<testcase classname="spec.requests.executions.destroy_execution_spec" name="Destroy execution returns no content (204)" file="./spec/requests/executions/destroy_execution_spec.rb" time="0.053446"></testcase>
<testcase classname="spec.requests.executions.destroy_execution_spec" name="Destroy execution returns not found (404) if the execution is not found" file="./spec/requests/executions/destroy_execution_spec.rb" time="0.026451"></testcase>
<testcase classname="spec.requests.executions.destroy_execution_spec" name="Destroy execution returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/destroy_execution_spec.rb" time="0.043253"></testcase>
<testcase classname="spec.requests.executions.destroy_execution_spec" name="Destroy execution returns not found (404) if the user does not have the necessary rights" file="./spec/requests/executions/destroy_execution_spec.rb" time="0.047298"></testcase>
<testcase classname="spec.models.patients.patient_transplant_eligibility_status_spec" name="Patients::PatientTransplantEligibilityStatus is expected to belong to patient required: true" file="./spec/models/patients/patient_transplant_eligibility_status_spec.rb" time="0.003996"></testcase>
<testcase classname="spec.models.patients.patient_transplant_eligibility_status_spec" name="Patients::PatientTransplantEligibilityStatus is expected to belong to created_by required: true" file="./spec/models/patients/patient_transplant_eligibility_status_spec.rb" time="0.003756"></testcase>
<testcase classname="spec.models.planning.session_finder_spec" name="Planning::SessionFinder#in_month_of returns a MonthEvaluator" file="./spec/models/planning/session_finder_spec.rb" time="0.009590"></testcase>
<testcase classname="spec.models.planning.session_finder_spec" name="Planning::SessionFinder#in_week_of returns a WeekEvaluator" file="./spec/models/planning/session_finder_spec.rb" time="0.009505"></testcase>
<testcase classname="spec.models.planning.session_finder_spec" name="Planning::SessionFinder decoration decorates the evaluator" file="./spec/models/planning/session_finder_spec.rb" time="0.009403"></testcase>
<testcase classname="spec.models.planning.session_finder_spec" name="Planning::SessionFinder#in_session_on returns a SessionEvaluator" file="./spec/models/planning/session_finder_spec.rb" time="0.009265"></testcase>
<testcase classname="spec.models.planning.session_finder_spec" name="Planning::SessionFinder#in_day_of returns a DayEvaluator" file="./spec/models/planning/session_finder_spec.rb" time="0.008974"></testcase>
<testcase classname="spec.requests.medications.update_medication_prescription_addition_spec" name="MedicationsPrescriptionAddition UpdateMedicationsPrescriptionAddition suceeds if all ok " file="./spec/requests/medications/update_medication_prescription_addition_spec.rb" time="0.034222"></testcase>
<testcase classname="spec.requests.medications.update_medication_prescription_addition_spec" name="MedicationsPrescriptionAddition UpdateMedicationsPrescriptionAddition fails if object does not exit" file="./spec/requests/medications/update_medication_prescription_addition_spec.rb" time="0.029023"></testcase>
<testcase classname="spec.requests.medications.update_medication_prescription_addition_spec" name="MedicationsPrescriptionAddition UpdateMedicationsPrescriptionAddition denies update if not granted" file="./spec/requests/medications/update_medication_prescription_addition_spec.rb" time="0.028153"></testcase>
<testcase classname="spec.requests.patients.get_weights_spec" name="Patient weights returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/get_weights_spec.rb" time="0.027271"></testcase>
<testcase classname="spec.requests.patients.get_weights_spec" name="Patient weights returns all weights for a patient" file="./spec/requests/patients/get_weights_spec.rb" time="0.106137"></testcase>
<testcase classname="spec.requests.patients.get_weights_spec" name="Patient weights returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/get_weights_spec.rb" time="0.027880"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents filters on event type and patient" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.166452"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents returns adt events" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.101763"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents filters on patient" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.202046"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents does not return adt events for unenrolled patients" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.123243"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.091808"></testcase>
<testcase classname="spec.requests.episodes.get_adt_events_spec" name="GetEpisodeEvents filters on event type" file="./spec/requests/episodes/get_adt_events_spec.rb" time="0.162755"></testcase>
<testcase classname="spec.models.infrastructure.consumable_spec" name="Infrastructure::Consumable is expected to have many items" file="./spec/models/infrastructure/consumable_spec.rb" time="0.001769"></testcase>
<testcase classname="spec.models.infrastructure.consumable_spec" name="Infrastructure::Consumable validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/consumable_spec.rb" time="0.013615"></testcase>
<testcase classname="spec.models.infrastructure.consumable_spec" name="Infrastructure::Consumable validations is expected to validate that :name is case-sensitively unique" file="./spec/models/infrastructure/consumable_spec.rb" time="0.012449"></testcase>
<testcase classname="spec.models.infrastructure.consumable_spec" name="Infrastructure::Consumable validations is expected to validate that :name is either ‹:arterial_needle›, ‹:bicarbonate_bag›, ‹:bolus_product›, ‹:catheter_lock_type›, ‹:citrate_type›, ‹:dialysate_concentrate›, ‹:dialyser›, ‹:hemofilter_set›, ‹:hemostatic_device›, ‹:permanent_catheter›, ‹:post_care_device›, ‹:priming_product›, ‹:single_needle›, ‹:substitution_fluid›, ‹:temporary_catheter›, ‹:venous_needle›, ‹:wound_bandage›, ‹:wound_cleaning›, ‹:wound_disinfection›, ‹:wound_dressing›, ‹:wound_ointment›, or ‹:wound_perimeter_protection›" file="./spec/models/infrastructure/consumable_spec.rb" time="0.044887"></testcase>
<testcase classname="spec.requests.logbook.get_tags_spec" name="GetTag returns the list of available tags" file="./spec/requests/logbook/get_tags_spec.rb" time="0.043512"></testcase>
<testcase classname="spec.lib.validators.min_length_validator_spec" name="Validators::MinLengthValidator accepts values with length higher than min" file="./spec/lib/validators/min_length_validator_spec.rb" time="0.001577"></testcase>
<testcase classname="spec.lib.validators.min_length_validator_spec" name="Validators::MinLengthValidator rejects too short values" file="./spec/lib/validators/min_length_validator_spec.rb" time="0.001890"></testcase>
<testcase classname="spec.requests.users.destroy_user_spec" name="UsersController .destroy also deletes a user&apos;s center acl&apos;s" file="./spec/requests/users/destroy_user_spec.rb" time="0.065197"></testcase>
<testcase classname="spec.requests.users.destroy_user_spec" name="UsersController .destroy deletes a user when admin" file="./spec/requests/users/destroy_user_spec.rb" time="0.159440"></testcase>
<testcase classname="spec.requests.users.destroy_user_spec" name="UsersController .destroy rejects users deletion if not authorized" file="./spec/requests/users/destroy_user_spec.rb" time="0.029597"></testcase>
<testcase classname="spec.requests.users.destroy_user_spec" name="UsersController .destroy allow an admin to delete another admin role" file="./spec/requests/users/destroy_user_spec.rb" time="0.099534"></testcase>
<testcase classname="spec.requests.users.destroy_user_spec" name="UsersController .destroy also deletes a user&apos;s global center acl&apos;s" file="./spec/requests/users/destroy_user_spec.rb" time="0.056973"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_spec" name="Center UpdateCenter validates facility identifier" file="./spec/requests/infrastructure/update_center_spec.rb" time="0.039706"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_spec" name="Center UpdateCenter fails if a center with given id is not found" file="./spec/requests/infrastructure/update_center_spec.rb" time="0.028774"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_spec" name="Center UpdateCenter updates the center data" file="./spec/requests/infrastructure/update_center_spec.rb" time="0.056983"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_spec" name="Center UpdateCenter fails updating if shifts are removed" file="./spec/requests/infrastructure/update_center_spec.rb" time="0.039742"></testcase>
<testcase classname="spec.requests.infrastructure.update_center_spec" name="Center UpdateCenter requires the correct rights to update" file="./spec/requests/infrastructure/update_center_spec.rb" time="0.037462"></testcase>
<testcase classname="spec.lib.validators.max_value_validator_spec" name="Validators::MaxValueValidator rejects values greater than max" file="./spec/lib/validators/max_value_validator_spec.rb" time="0.002036"></testcase>
<testcase classname="spec.lib.validators.max_value_validator_spec" name="Validators::MaxValueValidator accepts values equal to max" file="./spec/lib/validators/max_value_validator_spec.rb" time="0.002023"></testcase>
<testcase classname="spec.lib.validators.max_value_validator_spec" name="Validators::MaxValueValidator accepts values lower than max" file="./spec/lib/validators/max_value_validator_spec.rb" time="0.001852"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to validate that :milliliters looks like an integer" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.007946"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to belong to patient required: true" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.005498"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to validate uniqueness of name" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.079210"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to have an index on :patient_id" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.004777"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to validate that :name cannot be empty/falsy" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.010396"></testcase>
<testcase classname="spec.models.patients.ultrafiltration_volume_adjustment_spec" name="Patients::UltrafiltrationVolumeAdjustment is expected to validate that :milliliters cannot be empty/falsy" file="./spec/models/patients/ultrafiltration_volume_adjustment_spec.rb" time="0.007392"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication succeeds if prescription dates are before start_date" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.126794"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication accepts existing medication if of different type" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.117217"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication returns unprocessable entity (422) if quantity is negative" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.128102"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication fails if patient does not exist" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.041839"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication saves the given medication prescription" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.157889"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication does not fail if a stopped medication does exist" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.122745"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication fails if variant and product do not match" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.139596"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication denies prescribing if not granted" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.085016"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication succeeds if prescription dates are not between start_date and end_date" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.126069"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication rejects medication if start and end date overlap" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.102189"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication returns unprocessable entity (422) if quantity is too big" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.098220"></testcase>
<testcase classname="spec.requests.medications.prescribe_home_medication_spec" name="Medications PrescribeHomeMedication deduces product from variant" file="./spec/requests/medications/prescribe_home_medication_spec.rb" time="0.114861"></testcase>
<testcase classname="spec.requests.planning.delete_deviation_for_patient_spec" name="Delete a deviation for a patient fails if deviation does not exist" file="./spec/requests/planning/delete_deviation_for_patient_spec.rb" time="0.029114"></testcase>
<testcase classname="spec.requests.planning.delete_deviation_for_patient_spec" name="Delete a deviation for a patient deletes a deviation" file="./spec/requests/planning/delete_deviation_for_patient_spec.rb" time="0.124653"></testcase>
<testcase classname="spec.models.charts.vascular_access_site_complications_history_spec" name="Charts::VascularAccessSiteComplicationsHistory#call returns 1 year complications count grouped by month" file="./spec/models/charts/vascular_access_site_complications_history_spec.rb" time="0.838928"></testcase>
<testcase classname="spec.models.configurations.boolean_spec" name="Configurations::Boolean casts to boolean" file="./spec/models/configurations/boolean_spec.rb" time="0.016071"></testcase>
<testcase classname="spec.models.configurations.boolean_spec" name="Configurations::Boolean calls a service object after save" file="./spec/models/configurations/boolean_spec.rb" time="0.016667"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation accepts valid practitioner identifier" file="./spec/models/users/user_spec.rb" time="0.014140"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation validates practitioner identifier if present" file="./spec/models/users/user_spec.rb" time="0.010619"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation accepts null practitioner identifier" file="./spec/models/users/user_spec.rb" time="0.015067"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation .by_profession returns users with the provided profession" file="./spec/models/users/user_spec.rb" time="0.045628"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation .by_profession returns users with the provided profession" file="./spec/models/users/user_spec.rb" time="0.056072"></testcase>
<testcase classname="spec.models.users.user_spec" name="practitioner identifier validation .by_profession returns no users for invalid profession" file="./spec/models/users/user_spec.rb" time="0.014257"></testcase>
<testcase classname="spec.models.sessions.open_session_processor_spec" name="Sessions::OpenSessionsProcessor#call closes, either complete or cancel, open sessions older than 24 hours" file="./spec/models/sessions/open_session_processor_spec.rb" time="0.000009"><skipped/></testcase>
<testcase classname="spec.models.sessions.open_session_processor_spec" name="Sessions::OpenSessionsProcessor#sessions_eligible_for_processing returns open sessions older than 24 hours" file="./spec/models/sessions/open_session_processor_spec.rb" time="0.163235"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready returns success (200) and the exportable" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.356992"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready returns not found (404) if the exportable is not found" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.028661"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready creates a pharmacy execution for medication exportables" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.422992"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready returns unprocessable entity (422) when marking an exported record" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.257741"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready returns unprocessable entity (422) when marking a ready record" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.265703"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready creates a billing execution for billing exportables" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.313577"></testcase>
<testcase classname="spec.requests.exports.ready_exportable_spec" name="Mark exportable as ready returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/exports/ready_exportable_spec.rb" time="0.255728"></testcase>
<testcase classname="spec.models.executions.reports.transport_overview_spec" name="Executions::Reports::TransportOverview is expected to be thin" file="./spec/models/executions/reports/transport_overview_spec.rb" time="0.042257"></testcase>
<testcase classname="spec.models.executions.reports.transport_overview_spec" name="Executions::Reports::TransportOverview#sanitize_payload sanitizes payload" file="./spec/models/executions/reports/transport_overview_spec.rb" time="0.021694"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given invalid hex codes #f1f1 should not be valid" file="./spec/validators/color_validator_spec.rb" time="0.002751"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given invalid hex codes #ff should not be valid" file="./spec/validators/color_validator_spec.rb" time="0.002246"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given invalid hex codes #fffffff should not be valid" file="./spec/validators/color_validator_spec.rb" time="0.002122"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given valid hex codes #ff00ff should be valid" file="./spec/validators/color_validator_spec.rb" time="0.002003"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given valid hex codes #fff should be valid" file="./spec/validators/color_validator_spec.rb" time="0.001732"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given valid hex codes #f1f1f1 should be valid" file="./spec/validators/color_validator_spec.rb" time="0.001729"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given valid hex codes #f0f should be valid" file="./spec/validators/color_validator_spec.rb" time="0.001733"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator validations given valid hex codes #ffffff should be valid" file="./spec/validators/color_validator_spec.rb" time="0.001669"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator error messages when the message is not defined adds the default message" file="./spec/validators/color_validator_spec.rb" time="0.002280"></testcase>
<testcase classname="spec.validators.color_validator_spec" name="ColorValidator error messages when the message is defined adds the customized message" file="./spec/validators/color_validator_spec.rb" time="0.001865"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry validates scope" file="./spec/models/logbook/entry_spec.rb" time="0.057127"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to validate that :type cannot be empty/falsy" file="./spec/models/logbook/entry_spec.rb" time="0.011257"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry validates type/category consistency" file="./spec/models/logbook/entry_spec.rb" time="0.125303"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to validate that :type is either ‹&quot;medication&quot;›, ‹&quot;packed_cells&quot;›, ‹&quot;vaccination&quot;›, ‹&quot;catheter_care&quot;›, ‹&quot;wound_care&quot;›, ‹&quot;wound_evaluation&quot;›, ‹&quot;anaphylactic_shock&quot;›, ‹&quot;aneurysm&quot;›, ‹&quot;arrythmia&quot;›, ‹&quot;bleeding&quot;›, ‹&quot;coagulation&quot;›, ‹&quot;deconnection&quot;›, ‹&quot;decreased_blood_flow&quot;›, ‹&quot;fever&quot;›, ‹&quot;hematoma&quot;›, ‹&quot;hemolysis&quot;›, ‹&quot;hypotension&quot;›, ‹&quot;hypoglycemia&quot;›, ‹&quot;infection&quot;›, ‹&quot;ischaemia&quot;›, ‹&quot;machine_malfunction&quot;›, ‹&quot;muscle_cramps&quot;›, ‹&quot;stenosis&quot;›, ‹&quot;thrombosis&quot;›, ‹&quot;catheter_lock&quot;›, ‹&quot;fistula_inspection&quot;›, ‹&quot;foot_check&quot;›, ‹&quot;medication_check&quot;›, ‹&quot;miscellaneous&quot;›, ‹&quot;monitoring&quot;›, ‹&quot;access_flow&quot;›, ‹&quot;activated_clotting_time&quot;›, ‹&quot;bladder_residue&quot;›, ‹&quot;blood_pressure&quot;›, ‹&quot;body_composition&quot;›, ‹&quot;cardiothoracic_ratio&quot;›, ‹&quot;cumulated_treated_blood_volume&quot;›, ‹&quot;central_venous_pressure&quot;›, ‹&quot;dialyzer_status&quot;›, ‹&quot;glycemia&quot;›, ‹&quot;glycemia_check&quot;›, ‹&quot;machine&quot;›, ‹&quot;oxygen_saturation&quot;›, ‹&quot;pain_score&quot;›, ‹&quot;pulse&quot;›, ‹&quot;temperature&quot;›, ‹&quot;urine_volume_24h&quot;›, ‹&quot;vital_signs&quot;›, ‹&quot;weight&quot;›, ‹&quot;standing_blood_pressure&quot;›, ‹&quot;fall_risk&quot;›, ‹&quot;note&quot;›, ‹&quot;session_reminder_registered&quot;›, ‹&quot;session_reminder_completed&quot;›, ‹&quot;connect_phase&quot;›, ‹&quot;disconnect_phase&quot;›, ‹&quot;preparation_phase&quot;›, ‹&quot;reflection_phase&quot;›, ‹&quot;session_canceled&quot;›, ‹&quot;session_ended&quot;›, ‹&quot;session_paused&quot;›, ‹&quot;treatment_phase&quot;›, ‹&quot;check_on_patient&quot;›, ‹&quot;anticoagulation&quot;›, ‹&quot;artificial_kidney&quot;›, ‹&quot;bolus&quot;›, ‹&quot;hemostasis&quot;›, ‹&quot;machine_preparation&quot;›, ‹&quot;treatment_progress&quot;›, ‹&quot;ultrafiltration_calculation&quot;›, ‹&quot;vascular_access&quot;›, ‹&quot;session_prescription_changed&quot;›, ‹&quot;blood_test&quot;›, ‹&quot;consultation&quot;›, ‹&quot;culture_sample&quot;›, ‹&quot;ecg&quot;›, ‹&quot;hemocultures&quot;›, ‹&quot;medical_imaging&quot;›, or ‹&quot;bidimensional_echo&quot;›" file="./spec/models/logbook/entry_spec.rb" time="0.209895"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to belong to author required: true" file="./spec/models/logbook/entry_spec.rb" time="0.005789"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to belong to patient required: true" file="./spec/models/logbook/entry_spec.rb" time="0.005332"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to belong to session optional: true" file="./spec/models/logbook/entry_spec.rb" time="0.005947"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to validate that :category is either ‹&quot;administration&quot;›, ‹&quot;care&quot;›, ‹&quot;complication&quot;›, ‹&quot;follow_up&quot;›, ‹&quot;measurement&quot;›, ‹&quot;note&quot;›, ‹&quot;session&quot;›, ‹&quot;session_prescription&quot;›, or ‹&quot;examination&quot;›" file="./spec/models/logbook/entry_spec.rb" time="0.029364"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to belong to promoted_by optional: true" file="./spec/models/logbook/entry_spec.rb" time="0.005968"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry is expected to validate that :journals cannot be empty/falsy" file="./spec/models/logbook/entry_spec.rb" time="0.006978"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry#viewer_can_{edit,delete}? always equals false for a user other the author or promoter" file="./spec/models/logbook/entry_spec.rb" time="0.022096"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry#viewer_can_{edit,delete}? equals true for the author within 8 hours after creation" file="./spec/models/logbook/entry_spec.rb" time="0.021212"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry#viewer_can_{edit,delete}? equals false for the author more than 8 hours after creation" file="./spec/models/logbook/entry_spec.rb" time="0.021471"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry#viewer_can_{edit,delete}? equals false for the promoter more than 8 hours after creation" file="./spec/models/logbook/entry_spec.rb" time="0.032479"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry#viewer_can_{edit,delete}? equals true for the promoter within 8 hours after promotion" file="./spec/models/logbook/entry_spec.rb" time="0.032519"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.any_tags returns all entries with any given tag" file="./spec/models/logbook/entry_spec.rb" time="0.212010"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.all_tags returns all entries with all given tags" file="./spec/models/logbook/entry_spec.rb" time="0.255463"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.period returns last two week&apos;s entries" file="./spec/models/logbook/entry_spec.rb" time="0.451343"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.period returns today entries" file="./spec/models/logbook/entry_spec.rb" time="0.427338"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.period returns last week&apos;s entries" file="./spec/models/logbook/entry_spec.rb" time="0.446512"></testcase>
<testcase classname="spec.models.logbook.entry_spec" name="Logbook::Entry.period returns last month&apos;s entries" file="./spec/models/logbook/entry_spec.rb" time="0.466366"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients supports deviations without arrival time - possible in an earlier version" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.265825"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients can return an empty list" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.172910"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns a list ordered by arrival time" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.296885"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns a list of planned patients" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.155234"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients fails if given room does not exist" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.058690"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns an empty list if given ids are inconsistent" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.097546"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients filters out assigned patients" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.349138"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns patient  on selected position first" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.301436"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns forbidden if the user isn&apos;t authorized" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.028754"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns an empty list if schema starte date is in the future" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.186357"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients fails if given shift does not exist" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.063974"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients returns an empty list day does not match" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.240967"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients fails if given position does not exist" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.120513"></testcase>
<testcase classname="spec.requests.patients.get_planned_patients_spec" name="GetPlannedPatients includes schema deviations" file="./spec/requests/patients/get_planned_patients_spec.rb" time="0.313294"></testcase>
<testcase classname="spec.requests.infrastructure.get_center_acl_spec" name="GetCenterAcl returns empty array when no user has rights to this center" file="./spec/requests/infrastructure/get_center_acl_spec.rb" time="0.054712"></testcase>
<testcase classname="spec.requests.infrastructure.get_center_acl_spec" name="GetCenterAcl returns not found (404) if the center is not found" file="./spec/requests/infrastructure/get_center_acl_spec.rb" time="0.078726"></testcase>
<testcase classname="spec.requests.infrastructure.get_center_acl_spec" name="GetCenterAcl returns array containing the center acl" file="./spec/requests/infrastructure/get_center_acl_spec.rb" time="0.198881"></testcase>
<testcase classname="spec.requests.infrastructure.get_center_acl_spec" name="GetCenterAcl returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/get_center_acl_spec.rb" time="0.056893"></testcase>
<testcase classname="spec.requests.prescriptions.get_prescription_spec" name="GetPrescription returns not found if patient is not found" file="./spec/requests/prescriptions/get_prescription_spec.rb" time="0.032702"></testcase>
<testcase classname="spec.requests.prescriptions.get_prescription_spec" name="GetPrescription properly translates titles" file="./spec/requests/prescriptions/get_prescription_spec.rb" time="0.114297"></testcase>
<testcase classname="spec.requests.prescriptions.get_prescription_spec" name="GetPrescription returns the serialized form definition" file="./spec/requests/prescriptions/get_prescription_spec.rb" time="0.221328"></testcase>
<testcase classname="spec.requests.prescriptions.get_prescription_spec" name="GetPrescription requires read rights" file="./spec/requests/prescriptions/get_prescription_spec.rb" time="0.082522"></testcase>
<testcase classname="spec.requests.prescriptions.get_prescription_spec" name="GetPrescription returns unprocessable if patient has no treatment" file="./spec/requests/prescriptions/get_prescription_spec.rb" time="0.054239"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_table_spec" name="session_progress#index requires authorization" file="./spec/requests/sessions/get_session_progress_table_spec.rb" time="0.204058"></testcase>
<testcase classname="spec.requests.sessions.get_session_progress_table_spec" name="session_progress#index returns the graph data" file="./spec/requests/sessions/get_session_progress_table_spec.rb" time="0.270138"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator is expected to respond to #on_days" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.200845"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator is expected to respond to #on_even_weeks" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.184857"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator is expected to respond to #on_odd_weeks" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.187087"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator session completed is expected not to be scheduled" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.240055"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator session planned outside of evaluation date is expected not to be scheduled" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.182065"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator session ongoing is expected to be scheduled" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.229305"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator session planned is expected to be scheduled" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.196999"></testcase>
<testcase classname="spec.models.planning.evaluators.day_evaluator_spec" name="Planning::Evaluators::DayEvaluator no session planned is expected not to be scheduled" file="./spec/models/planning/evaluators/day_evaluator_spec.rb" time="0.204977"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_spec" name="UpdateIntervention requires write rights" file="./spec/requests/vascular_access/update_intervention_spec.rb" time="0.041662"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_spec" name="UpdateIntervention returns audit info" file="./spec/requests/vascular_access/update_intervention_spec.rb" time="0.181889"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_spec" name="UpdateIntervention updates the given intervention" file="./spec/requests/vascular_access/update_intervention_spec.rb" time="0.128487"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_spec" name="UpdateIntervention fails if intervention type does not exist" file="./spec/requests/vascular_access/update_intervention_spec.rb" time="0.105895"></testcase>
<testcase classname="spec.requests.vascular_access.update_intervention_spec" name="UpdateIntervention returns not found if the intervention does not exist" file="./spec/requests/vascular_access/update_intervention_spec.rb" time="0.115146"></testcase>
<testcase classname="spec.requests.medications.update_medication_administration_spec" name="UpdateMedicationAdministration returns success (200) if updated " file="./spec/requests/medications/update_medication_administration_spec.rb" time="0.237007"></testcase>
<testcase classname="spec.requests.medications.update_medication_administration_spec" name="UpdateMedicationAdministration returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/update_medication_administration_spec.rb" time="0.180787"></testcase>
<testcase classname="spec.requests.medications.update_medication_administration_spec" name="UpdateMedicationAdministration returns not found (404) if the administration is not found" file="./spec/requests/medications/update_medication_administration_spec.rb" time="0.026338"></testcase>
<testcase classname="spec.models.requests.templates.base_spec" name="Requests::Templates::Base is expected to belong to requestable required: true" file="./spec/models/requests/templates/base_spec.rb" time="0.025061"></testcase>
<testcase classname="spec.models.requests.templates.base_spec" name="Requests::Templates::Base is expected to belong to recorder required: true" file="./spec/models/requests/templates/base_spec.rb" time="0.027129"></testcase>
<testcase classname="spec.models.requests.templates.base_spec" name="Requests::Templates::Base is expected to belong to patient required: true" file="./spec/models/requests/templates/base_spec.rb" time="0.019629"></testcase>
<testcase classname="spec.models.requests.templates.base_spec" name="Requests::Templates::Base is expected to belong to schedule optional: true" file="./spec/models/requests/templates/base_spec.rb" time="0.023207"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments updates patient treatment" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.273359"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments accepts going from &apos;chronic&apos; to &apos;acute&apos;" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.218873"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments does not add entry to history if data does not change" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.217220"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments fails if combination of params is not valid" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.150282"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments fails if unauthorized" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.154188"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments fails if patient does not exist" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.092383"></testcase>
<testcase classname="spec.requests.patients.update_patient_treatment_spec" name="PatientTreatments updates the patient master record" file="./spec/requests/patients/update_patient_treatment_spec.rb" time="0.449489"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient returns method not allowed (405) when updating within a supervised source" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.047224"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient returns success (200) and an updated ingredient" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.057202"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient can also update codes" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.094442"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient returns unprocessable entity (422) when reusing a name within same source" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.053361"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient return success (200) when reusing a name from a different source" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.067469"></testcase>
<testcase classname="spec.requests.medications.update_ingredient_spec" name="Update ingredient returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/update_ingredient_spec.rb" time="0.034960"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator error messages when the message is defined adds the customized message" file="./spec/validators/unit_validator_spec.rb" time="0.001958"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator error messages when the message is not defined adds the default message" file="./spec/validators/unit_validator_spec.rb" time="0.002729"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator validations given valid units m should be valid" file="./spec/validators/unit_validator_spec.rb" time="0.003843"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator validations given valid units cm should be valid" file="./spec/validators/unit_validator_spec.rb" time="0.001849"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator validations given valid units km should be valid" file="./spec/validators/unit_validator_spec.rb" time="0.002560"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator validations given valid units mm should be valid" file="./spec/validators/unit_validator_spec.rb" time="0.002481"></testcase>
<testcase classname="spec.validators.unit_validator_spec" name="UnitValidator validations given invalid units an empty string should not be valid" file="./spec/validators/unit_validator_spec.rb" time="0.002192"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position creates a position with used to false" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.086920"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position fails if room is in grid mode and has reached max capacity" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.087057"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position creates a position" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.056915"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position fails if number not unique in room" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.061493"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position requires the correct rights" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.046920"></testcase>
<testcase classname="spec.requests.infrastructure.create_position_spec" name="Positions Create Position requires the given room to exist" file="./spec/requests/infrastructure/create_position_spec.rb" time="0.032416"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_vascular_access_site_attachment_spec" name="DeleteAccessSiteAttachment returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/destroy_vascular_access_site_attachment_spec.rb" time="0.210267"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_vascular_access_site_attachment_spec" name="DeleteAccessSiteAttachment deletes the site attachment" file="./spec/requests/vascular_access/destroy_vascular_access_site_attachment_spec.rb" time="0.203454"></testcase>
<testcase classname="spec.requests.vascular_access.destroy_vascular_access_site_attachment_spec" name="DeleteAccessSiteAttachment returns not_found (404) if the site attachment cannot be found" file="./spec/requests/vascular_access/destroy_vascular_access_site_attachment_spec.rb" time="0.027279"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_spec" name="POST /api/connectors returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/infrastructure/create_connector_spec.rb" time="0.024494"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_spec" name="POST /api/connectors creates audit for create action" file="./spec/requests/infrastructure/create_connector_spec.rb" time="0.033935"></testcase>
<testcase classname="spec.requests.infrastructure.create_connector_spec" name="POST /api/connectors return success (200) and created a connector" file="./spec/requests/infrastructure/create_connector_spec.rb" time="0.033858"></testcase>
<testcase classname="spec.requests.patients.get_patient_diet_spec" name="GetPatientDiet returns not found if the patient has no diet" file="./spec/requests/patients/get_patient_diet_spec.rb" time="0.087151"></testcase>
<testcase classname="spec.requests.patients.get_patient_diet_spec" name="GetPatientDiet returns patient&apos;s diet" file="./spec/requests/patients/get_patient_diet_spec.rb" time="0.116278"></testcase>
<testcase classname="spec.requests.patients.get_patient_diet_spec" name="GetPatientDiet fails if patient does not exist" file="./spec/requests/patients/get_patient_diet_spec.rb" time="0.026608"></testcase>
<testcase classname="spec.requests.patients.get_patient_diet_spec" name="GetPatientDiet requires read rights" file="./spec/requests/patients/get_patient_diet_spec.rb" time="0.094247"></testcase>
<testcase classname="spec.requests.patients.get_patient_diet_spec" name="GetPatientDiet returns current diet" file="./spec/requests/patients/get_patient_diet_spec.rb" time="0.135556"></testcase>
<testcase classname="spec.migrations.20200203111731_add_level_to_configurations_spec" name="AddLevelToConfigurations migrates configuration access level" file="./spec/migrations/20200203111731_add_level_to_configurations_spec.rb" time="0.052245"></testcase>
<testcase classname="spec.requests.medications.update_product_spec" name="Update product returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/update_product_spec.rb" time="0.046619"></testcase>
<testcase classname="spec.requests.medications.update_product_spec" name="Update product can set multidose" file="./spec/requests/medications/update_product_spec.rb" time="0.068582"></testcase>
<testcase classname="spec.requests.medications.update_product_spec" name="Update product returns success (200) and an product" file="./spec/requests/medications/update_product_spec.rb" time="0.072225"></testcase>
<testcase classname="spec.requests.medications.update_product_spec" name="Update product can nillify a category" file="./spec/requests/medications/update_product_spec.rb" time="0.066319"></testcase>
<testcase classname="spec.requests.patients.add_weight_spec" name="AddWeight returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/patients/add_weight_spec.rb" time="0.058772"></testcase>
<testcase classname="spec.requests.patients.add_weight_spec" name="AddWeight returns not_found (404) if the patient cannot be found" file="./spec/requests/patients/add_weight_spec.rb" time="0.027413"></testcase>
<testcase classname="spec.requests.patients.add_weight_spec" name="AddWeight creates a new weight for the given patient" file="./spec/requests/patients/add_weight_spec.rb" time="0.063120"></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_types_spec" name="GetInterventionTypes returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_intervention_types_spec.rb" time="0.027380"></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_types_spec" name="GetInterventionTypes returns the list of available intervention types" file="./spec/requests/vascular_access/get_intervention_types_spec.rb" time="0.041376"></testcase>
<testcase classname="spec.requests.vascular_access.get_intervention_types_spec" name="GetInterventionTypes returns the list of all intervention types " file="./spec/requests/vascular_access/get_intervention_types_spec.rb" time="0.033973"></testcase>
<testcase classname="spec.requests.integration.cancel_admission_spec" name="Integration Cancel admission leaves untouched if admission id is &apos;unknown&apos;" file="./spec/requests/integration/cancel_admission_spec.rb" time="0.191187"></testcase>
<testcase classname="spec.requests.integration.cancel_admission_spec" name="Integration Cancel admission succeeds if patient doesn&apos;t exist" file="./spec/requests/integration/cancel_admission_spec.rb" time="0.033529"></testcase>
<testcase classname="spec.requests.integration.cancel_admission_spec" name="Integration Cancel admission removes admission event, unsets admitted and updates session" file="./spec/requests/integration/cancel_admission_spec.rb" time="0.260365"></testcase>
<testcase classname="spec.integrations.executions.reports.program_book_spec" name="Asynchronous reports: program_book generates the report" file="./spec/integrations/executions/reports/program_book_spec.rb" time="0.298130"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.ultrafiltration_calculations_spec" name="List ultrafiltration calculations returns 403 forbidden if the user isn&apos;t authorized" file="./spec/requests/ultrafiltration_calculation/ultrafiltration_calculations_spec.rb" time="0.121511"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.ultrafiltration_calculations_spec" name="List ultrafiltration calculations returns the ultrafiltration calculations for the given session" file="./spec/requests/ultrafiltration_calculation/ultrafiltration_calculations_spec.rb" time="0.123705"></testcase>
<testcase classname="spec.requests.ultrafiltration_calculation.ultrafiltration_calculations_spec" name="List ultrafiltration calculations returns 404 not found if the session cannot be found" file="./spec/requests/ultrafiltration_calculation/ultrafiltration_calculations_spec.rb" time="0.035968"></testcase>
<testcase classname="spec.requests.infrastructure.update_transport_type_spec" name="Update transport type returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/infrastructure/update_transport_type_spec.rb" time="0.031040"></testcase>
<testcase classname="spec.requests.infrastructure.update_transport_type_spec" name="Update transport type allows to reuse the name of deleted transport type" file="./spec/requests/infrastructure/update_transport_type_spec.rb" time="0.049776"></testcase>
<testcase classname="spec.requests.infrastructure.update_transport_type_spec" name="Update transport type returns unprocessable entity (422) when updating to existing name" file="./spec/requests/infrastructure/update_transport_type_spec.rb" time="0.041258"></testcase>
<testcase classname="spec.requests.infrastructure.update_transport_type_spec" name="Update transport type returns success (200) and an updated transport type" file="./spec/requests/infrastructure/update_transport_type_spec.rb" time="0.043365"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem is expected to belong to billing_item class_name =&gt; Billing::Item required: true" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.237522"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem is expected to belong to exportable class_name =&gt; Exports::Exportable required: true" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.222218"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_type validates that only medication billing item is allowed when type is medication" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.785651"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_type validates that no medication billing item is allowed when type is billing" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.668579"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_center validates that billing item is administered in the center if one was specified" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.617763"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_center validates that billing item is allowed if none was specified" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.563116"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_exportable_billing_item_uniqueness validates that exportable and billing_item combinations are unique" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.244664"></testcase>
<testcase classname="spec.models.exports.exportable_billing_item_spec" name="Exports::ExportableBillingItem#validate_date_range validates that billing_item is in the date range" file="./spec/models/exports/exportable_billing_item_spec.rb" time="0.664775"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_type_spec" name="VascularAccess::InterventionType returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/create_intervention_type_spec.rb" time="0.026630"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_type_spec" name="VascularAccess::InterventionType returns success (200) and the created intervention_type" file="./spec/requests/vascular_access/create_intervention_type_spec.rb" time="0.033202"></testcase>
<testcase classname="spec.requests.vascular_access.create_intervention_type_spec" name="VascularAccess::InterventionType audits the create action" file="./spec/requests/vascular_access/create_intervention_type_spec.rb" time="0.038394"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct creates a default package for actual products" file="./spec/models/medications/services/create_product_spec.rb" time="0.017137"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct links the category" file="./spec/models/medications/services/create_product_spec.rb" time="0.014519"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct adds 1 form" file="./spec/models/medications/services/create_product_spec.rb" time="0.028044"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct adds ingredients by name" file="./spec/models/medications/services/create_product_spec.rb" time="0.046071"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct adds linked routes" file="./spec/models/medications/services/create_product_spec.rb" time="0.041271"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct adds ingredients by unit id" file="./spec/models/medications/services/create_product_spec.rb" time="0.039170"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct creates a new product product" file="./spec/models/medications/services/create_product_spec.rb" time="0.012542"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct can link actual products" file="./spec/models/medications/services/create_product_spec.rb" time="0.130408"></testcase>
<testcase classname="spec.models.medications.services.create_product_spec" name="Medications::Services::CreateProduct links the company" file="./spec/models/medications/services/create_product_spec.rb" time="0.019227"></testcase>
<testcase classname="spec.requests.medications.sync_product_spec" name="Sync Product returns forbidden (403) when the user isn&apos;t authorized" file="./spec/requests/medications/sync_product_spec.rb" time="0.053762"></testcase>
<testcase classname="spec.requests.medications.sync_product_spec" name="Sync Product returns success (200) and adds a sync job" file="./spec/requests/medications/sync_product_spec.rb" time="0.102350"></testcase>
<testcase classname="spec.requests.medications.sync_product_spec" name="Sync Product returns method not allowed (405) when syncing within an unsupervised source" file="./spec/requests/medications/sync_product_spec.rb" time="0.054676"></testcase>
<testcase classname="spec.models.sessions.history_spec" name="Sessions::History retrieves history from cached data" file="./spec/models/sessions/history_spec.rb" time="0.140382"></testcase>
<testcase classname="spec.models.sessions.history_spec" name="Sessions::History retrieves history from live data" file="./spec/models/sessions/history_spec.rb" time="0.147310"></testcase>
<testcase classname="spec.requests.tasks_spec" name="Tasks returns a task" file="./spec/requests/tasks_spec.rb" time="0.000012"><skipped/></testcase>
<testcase classname="spec.requests.devices.get_devices_spec" name="Devices::Device returns success (200) and alphabetically sorted devices" file="./spec/requests/devices/get_devices_spec.rb" time="0.083532"></testcase>
<testcase classname="spec.requests.devices.get_devices_spec" name="Devices::Device returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/devices/get_devices_spec.rb" time="0.040265"></testcase>
<testcase classname="spec.requests.devices.get_devices_spec" name="Devices::Device returns devices filtered on a center" file="./spec/requests/devices/get_devices_spec.rb" time="0.074020"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem is expected to belong to consumable required: true" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.005335"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#disabled? returns true if the consumable is disabled" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.007113"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#disabled? returns false if the consumable is enabled" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.002293"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#enable! enables an item" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.010526"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem validations is expected to validate that :name cannot be empty/falsy" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.015586"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem validations is expected to validate that :name is case-sensitively unique within the scope of :consumable_id" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.023488"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#consume! consumes a disposable an item" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.026784"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#disable! disables an item" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.010751"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#enabled? returns false if the consumable is disabled" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.002365"></testcase>
<testcase classname="spec.models.infrastructure.consumable_item_spec" name="Infrastructure::ConsumableItem#enabled? returns true if the consumable is enabled" file="./spec/models/infrastructure/consumable_item_spec.rb" time="0.002482"></testcase>
<testcase classname="spec.controllers.concerns.resource_pagination_spec" name="ResourcePaginator paginates a hash" file="./spec/controllers/concerns/resource_pagination_spec.rb" time="0.053346"></testcase>
<testcase classname="spec.controllers.concerns.resource_pagination_spec" name="ResourcePaginator paginates active records" file="./spec/controllers/concerns/resource_pagination_spec.rb" time="0.177521"></testcase>
<testcase classname="spec.controllers.concerns.resource_pagination_spec" name="ResourcePaginator paginates an array" file="./spec/controllers/concerns/resource_pagination_spec.rb" time="0.084221"></testcase>
<testcase classname="spec.controllers.concerns.resource_pagination_spec" name="ResourcePaginator shows second page when asked for" file="./spec/controllers/concerns/resource_pagination_spec.rb" time="0.093164"></testcase>
<testcase classname="spec.migrations.20200108120619_add_formulary_item_id_to_medication_administrations_spec" name="AddFormularyItemIdToMedicationAdministrations adds a reference to the formulary item" file="./spec/migrations/20200108120619_add_formulary_item_id_to_medication_administrations_spec.rb" time="0.215415"></testcase>
<testcase classname="spec.migrations.20200108120619_add_formulary_item_id_to_medication_administrations_spec" name="AddFormularyItemIdToMedicationAdministrations does not add a reference when there is no formulary item" file="./spec/migrations/20200108120619_add_formulary_item_id_to_medication_administrations_spec.rb" time="0.187322"></testcase>
<testcase classname="spec.requests.executions.get_execution_spec" name="Get execution returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/get_execution_spec.rb" time="0.043420"></testcase>
<testcase classname="spec.requests.executions.get_execution_spec" name="Get execution returns success (200) and the execution" file="./spec/requests/executions/get_execution_spec.rb" time="0.059561"></testcase>
<testcase classname="spec.requests.executions.get_execution_spec" name="Get execution returns not found (404) if the execution is not found" file="./spec/requests/executions/get_execution_spec.rb" time="0.029242"></testcase>
<testcase classname="spec.models.configurations.services.discover_spec" name="Configurations::Services::Discover publishes a discover message if enabled" file="./spec/models/configurations/services/discover_spec.rb" time="0.010845"></testcase>
<testcase classname="spec.models.configurations.services.discover_spec" name="Configurations::Services::Discover does not publish a discover message if disabled" file="./spec/models/configurations/services/discover_spec.rb" time="0.002261"></testcase>
<testcase classname="spec.models.configurations.services.currency_spec" name="Configurations::Services::Currency sets the default currency" file="./spec/models/configurations/services/currency_spec.rb" time="0.001753"></testcase>
<testcase classname="spec.migrations.20200127095856_migrate_clockwork_events_feature_toggle_spec" name="MigrateClockworkEventsFeatureToggle#up migrates purge patients job" file="./spec/migrations/20200127095856_migrate_clockwork_events_feature_toggle_spec.rb" time="0.008652"></testcase>
<testcase classname="spec.migrations.20200127095856_migrate_clockwork_events_feature_toggle_spec" name="MigrateClockworkEventsFeatureToggle#down migrates purge patients job" file="./spec/migrations/20200127095856_migrate_clockwork_events_feature_toggle_spec.rb" time="0.007907"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_history_spec" name="GetVascularAccessSiteHistory returns site&apos;s vascular access history" file="./spec/requests/vascular_access/get_vascular_access_site_history_spec.rb" time="0.169445"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_history_spec" name="GetVascularAccessSiteHistory requires write rights" file="./spec/requests/vascular_access/get_vascular_access_site_history_spec.rb" time="0.026147"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_site_history_spec" name="GetVascularAccessSiteHistory fails if site does not exist" file="./spec/requests/vascular_access/get_vascular_access_site_history_spec.rb" time="0.025640"></testcase>
<testcase classname="spec.requests.executions.medications.create_import_spec" name="Create medications import execution enqueues a publish job" file="./spec/requests/executions/medications/create_import_spec.rb" time="0.058566"></testcase>
<testcase classname="spec.requests.executions.medications.create_import_spec" name="Create medications import execution returns created (201) and the execution transitioned to `enqueued`" file="./spec/requests/executions/medications/create_import_spec.rb" time="0.052558"></testcase>
<testcase classname="spec.requests.executions.medications.create_import_spec" name="Create medications import execution returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/executions/medications/create_import_spec.rb" time="0.026506"></testcase>
<testcase classname="spec.integrations.executions.reports.transport_overview_spec" name="Asynchronous reports: transport_overview generates the report" file="./spec/integrations/executions/reports/transport_overview_spec.rb" time="0.260465"></testcase>
<testcase classname="spec.models.executions.medications.discover_spec" name="Executions::Medications::Discover is expected not to be enqueueable" file="./spec/models/executions/medications/discover_spec.rb" time="0.014082"></testcase>
<testcase classname="spec.models.executions.medications.discover_spec" name="Executions::Medications::Discover#execute! publishes a service discovery message" file="./spec/models/executions/medications/discover_spec.rb" time="0.020180"></testcase>
<testcase classname="spec.models.executions.medications.discover_spec" name="Executions::Medications::Discover#schedule! schedules a job" file="./spec/models/executions/medications/discover_spec.rb" time="0.011819"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication succeeds if prescription dates are before start_date" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.126773"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication deduces product from variant" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.126488"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication saves the given magistral preparation" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.118058"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication accepts null variant and quantity if dose type is &apos;variable&apos;" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.154595"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if no variant is provided" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.118008"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication sets the dose type to fixed by default" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.134099"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication returns unprocessable entity (422) if quantity is too big" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.100098"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication does not fail if previous stopped medication does exist" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.134532"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication succeeds if prescription dates are not between start_date and end_date" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.124346"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if start and end dates overlap" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.090793"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if variant and product do not match" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.111299"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication rejects product medication with magistral preparation data" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.102631"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if it cannot find a variant when only the galenic form is provided for fixed dose" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.111903"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication returns unprocessable entity (422) if quantity is negative" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.127783"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if the given galenic form does not exist" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.105455"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication accepts variant and quantity even if dose type is &apos;variable&apos;" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.127683"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication saves the given medication prescription" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.151421"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if no variant is given and no variant exist w/out unit for fixed dose" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.099499"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication denies prescribing if not granted" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.088787"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication rejects magistral preparation medication with product data" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.097370"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication fails if patient does not exist" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.028031"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication does not fail if a previous medication of another type exists" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.167259"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication when a valid practitioner identifier is required succeeds if prescriber is a doctor" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.144309"></testcase>
<testcase classname="spec.requests.medications.prescribe_intradialytic_medication_spec" name="Medications PrescribeIntradialyticMedication when a valid practitioner identifier is required fails if prescriber is not a doctor" file="./spec/requests/medications/prescribe_intradialytic_medication_spec.rb" time="0.108970"></testcase>
<testcase classname="spec.models.patients.unenrollment_spec" name="Patients::Unenrollment is expected to belong to patient required: true" file="./spec/models/patients/unenrollment_spec.rb" time="0.003991"></testcase>
<testcase classname="spec.models.patients.unenrollment_spec" name="Patients::Unenrollment is expected to define :reason as an enum backed by an integer" file="./spec/models/patients/unenrollment_spec.rb" time="0.001815"></testcase>
<testcase classname="spec.models.patients.unenrollment_spec" name="Patients::Unenrollment is expected to belong to user required: true" file="./spec/models/patients/unenrollment_spec.rb" time="0.003306"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite returns not found if the access site does not exist" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.216278"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite requires write rights" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.098229"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite updates the given vascular access site" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite updates emergency patient" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.209039"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite returns audit info" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.218155"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite updates metadata for catheter" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.197184"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite cannot modify already defined fields" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.205912"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite updates the given vascular access site status" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.345454"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite when updating the catheter type from temporary to permanent makes audit for both sites" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.462037"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite when updating the catheter type from temporary to permanent creates a new identical catheter site as permanent" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.375152"></testcase>
<testcase classname="spec.requests.vascular_access.update_vascular_access_site_spec" name="UpdateVascularAccessSite when updating the catheter type from temporary to permanent updates the catheter site to permanently removed" file="./spec/requests/vascular_access/update_vascular_access_site_spec.rb" time="0.402358"></testcase>
<testcase classname="spec.integrations.executions.reports.session_sign_off_spec" name="Asynchronous reports: session_sign_off generates the report" file="./spec/integrations/executions/reports/session_sign_off_spec.rb" time="0.268556"></testcase>
<testcase classname="spec.requests.report_templates.get_base_template_spec" name="Get base templates returns an error when unauthorized" file="./spec/requests/report_templates/get_base_template_spec.rb" time="0.025977"></testcase>
<testcase classname="spec.requests.report_templates.get_base_template_spec" name="Get base templates gets a tlf file of report" file="./spec/requests/report_templates/get_base_template_spec.rb" time="0.023797"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler drops the message when the source was not found" file="./spec/models/medications/providers/handler_spec.rb" time="0.004921"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler drops the message when the source has an incompatible version" file="./spec/models/medications/providers/handler_spec.rb" time="0.008584"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler drops the message when the source was not enabled" file="./spec/models/medications/providers/handler_spec.rb" time="0.008431"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler updates the last_seen_at timestamp on the source" file="./spec/models/medications/providers/handler_spec.rb" time="0.076687"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler when an internal error occurred transitions the execution to `errored`" file="./spec/models/medications/providers/handler_spec.rb" time="0.078573"></testcase>
<testcase classname="spec.models.medications.providers.handler_spec" name="Medications::Providers::Handler when an internal error occurred attaches errors to the execution" file="./spec/models/medications/providers/handler_spec.rb" time="0.098368"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to validate that :date cannot be empty/falsy" file="./spec/models/planning/deviation_spec.rb" time="0.007210"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to validate that :type is either ‹&quot;add&quot;› or ‹&quot;remove&quot;›" file="./spec/models/planning/deviation_spec.rb" time="0.011767"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to belong to shift required: true" file="./spec/models/planning/deviation_spec.rb" time="0.006582"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to have one room" file="./spec/models/planning/deviation_spec.rb" time="0.002287"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to belong to position required: true" file="./spec/models/planning/deviation_spec.rb" time="0.005554"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation is expected to belong to patient required: true" file="./spec/models/planning/deviation_spec.rb" time="0.005593"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation when removing a deviation is expected not to validate that :arrival_time cannot be empty/falsy" file="./spec/models/planning/deviation_spec.rb" time="0.005498"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation#counterpart finds deviation conterpart" file="./spec/models/planning/deviation_spec.rb" time="0.110236"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation#counterpart returns null if deviation has no conterpart" file="./spec/models/planning/deviation_spec.rb" time="0.091038"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation.this_week_and_upcoming_for only returns deviations for the given patient" file="./spec/models/planning/deviation_spec.rb" time="0.166601"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation.this_week_and_upcoming_for does not return past deviations for the given patient" file="./spec/models/planning/deviation_spec.rb" time="0.174864"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation.this_week_and_upcoming_for returns upcoming deviations from the start of the week for the given patient" file="./spec/models/planning/deviation_spec.rb" time="0.096562"></testcase>
<testcase classname="spec.models.planning.deviation_spec" name="Planning::Deviation when adding a deviation is expected to validate that :arrival_time cannot be empty/falsy" file="./spec/models/planning/deviation_spec.rb" time="0.006318"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_chart_spec" name="GetChart returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/vascular_access/get_vascular_access_chart_spec.rb" time="0.028814"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_chart_spec" name="GetChart returns unprocessable_entity (422) if chart cannot be found" file="./spec/requests/vascular_access/get_vascular_access_chart_spec.rb" time="0.042615"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_chart_spec" name="GetChart returns access flow history chart" file="./spec/requests/vascular_access/get_vascular_access_chart_spec.rb" time="0.107198"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_chart_spec" name="GetChart returns not_found (404) if the access site cannot be found" file="./spec/requests/vascular_access/get_vascular_access_chart_spec.rb" time="0.024117"></testcase>
<testcase classname="spec.requests.vascular_access.get_vascular_access_chart_spec" name="GetChart returns complications history chart" file="./spec/requests/vascular_access/get_vascular_access_chart_spec.rb" time="0.103452"></testcase>
<testcase classname="spec.requests.reports.get_home_medication_schedule_report_spec" name="Get home medication schedule returns a PDF of the home medication schedule" file="./spec/requests/reports/get_home_medication_schedule_report_spec.rb" time="0.141455"></testcase>
<testcase classname="spec.lib.validators.format_validator_spec" name="Validators::FormatValidator accepts valid values according to the format" file="./spec/lib/validators/format_validator_spec.rb" time="0.001747"></testcase>
<testcase classname="spec.lib.validators.format_validator_spec" name="Validators::FormatValidator also rejects nil values" file="./spec/lib/validators/format_validator_spec.rb" time="0.002047"></testcase>
<testcase classname="spec.lib.validators.format_validator_spec" name="Validators::FormatValidator rejects invalid valid values" file="./spec/lib/validators/format_validator_spec.rb" time="0.001961"></testcase>
<testcase classname="spec.models.medications.category_spec" name="Medications::Category is expected to have many products dependent =&gt; nullify" file="./spec/models/medications/category_spec.rb" time="0.002279"></testcase>
<testcase classname="spec.models.medications.category_spec" name="Medications::Category is expected to validate that :name cannot be empty/falsy" file="./spec/models/medications/category_spec.rb" time="0.007500"></testcase>
<testcase classname="spec.models.medications.category_spec" name="Medications::Category is expected to validate that :name is case-sensitively unique" file="./spec/models/medications/category_spec.rb" time="0.011126"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_spec" name="Centers when deactivating a center fails when the center is not found" file="./spec/requests/infrastructure/delete_center_spec.rb" time="0.025570"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_spec" name="Centers when deactivating a center requires the correct rights" file="./spec/requests/infrastructure/delete_center_spec.rb" time="0.031413"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_spec" name="Centers when deactivating a center returns 422 when used in a session" file="./spec/requests/infrastructure/delete_center_spec.rb" time="0.152879"></testcase>
<testcase classname="spec.requests.infrastructure.delete_center_spec" name="Centers when deactivating a center soft deletes a center and it descendants" file="./spec/requests/infrastructure/delete_center_spec.rb" time="0.076033"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments unenrolls the patient" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.115100"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments stops all active plannings for the unenrolled patient" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.192701"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments removes all future plannings for the unenrolled patient" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.350899"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments fails if patient not found" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.031702"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments fails if unauthorized" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.077620"></testcase>
<testcase classname="spec.requests.enrollments.unenrollments_spec" name="Enrollments fails if there is an ongoing session" file="./spec/requests/enrollments/unenrollments_spec.rb" time="0.124465"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType (de-)serializes" file="./spec/types/quantity_type_spec.rb" time="0.011896"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType#cast returns a quantity when the object is a hash" file="./spec/types/quantity_type_spec.rb" time="0.003417"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType#cast returns a quantity when the object is a string" file="./spec/types/quantity_type_spec.rb" time="0.005597"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType#cast raises a TypeError when the object cannot be cast" file="./spec/types/quantity_type_spec.rb" time="0.001735"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType#cast returns the object when the object is a quantity" file="./spec/types/quantity_type_spec.rb" time="0.015628"></testcase>
<testcase classname="spec.types.quantity_type_spec" name="QuantityType#cast returns nil when object is nil" file="./spec/types/quantity_type_spec.rb" time="0.001458"></testcase>
<testcase classname="spec.requests.medications.sources.destroy_source_spec" name="Destroy source returns no content (204)" file="./spec/requests/medications/sources/destroy_source_spec.rb" time="0.053175"></testcase>
<testcase classname="spec.requests.medications.sources.destroy_source_spec" name="Destroy source returns not found (404) if the source is not found" file="./spec/requests/medications/sources/destroy_source_spec.rb" time="0.027487"></testcase>
<testcase classname="spec.requests.medications.sources.destroy_source_spec" name="Destroy source returns forbidden (403) if the user isn&apos;t authorized" file="./spec/requests/medications/sources/destroy_source_spec.rb" time="0.024611"></testcase>
<testcase classname="spec.models.infrastructure.global_center_acl_spec" name="Infrastructure::GlobalCenterAcl is expected to belong to user required: true" file="./spec/models/infrastructure/global_center_acl_spec.rb" time="0.003356"></testcase>
<testcase classname="spec.models.executions.recip_e.cancel_spec" name="Executions::RecipE::Base#execute! updates prescription" file="./spec/models/executions/recip_e/cancel_spec.rb" time="0.068826"></testcase>
<testcase classname="spec.adapters.sessions.session_adapter_spec" name="Sessions::SessionAdapter serializes correctly" file="./spec/adapters/sessions/session_adapter_spec.rb" time="0.097060"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call doesn&apos;t return observations for which patient has no results" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.093742"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call ignores unknown parameters" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.070857"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call returns a sorted set of observations (newest first)" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.081738"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call filters results on subset" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.098922"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call translates observation units in the configured display unit" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.084292"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call translates observation units in the configured unit dialect" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.096445"></testcase>
<testcase classname="spec.models.laboratory.laboratory_result_repository_spec" name="Laboratory::LaboratoryResultRepository.call returns the last known reference ranges for an observation" file="./spec/models/laboratory/laboratory_result_repository_spec.rb" time="0.096321"></testcase>
<testcase classname="spec.requests.patients.update_transport_spec" name="Patients UpdatePatientTransport updates a patients preferred transport" file="./spec/requests/patients/update_transport_spec.rb" time="0.097034"></testcase>
<testcase classname="spec.requests.patients.update_transport_spec" name="Patients UpdatePatientTransport updates only the given fields" file="./spec/requests/patients/update_transport_spec.rb" time="0.099956"></testcase>
<testcase classname="spec.requests.patients.update_transport_spec" name="Patients UpdatePatientTransport denies updating patients transport if not granted" file="./spec/requests/patients/update_transport_spec.rb" time="0.074590"></testcase>
</testsuite>
